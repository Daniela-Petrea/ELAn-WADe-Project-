Language,URL,Released Year,Programming Paradigm,Computational Class,Usability,Technical Characteristics,Specific Language Types or Features,Abstract
Brainfork,https://esolangs.org/wiki/Brainfork,2004,,turing complete,implemented,cell-based; concurrent programming,brainfuck derivatives; languages; low-level,"Brainfork is a multithreaded variant of Brainfuck, invented by Asger Ipsen in 2004. Brainfork retains Brainfuck's eight commands and adds a ninth, Y, for forking."
Wierd,https://esolangs.org/wiki/Wierd,1997,,unknown computational class,implemented,stack-based,two-dimensional languages; low-level; languages,"Wierd is a graphical language developed by Chris Pressey, Ben Olmstead, and John Colagioia, in 1997."
PATH,https://esolangs.org/wiki/PATH,2003,,turing complete; turing tarpits,implemented,cell-based,languages; two-dimensional languages; low-level,"PATH, invented by Francis Rogers in August 2003, is a two-dimensional language inspired by Brainfuck and Befunge. PATH's environment, like Brainfuck's, consists of an array of memory cells all initialized to zero and character-based standard input and output. PATH understands the following commands:"
SNUSP,https://esolangs.org/wiki/SNUSP,2003,,turing complete,implemented,cell-based,two-dimensional languages; languages,"SNUSP (SNUSP's Not Unix, but a Structured Path) is a language with a two-dimensional code space, inspired by PATH. SNUSP is more orthogonal, specifies semantics more concretely, and optionally allows more advanced features."
Smallfuck,https://esolangs.org/wiki/Smallfuck,2002,,bounded-storage machine,no io; implemented,cell-based,languages; brainfuck derivatives,"Smallfuck is an esoteric programming language invented by Nikita Ayzikovsky around March 2002 for the purpose of compiling it to SMETANA.  It is a sized-down version of Brainfuck that operates only on bits, has limited data storage, and does not define input or output."
Spoon,https://esolangs.org/wiki/Spoon,1998,,turing complete,implemented,cell-based,brainfuck derivatives; languages; low-level,Spoon is a Brainfuck derivative invented by S. Goodwin in 1998. It uses Huffman-coded binary sequences to represent each instruction.
LNUSP,https://esolangs.org/wiki/LNUSP,2004,,turing complete,implemented,cell-based,languages; two-dimensional languages,LNUSP is a language with a two-dimensional data space and code space and 5 commands.
Kipple,https://esolangs.org/wiki/Kipple,2003,,turing complete; turing tarpits,non-interactive io; implemented,stack-based,languages; low-level,"Kipple is a minimalistic esoteric programming language with a set of  stacks, four operators, and a single control structure. Kipple was designed by Rune Berge in March, 2003."
SMETANA,https://esolangs.org/wiki/SMETANA,1994,,finite state automata,implemented; no io,,languages,"SMETANA, the Self-Modifying Extremely Tiny AutomatoN Application, is a language operating on a series of steps, with two instructions. It was invented around 1994 by Chris Pressey. ""Smetana"" means ""sour cream"" in Russian and Ukrainian languages. It also means ""cream"" in Czech and is the surname of a Czech composer."
Homespring,https://esolangs.org/wiki/Homespring,2003,,,implemented,,languages; high-level; thematic,"Homespring, alternatively HOtMEfSPRIbNG, is a high-level esoteric programming language created by Jeff Binder in 2003 with the express intention of being far higher level than anyone would ever reasonably need or want."
Oroogu,https://esolangs.org/wiki/Oroogu,2000,,,implemented,queue-based,languages,"Oroogu is a language created by Georg Kraml based around the queue as its sole data structure and a ""While Object X Contains One or More Items"" loop as its main system of flow control. Original documentation is difficult to come by since Kraml's site went down, but the language is simple enough to give a basic overview."
ODDBALL,https://esolangs.org/wiki/ODDBALL,,,,unimplemented,,languages; meta-languages,"ODDBALL, possibly an acronym for One Dimensional Deterministic Bully Automaton Layout Language, was created some time in the early 2000's by Tristan Parker for some reason or another. Its roots can be traced back to Lisp and ALPACA, though why anyone would do that is beyond me. In 2005, ODDBALL was released into the public domain, not through any sense of community enrichment, but out of sheer laziness."
ORK,https://esolangs.org/wiki/ORK,2005,object-oriented paradigm,turing complete,implemented,,languages; high-level,"ORK (Objekts R Kool), designed by Gregor Richards in 2005, is an object-oriented language that has a very verbose syntax, unlike most other esoteric programming languages.  It's object oriented to such a degree, that even simple operations (addition, subtraction, comparisons) require the instantiation of an object. According to the spec, its divine purpose in existance is to be the polar opposite of Brainfuck."
Whitespace,https://esolangs.org/wiki/Whitespace,2003,,,implemented,stack-based,languages; low-level,"Whitespace, designed in 2003 by Edwin Brady and Chris Morris, is an imperative, stack-based, esoteric programming language that uses only whitespace characters—space, tab, and linefeed—as syntax. All other characters are ignored. Whitespace got a brief moment of fame when it was posted on Slashdot on April 1st, 2003. Most people took it as an April Fool's joke, while it wasn't."
Muriel,https://esolangs.org/wiki/Muriel,2001,,turing complete,implemented,,languages,Muriel is an esoteric programming language designed by Matthew Westcott in 2001.
2L,https://esolangs.org/wiki/2L,2005,,turing complete,implemented,cell-based,languages; brainfuck derivatives; two-dimensional languages; low-level,"2L (the Two Language), designed by Gregor Richards, is an esoteric programming language derived loosely from the PATH programming language and Brainfuck.  2L is Turing Complete."
ALPACA,https://esolangs.org/wiki/ALPACA,1998,,,implemented,,languages; meta-languages,ALPACA is a meta-language designed by Chris Pressey sometime around 1997-1999.  The name stands for A Language for Programming Arbitrary Cellular Automata.
Argh!,https://esolangs.org/wiki/Argh!,2004,,turing complete,implemented,cell-based; stack-based,languages; two-dimensional languages,"Argh! and its successor Aargh!, both invented by Sascha Wilde, are Befunge-like esoteric programming languages, laid out in two dimensions. Each is limited to 80 columns wide, but Aargh! has an unlimited number of rows, whereas Argh! is limited to 40. The idea was to make sure Aargh! was Turing-complete."
Aura,https://esolangs.org/wiki/Aura,2004,,unknown computational class,implemented,,languages; low-level,"Aura is an esoteric programming language invented by Jamie Aczel. It is inspired by Brainfuck, but its logic is more like Malbolge."
Whirl,https://esolangs.org/wiki/Whirl,2004,,turing tarpits,implemented,,languages; low-level,"Whirl is an esoteric programming language invented by Sean Heber (2004), with only two instructions, 0 and 1. These instructions rotate the Operations Ring and the Maths Ring, each of which has 12 sectors. The language therefore has 24 actual commands. The task of remembering the current orientation of each ring is left to the programmer."
Whenever,https://esolangs.org/wiki/Whenever,2001,,unknown computational class,implemented,,languages; high-level,"Whenever is an esoteric programming language by David Morgan-Mar, with no sense of urgency. The program code is like a to-do list: the interpreter is free to execute statements in any order it chooses. However, a line may contain a clause specifying that it cannot be executed until certain conditions are true. There are no control flow structures or variables."
SMITH,https://esolangs.org/wiki/SMITH,2000,,turing complete,implemented,cell-based,languages; low-level,"SMITH, for Self-Modifying Indecent Turing Hack, is an esoteric programming language designed by Chris Pressey in 2000.  It has no jumps whatsoever; the instruction pointer can only be incremented, and only by one instruction at a time. As a substitute for loops, the language allows code to be copied forward where it will be executed in the future."
TMMLPTEALPAITAFNFAL,https://esolangs.org/wiki/TMMLPTEALPAITAFNFAL,2000,,unknown computational class,implemented,,languages; joke languages,"TMMLPTEALPAITAFNFAL (The Multi-Million Language Project To End All Language Projects And Isn't That A Fine Name For A Language) is an esoteric programming language devised by Gerson Kurz. Actually, it is not only one language; it is a new language for each day. Based on a unique-day-index (relative to January 1, 1900) a new allowed set of commands and arbitrary limits for variable names take place. However the syntax of the language does not change and looks mostly like some BASIC dialect. For example, on August 16, 2004, the following rules applied:"
Numberix,https://esolangs.org/wiki/Numberix,2000,,turing complete,implemented,cell-based,languages; two-dimensional languages; low-level,"Numberix is an esoteric programming language by Jeffry Johnston that was designed to make the source appear as lines of hex digits. It could be described as a mix of Befunge, Assembly, Brainfuck, Wierd, BASIC and INTERCAL."
Iota,https://esolangs.org/wiki/Iota,2001,functional paradigm,turing tarpits,no io; implemented,,languages,"Iota is a Turing tarpit designed by Chris Barker, based in combinatory logic.  It uses only two symbols, * and i, but not every combination of them is syntactically correct; e.g. *i*ii is correct but *iii is not, as opposed to its ""sister language"" Jot in which every string of symbols is valid."
Befreak,https://esolangs.org/wiki/Befreak,2003,,,implemented,,languages; two-dimensional languages,"Befreak is a purely reversible programming language, by virtue of the fact that every instruction is reversible. This means it is impossible to destroy data in any way. Befreak seems to have been invented by Brent Kerby and Hilton Campbell."
Befunge,https://esolangs.org/wiki/Befunge,1993,,push-down automata; turing complete,implemented,stack-based,languages; two-dimensional languages; low-level,"Befunge is a two-dimensional esoteric programming language invented in 1993 by Chris Pressey with the goal of being as difficult to compile as possible.  Code is laid out on a two-dimensional grid of instructions, and execution can proceed in any direction of that grid."
Piet,https://esolangs.org/wiki/Piet,2001,,turing complete,implemented,stack-based,languages; two-dimensional languages; low-level; thematic,"Piet is a stack-based esoteric programming language in which programs look like abstract paintings. It uses 20 colors, of which 18 are related cyclically through a lightness cycle and a hue cycle. A single stack is used for data storage, together with some unusual operations."
Malbolge,https://esolangs.org/wiki/Malbolge,1998,,finite state automata,usability unknown; implemented,cell-based,languages,
FALSE,https://esolangs.org/wiki/FALSE,1993,,turing complete,implemented,stack-based,languages; low-level,"FALSE (named after the author's favourite truth value) is an early Forth-like esoteric programming language invented by Wouter van Oortmerssen in 1993, with the goal of creating a powerful (and obfuscated) language with as small a compiler as possible. The original compiler is 1024 bytes, written in 68000 assembler. FALSE inspired the prominent esoteric languages Brainfuck and Befunge, among other languages."
Choon,https://esolangs.org/wiki/Choon,2002,,turing complete,implemented,,languages,"Choon is an esoteric programming language that produces musical notes as its only output. It also has no data storage, but it can read any note it has previously output. Choon is Turing-complete and was invented in 2002 by Stephen Sykes."
OISC,https://esolangs.org/wiki/OISC,,,,concepts,,,"OISC is the One Instruction Set Computer (by analogy with RISC and CISC), a machine providing only one instruction. The abbreviation URISC (Ultimate RISC) has been used in some publications with the same meaning as OISC."
Chef,https://esolangs.org/wiki/Chef,2002,,turing complete,implemented,stack-based,languages; low-level; thematic,Chef is a stack-based language where programs look like cooking recipes. Chef was designed by David Morgan-Mar in 2002.
Bullfrog,https://esolangs.org/wiki/Bullfrog,,,,implemented,stack-based,languages; low-level,"Bullfrog is an esoteric programming language, designed by Ryan Kusnery, without conditional jumps. It is a sort of cross between Forth and Assembly. Despite the lack of conditional jumps they can be simulated because the JUMP instruction gets an address from the top of the stack."
Kayak,https://esolangs.org/wiki/Kayak,2002,,turing complete,,,languages,Kayak is a reversible esoteric programming language designed and implemented in 2002 by Ben Rudiak-Gould. Any procedure can be run forwards or backwards. Running a procedure backwards is equivalent to reversing its characters.
Lazy K,https://esolangs.org/wiki/Lazy K,2002,functional paradigm,turing tarpits; turing complete,implemented,,languages,"Lazy K, designed by Ben Rudiak-Gould, is a Turing tarpit based on combinatory logic. It is lazily evaluated and purely functional."
RUBE,https://esolangs.org/wiki/RUBE,1997,,,usability unknown; implemented,,languages; two-dimensional languages,"RUBE, invented in 1997 by Chris Pressey, is a bully automaton which employs a ""warehouse paradigm"" for computing: crates representing data are pushed around by machines called ""dozers"", lifted by winches, moved along on conveyor belts, etc."
L00P,https://esolangs.org/wiki/L00P,2001,,,implemented,,languages; brainfuck derivatives,L00P is a Brainfuck-derived programming language designed by Georg Westenberger. Its name comes from the fact that every program is enclosed within an implicit loop.
Dis,https://esolangs.org/wiki/Dis,1998,,bounded-storage machine,usability unknown; implemented,cell-based,languages,"Dis is an esoteric programming language designed by Ben Olmstead to walk the line between humanly impossible to program in and just extremely painful. While it is not quite as fearsome as Malbolge, Dis is still pretty bad."
Jot,https://esolangs.org/wiki/Jot,2001,functional paradigm,turing complete; turing tarpits,no io; implemented,,languages,"Jot (pronounced /dʒɑt/) is a Turing tarpit designed by Chris Barker, described as ""a better Gödel-numbering"" than its ""sister language"" Iota. It is based on combinatory logic. Every combination of 0's and 1's is a syntactically valid Jot program, including the null program."
BIT,https://esolangs.org/wiki/BIT,2004,,unknown computational class,implemented,cell-based,low-level; languages,"BIT is an esoteric programming language invented by David Morgan-Mar that treats all data like C treats strings. The language is strongly typed, with two variable types: bit and address-of-a-bit."
NULL,https://esolangs.org/wiki/NULL,,,,implemented,queue-based,low-level; languages,NULL is a programming language in zero dimensions. Programs in it are single positive integers of arbitrarily large size.
BDAMD,https://esolangs.org/wiki/BDAMD,2003,,,implemented,cell-based,languages; two-dimensional languages; low-level,"BDAMD, or Basic Demonic Asinine Multi-Dimensional programming language, is an esoteric programming language created by Joseph Strom. It is a Fungeoid similar to Brainfuck and Numberix."
INTERCAL,https://esolangs.org/wiki/INTERCAL,,,turing complete,implemented,,languages; low-level,"INTERCAL, an abbreviation for Compiler Language With No Pronounceable Acronym, was created in 1972, thus probably making it the first ever esoteric programming language. (See Prehistory of Esoteric Languages for an alternate view.)  Donald R. Woods and James M. Lyon invented it with the goal of creating a language with no similarities whatsoever to any existing programming languages. The language largely succeeds in this goal, apart from its use of an assignment statement. It also suffers from being one-dimensional, and the original version uses binary (but TriINTERCAL was created as a modern ternary version)."
Blank,https://esolangs.org/wiki/Blank,1997,,unknown computational class,implemented,stack-based,languages,Blank is a stack-based esoteric programming language developed by Andrew Turley in 1997.  Blank programs use single-character instructions contained within braces and numbers contained within brackets.  Each number is an 'instruction' in the sense that 'executing' a number means to push it onto the stack.
Bubble,https://esolangs.org/wiki/Bubble,2001,,,unimplemented,,languages,"Bubble (not to be confused with Bubbles) is an esoteric programming language designed by Jeffry Johnston in 2001, based on the bubble sort algorithm."
ETA,https://esolangs.org/wiki/ETA,1999,,,implemented,stack-based,languages,"ETA is an esoteric programming language designed by Mike Taylor in 1999. The name comes from its instruction set, based on the eight most common letters in the English language: E, T, A, O, I, N, S, H. ""Eta"" is also the seventh letter in the Greek alphabet, and ETA uses base-7 numbering. The language is stack-based and all characters that are not instructions are treated as comments.
Eta has 7 instructions:"
Fromage,https://esolangs.org/wiki/Fromage,2000,,,implemented,,languages,"Fromage is an esoteric programming language with ten instructions, all of which operate only on single bits. The name comes from FReakish Outright Mad languAGE."
GOTO++,https://esolangs.org/wiki/GOTO++,2002,,unknown computational class,implemented,,languages,"GOTO++ is a parody programming language designed by Sidoine de Wispelaere with help from Alexandre Béraud, based on the extensive use of GOTOs and labels (despite them being traditionally ""considered harmful"" in the programming community). Its keywords are some interesting mix of English and French."
Java2K,https://esolangs.org/wiki/Java2K,2000,,,implemented,,languages,"Java2K, devised by Gerson Kurz, is a probabilistic esoteric programming language; each function may or may not do what the programmer intended to do. The language uses a base-11 number system to approximate base 10."
REDGREEN,https://esolangs.org/wiki/REDGREEN,1999,,,implemented,cellular automata,languages; two-dimensional languages,"REDGREEN is an update to RUBE, written in ALPACA.  Unlike RUBE, it is a proper cellular automaton, not a bully automaton.  As such, its description is much cleaner and its behavior is easier to predict, while it retains most of the ""feel"" of RUBE."
SARTRE,https://esolangs.org/wiki/SARTRE,,,,unimplemented,,joke languages; languages,"SARTRE was originally a fictional programming language invented as a joke by John Unger Zussman, published in a list of ""lesser known programming languages"" in 1982, named after Jean-Paul Sartre, a French existentialist philosopher. He described it like this:"
Sorted!,https://esolangs.org/wiki/Sorted!,2000,,,,,languages,"Sorted! is a bilingual esoteric programming language written by Gerson Kurz, supporting both English and German. Every program consists of exactly 14 statements."
Thue,https://esolangs.org/wiki/Thue,2000,,turing complete; turing tarpits,implemented,,languages; low-level,
True,https://esolangs.org/wiki/True,1999,,,implemented,,languages,True is a variant of False with no random-access storage. All text files are valid True programs.
3code,https://esolangs.org/wiki/3code,2004,,unknown computational class,implemented,,languages,"3code is an esoteric programming language somewhat like functional programming created by Sean Heber (2004). Programs are limited to 3 local variables and 3 global variables, but can contain a number of function definitions and function calls."
Spiral,https://esolangs.org/wiki/Spiral,2003,,,implemented,deque-based,two-dimensional languages; languages,"Spiral, devised by User:Quintopia, is an esoteric programming language in two dimensions.  Unlike other two-dimensional languages (exception: Wierd), the instruction pointer decides where to move based on where there is code to execute.  In addition, the only data structure is a deque."
Toadskin,https://esolangs.org/wiki/Toadskin,,,turing complete; turing tarpits,implemented,stack-based,languages; brainfuck derivatives,Toadskin is a minimal esoteric programming language based on combining aspects of brainfuck and Forth.
Unlambda,https://esolangs.org/wiki/Unlambda,1999,functional paradigm,turing tarpits; turing complete,implemented,,languages,"Unlambda, designed by David Madore in 1999, is a minimal functional esoteric programming language based on combinatory logic. Notably, it was the first functional paradigm Turing tarpit."
ZT,https://esolangs.org/wiki/ZT,2002,,,implemented,,two-dimensional languages; languages,ZT is a two-dimensional esoteric programming language invented by Philipp Winterberg in which program flow is diagonal and commands are determined by the direction of program flow.
Sortle,https://esolangs.org/wiki/Sortle,2005,,turing complete,output only; implemented,,high-level; languages,"Sortle is an esoteric programming language created by Scott Feeney in 2005 based on the concept of insertion sort. Programs consist of lists of named expressions, which are sorted and evaluated from top to bottom. Expressions have no side effects; the result of an expression becomes the new name of the expression, and the list's order is adjusted accordingly."
Aheui,https://esolangs.org/wiki/Aheui,2005,,turing complete,implemented,stack-based; queue-based,languages; two-dimensional languages; cjk,"Aheui (아희 in Korean language) is the first esoteric programming language ever to be designed for Hangul, the Korean alphabet, designed by User:Puzzlet Chung."
ZOMBIE,https://esolangs.org/wiki/ZOMBIE,2004,,,implemented,,languages; thematic; high-level,"ZOMBIE, according to its author David Morgan-Mar, stands for Zombie-Oriented Machine-Being Interface Engine and was designed for necromancers, particularly evil ones."
PingPong,https://esolangs.org/wiki/PingPong,2001,object-oriented paradigm,turing complete,implemented,stack-based,languages; two-dimensional languages; low-level,PingPong is a 2D esoteric programming language similar to Befunge.
Ypsilax,https://esolangs.org/wiki/Ypsilax,2001,,turing complete,implemented,,languages; two-dimensional languages,"Ypsilax, invented by Chris Pressey in 2001, is a reflective (i.e. potentially self-modifying), non-deterministic esoteric programming language based on grid-rewriting.  Both the program and its state are rendered as symbols in a grid; in this manner, rules may rewrite the state, other rules, or both."
2iota,https://esolangs.org/wiki/2iota,2004,,turing tarpits; turing complete,implemented,,languages,"2iota is an esoteric programming language devised by Chris Pressey in 2004.  The successor to beta-Juliet and Portia, it is fairly minimal, aiming to be an event-oriented Turing tarpit."
Version,https://esolangs.org/wiki/Version,2001,,,implemented,,languages; high-level,"Version is an esoteric programming language based on the concept of ignorance-spaces, created by Chris Pressey in 2001."
Strelnokoff,https://esolangs.org/wiki/Strelnokoff,2001,,turing complete,implemented,,languages,"Strelnokoff is an esoteric programming language devised by Chris Pressey in 2001.  It is a non-deterministic imperative programming language; each instruction updates the global state of the program, but there is no guarantee as to the order in which instructions are executed."
Brackets,https://esolangs.org/wiki/Brackets,2000,,unknown computational class,usability unknown; implemented,,languages; low-level,[] is an esoteric programming language designed by Gerson Kurz which uses only the various brackets as commands.
0x29A,https://esolangs.org/wiki/0x29A,2004,,turing complete,implemented,stack-based,languages; low-level,"0x29A is an esoteric programming language created by David Lewis in 2004. It uses a mixture of imperative and functional programming, forming a new paradigm the creator calls dysfunctional programming."
Ale,https://esolangs.org/wiki/Ale,2003,,,implemented,cell-based,languages; low-level,Ale is an esoteric programming language designed by David Chipping.  It was named after what the author happened to be drinking at the time.
Emoticon,https://esolangs.org/wiki/Emoticon,2004,,turing complete,implemented,,languages; thematic,"Emoticon, designed by David Donachie in 2004, is an esoteric programming language which uses smileys for program instructions."
Enema,https://esolangs.org/wiki/Enema,2002,,,implemented,stack-based,languages,"Enema is an esoteric programming language in which most instructions can be redefined.
It was inspired by the Unefunge language (one-dimensional version of Befunge)."
REVERSE,https://esolangs.org/wiki/REVERSE,,,turing tarpits,implemented,,languages,"REVERSE is an esoteric programming language devised by Brian C. Smith. It supports control flow only by reversing direction, top to bottom (moving South) or bottom to top (moving North). Decision making is done by reversing as well. Data is manipulated within integers, floating points, and characters. Integers are signed and have no limits."
BFM,https://esolangs.org/wiki/BFM,2001,,,,,languages; brainfuck derivatives,"BFM, devised by Frédéric van der Plancke, is Brainfuck with macros, an extension to the popular Turing tarpit."
Boolfuck,https://esolangs.org/wiki/Boolfuck,2004,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; low-level,"Boolfuck is an esoteric programming language based on Brainfuck, but operating only on bits. It does, however, provide input and output."
BogusForth,https://esolangs.org/wiki/BogusForth,2004,,turing complete,implemented,stack-based,languages,BogusForth is an esoteric programming language inspired by Forth and False. BogusForth was created by Antonio Maschio in 2004.
Fortuna,https://esolangs.org/wiki/Fortuna,,,unknown computational class,unimplemented,,languages; brainfuck derivatives,"Fortuna is an esoteric programming language inspired by Brainfuck. Its mechanisms are based around the idea of a wheel, making Fortuna a turning tarpit."
SMITH sharp,https://esolangs.org/wiki/SMITH sharp,2000,,,,cell-based,languages,"SMITH# is an esoteric programming language by Gerson Kurz, descended from SMITH."
4DL,https://esolangs.org/wiki/4DL,2001,,,implemented,stack-based; multi-dimensional languages,languages,"4DL, which stands for 4 Dimensional Language, is an esoteric programming language designed by Cliff L. Biffle. 4DL programs exist in four-dimensional space. They are based around a single stack."
Gammaplex,https://esolangs.org/wiki/Gammaplex,2004,,turing complete,implemented,,languages; two-dimensional languages; high-level,Gammaplex is an esoteric programming language designed by Lode Vandevenne.  It is similar to Befunge in some respects; what makes it especially remarkable is the support for mouse input and graphical output.
BitChanger,https://esolangs.org/wiki/BitChanger,2000,,turing tarpits; turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,"BitChanger is a version of brainfuck that operates only on bits, and was created December 2, 2000 by Jeffry Johnston."
Prelude,https://esolangs.org/wiki/Prelude,2005,,turing complete,implemented,stack-based,languages,"Prelude is an esoteric programming language created by Nikita Ayzikovsky in 2005. It uses several ""voices"", or ""parts"", each with its own stack, executing instructions in parallel. It is Turing-complete (it is trivial to compile Brainfuck into Prelude using just two voices)."
Fugue,https://esolangs.org/wiki/Fugue,2005,,turing complete,implemented,stack-based,languages,"Fugue is an esoteric programming language created by Nikita Ayzikovsky in 2005. It shares semantics with its sister language, Prelude, but uses music as source code. Each ""voice"" in Prelude is indeed a separate voice in Fugue. Simultaneous instructions in Prelude correspond to notes in different voices sounding simultaneously; other than that, note durations don't matter."
Flip,https://esolangs.org/wiki/Flip,2001,,turing complete,implemented,concurrent programming,languages; two-dimensional languages,"Flip is a two-dimensional esoteric programming language designed by Rune Zedeler and Erik Søe Sørensen. Computation is performed by balls carrying values colliding with playfield elements; it has been described as ""a little like a game of billiards, if you play Programmers' Billiards."" The only other data storage mechanism is the possibility to self-modifyingly flip diagonal walls (called ""flippers"") - similarily to how the much newer BackFlip operates. Combined with elements which split and combine balls this requires rather than allows for multithreaded programming."
Bub,https://esolangs.org/wiki/Bub,,,turing complete,implemented,,languages; brainfuck derivatives,"Bub (Brainfuck Ugly Bodge) is a variant of Brainfuck designed by Matthew Westcott.  The essential difference is that Brainfuck's ""while""-like instructions are replaced by ""GOTO""-like ones."
Spaghetti,https://esolangs.org/wiki/Spaghetti,2001,,finite state automata,implemented,,languages,"Spaghetti, created by Jeffry Johnston in 2001, is ""designed to produce spaghetti code, to the point where every program line can be arranged pretty much randomly and the program should still function properly."""
Please Porige Hot,https://esolangs.org/wiki/Please Porige Hot,2004,,,implemented,,languages,Please Porige Hot [sic] is an esoteric programming language by User:Zzo38 with a superficial resemblance to SON-OF-UNBABTIZED.
Revaver,https://esolangs.org/wiki/Revaver,,,,,stack-based,languages,Revaver is a reversible esoteric programming language by zzo38.
Sansism,https://esolangs.org/wiki/Sansism,2003,,turing complete; turing tarpits,implemented,cell-based; multi-dimensional languages,languages; brainfuck derivatives; two-dimensional languages; low-level,"Sansism is an esoteric programming language devised by Safalra (Stephen Morley) in November 2003.  It is based on Brainfuck and Befunge. Originally a two-dimensional language, it was later generalised to function in any number of dimensions while still using the same eight instructions. Sansism is Turing Complete."
REGXY,https://esolangs.org/wiki/REGXY,,,turing tarpits,implemented,,languages,"REGXY is an esoteric programming language by User:Zzo38 based on regular expressions. It has two kinds of command, test and change. The program operates on an input string starting at the top of the program and running each command. On reaching the end it outputs the string. The command syntax and meaning is:"
YABALL,https://esolangs.org/wiki/YABALL,2005,,turing tarpits; turing complete,implemented,cell-based,languages; two-dimensional languages; brainfuck derivatives,"YABALL is a language inspired by Brainfuck, invented by Jannis Harder in 2005. Its aim is to add a more obscure code flow to Brainfuck. YABALL has a 2-dimensional code flow and 2 different flow modes. It's an acronym for Yet Another Brainfuck A Like Language. By an impossible accident the name YABALL has the same pronounciation as the Polish word for a cheap apple wine."
Beturing,https://esolangs.org/wiki/Beturing,2005,,,implemented,,languages; two-dimensional languages,"Beturing is an esoteric programming language devised by Chris Pressey in 2005; it is described as a ""Befunge-flavoured Turing machine""."
Archway,https://esolangs.org/wiki/Archway,2005,,,implemented,cell-based,languages; low-level; two-dimensional languages; brainfuck derivatives,"Archway is an esoteric programming language devised by Scott Feeney in 2005 to disprove a strong claim of the wire-crossing problem; that is, to prove that a universal Turing machine's state diagram need not allow for the possibility of nonplanar graphs. This goal was inspired by Beturing. Nothing was actually disproven by Archway, however, because the method given for translating Brainfuck programs to Archway was invalid."
Qdeql,https://esolangs.org/wiki/Qdeql,2005,,turing complete,implemented,queue-based,languages; low-level,Qdeql is an esoteric programming language devised by Scott Feeney that provides a single queue of bytes as the only form of memory available to programs.
Beatnik,https://esolangs.org/wiki/Beatnik,2001,,,usability unknown; implemented,stack-based,languages; low-level,"Beatnik is a stack-based esoteric programming language created by Cliff L. Biffle. The code looks like English-language text (typically with sentences that don't make a lot of sense). The words are scored according to the rules of the Scrabble board game, and the score is used to determine the operation."
NUMPAD,https://esolangs.org/wiki/NUMPAD,2002,,,implemented,,languages,"NUMPAD is a programming language designed by Kevin Albrecht in 2002.  While not explicitly esoteric, it is fairly unusual.  Arbitrary streams of letters are valid NUMPAD programs; each is interpreted a number as if it were keyed in on a telephone number pad."
Taxi,https://esolangs.org/wiki/Taxi,2005,,,implemented,,languages; thematic,Taxi is an esoteric programming language invented by Sean Heber in 2005. Programs are built by giving directions to destinations on a map which is where computation takes place. The virtual taxi the programmer controls can carry up to three data passengers at one time between destinations. The passengers pay the driver for this service and in turn the programmer must be sure to stop by a gas station from time to time or else the car will run out of fuel prematurely ending the program.
Smurf,https://esolangs.org/wiki/Smurf,2001,,turing complete; turing tarpits,implemented,stack-based,languages,"Smurf is an esoteric programming language designed by Matthew Westcott in an attempt to cut down Muriel to the bare minimum, retaining that language's self-propagation paradigm. The only native data type is the string."
Braktif,https://esolangs.org/wiki/Braktif,2005,,,implemented,cellular automata,languages; two-dimensional languages; brainfuck derivatives,"Braktif is a 28-state cellular automaton, defined in ALPACA by Chris Pressey in 2005, which simulates the action of a language very similar to both Smallfuck (in terms of instruction set) and Archway (in terms of program structure).  It was ostensibly designed as yet another test of the wire-crossing problem, but it is far more likely it was just done for entertainment."
NegaPosi,https://esolangs.org/wiki/NegaPosi,,,,implemented,,languages,"NegaPosi is an esoteric programming language devised by SASADA Koichi.  Like Sorta, it was ostensibly created for the purpose of submitting an interpreter for it to an obfuscated programming contest."
TRANSCRIPT,https://esolangs.org/wiki/TRANSCRIPT,2002,,,implemented,,languages; thematic,"TRANSCRIPT is an esoteric programming language devised by Ryan Freebern in 2002 where programs resemble IF (interactive fiction, or ""adventure game"") transcripts."
Obfuna,https://esolangs.org/wiki/Obfuna,,,turing tarpits,implemented,,languages,Obfuna is an esoteric programming language devised by Steve Engledow in 2004 or so. Each instruction is a unary operator.
XS,https://esolangs.org/wiki/XS,,,,total,,languages,"XS is an obfuscated programming language, devised by Mark Carter, which is based on XML."
AutoMouse,https://esolangs.org/wiki/AutoMouse,1998,,,implemented,,languages; two-dimensional languages,"AutoMouse is a screen-scrubbing utility for Microsoft Windows, written by Kakuya Yamamoto.  When it is combined with a suitable environment, such as Microsoft Paint, it becomes an interesting esoteric programming language."
23,https://esolangs.org/wiki/23,2002,,,implemented,,languages,23 is an esoteric programming language designed by Philipp Winterberg. It has several different notations; the default notation consists entirely of whitespace characters.
THRAT,https://esolangs.org/wiki/THRAT,2004,,turing tarpits; turing complete,implemented,cell-based,languages; brainfuck derivatives,"THRAT is a Brainfuck-derived esoteric programming language devised by Mate Varga in 2004.  It uses two instructions to select from a table of ten operations, in the style of ReMorse."
Haifu,https://esolangs.org/wiki/Haifu,2002,,,implemented,,languages,"Note: all information on this article comes from here, so there may be some mistakes."
Fm,https://esolangs.org/wiki/Fm,,,turing complete,,,brainfuck derivatives,"For each m >= 2, Fm is a computational model based on editing a finite 
unbounded string on an alphabet of m letters.  It is derived from Brainfuck 
in the spirit of the Wang program formulation of Turing machines, by using 
only the five instructions '+' '<' '>' '[' ']' and by applying a cyclic 
ordering to the alphabet, with '+' changing a letter to the next letter 
in cyclic order."
Biota,https://esolangs.org/wiki/Biota,,,,implemented; no io,,two-dimensional languages; languages,"Biota, devised by Ward Cunningham, is an esoteric programming language in two dimensions and sold for a net profit in 1991 (predating Befunge).  The desire was for a 2-D language that was simple enough and robust enough to experiment with code mutation."
P′′,https://esolangs.org/wiki/P′′,,,turing complete; turing tarpits,implemented,cell-based,languages; low-level; brainfuck,"P



′
′




{\displaystyle {\mathcal {P}}^{\prime \prime }}

 (hereafter written P′′) is a primitive programming language created by Corrado Böhm 1,2 in 1964 to describe a family of Turing machines."
1L,https://esolangs.org/wiki/1L,2005,,turing tarpits,implemented; unimplemented,,languages; two-dimensional languages; low-level,"Though Gregor Richards purported 2L as a Turing-complete language with only two operators, the nop operator (that is, anything that's not + or *) is so significant in 2L that it serves as a third. 1L is a family of attempts to reduce the set of symbols even further, producing a two-dimensional language that truly only has two symbols (the name being a perverted joke against 2L: since 2L has 3 commands, 1L has 2 commands)."
Binary combinatory logic,https://esolangs.org/wiki/Binary combinatory logic,,functional paradigm,turing tarpits,no io; implemented,,languages; low-level,"Binary combinatory logic (BCL) is a complete formulation of combinatory logic (CL) using only the symbols 0 and 1, together with two term-rewriting rules.  BCL has applications in the theory of program-size complexity (Kolmogorov complexity)."
ADJUST,https://esolangs.org/wiki/ADJUST,2005,,,implemented,stack-based,languages; two-dimensional languages; low-level,"ADJUST, for A Divergent Jumble of Unrelated Symbolic Terms, is a two-dimensional esoteric programming language invented by Scott Feeney in 2005. All of the ASCII characters from 32 to 126 are valid instructions; each instruction carries out several operations depending on the prime factors of its ASCII value."
Udage,https://esolangs.org/wiki/Udage,2005,,turing tarpits,implemented,cell-based,languages; cjk,"Udage is an esoteric programming language primarily designed by User:Gs30ng, originally presenting what the author calls the ""pattern programming paradigm."""
Gravity,https://esolangs.org/wiki/Gravity,2005,,unknown computational class,usability unknown; unimplemented,,languages; two-dimensional languages; low-level,"Gravity was invented by Safalra (Stephen Morley) on 4th August 2005, based on a idea from Isaac Newton. Gravity is very different from any other existing programming language. Although its behavior is well-defined and deterministic, the evolution of its space is in general non-computable, due to the nature of the differential equations that govern it."
MISC,https://esolangs.org/wiki/MISC,2003,,turing complete; turing tarpits,no io; unimplemented,cell-based,languages; low-level,MISC is an esoteric programming language devised by Safalra (Stephen Morley) in September 2003. It consists of a specific implementation of the OISC concept. MISC is Turing Complete.
PROLAN/M,https://esolangs.org/wiki/PROLAN/M,,,turing complete,implemented,,languages,"PROLAN/M is the language described in one of the problems of the 2nd International Olympiad in Infomatics in 1990. Its programs are essentially sequential substitution systems, a string-rewriting paradigm."
Brainloller,https://esolangs.org/wiki/Brainloller,2005,,turing complete,implemented,cell-based,languages; brainfuck derivatives; two-dimensional languages; low-level,"Brainloller is a Brainfuck clone designed by Lode Vandevenne in 2005. Commands are read from the pixels of a .png image (like Piet), with 2 extra commands. The extra commands change the instruction pointer direction so that you can compact the 1D Brainfuck code into a 2D image. You can hide Brainloller code in a photo or draw comments."
Deltaplex,https://esolangs.org/wiki/Deltaplex,2006,,unknown computational class,implemented,,languages; two-dimensional languages; high-level,"Deltaplex is an esoteric programming language developed by Lode Vandevenne. It was designed to be the successor of Gammaplex. Deltaplex code is to be read from a PNG image that is decoded into a 32-bit RGBA buffer. The main reason for this is not because it's funny to read code from an image, but because this is the best way to store textures in code. Deltaplex supports 3D graphics, hence the need for textures."
SADOL,https://esolangs.org/wiki/SADOL,2005,functional paradigm,turing_complete,implemented,,languages,SADOL (Sadistic And Damn Odd Language) is an esoteric programming language made by Martin 'nooga' Gasperowicz (User:nooga) in 2005.
Network Headache,https://esolangs.org/wiki/Network Headache,,,unknown computational class,implemented,,languages; low-level,Network Headache is an esoteric programming language invented by User:Zzo38.
Easy,https://esolangs.org/wiki/Easy,2005,,turing tarpits,implemented,cell-based,languages; joke languages; brainfuck derivatives; low-level,"Easy is an esoteric programming language based on Brainfuck. Unlike most programming languages, all actual code-writing is done at runtime, hence the author's joke that ""it is extremely easy to write programs in Easy""."
Orthogonal,https://esolangs.org/wiki/Orthogonal,1996,,unknown computational class,output only; implemented,stack-based,languages; two-dimensional languages; low-level,"Orthogonal is a two-dimensional esoteric programming language created by Brian Raiter in 1996. Orthogonal was based on the language Orthagonal. According to the home page, Orthogonal was created without the knowledge of Befunge, an influential two-dimensional language invented earlier, but whether the author of Orthagonal was also aware of Befunge is not known."
Orthagonal,https://esolangs.org/wiki/Orthagonal,1994,,unknown computational class,implemented,stack-based,languages; two-dimensional languages,Orthagonal is a two-dimensional esoteric programming language created by Jeff Epler in 1994 after a discussion about two-dimensional languages in alt.folklore.computers.
Shakespeare,https://esolangs.org/wiki/Shakespeare,2001,,unknown computational class,implemented,stack-based,languages; high-level; thematic,"The Shakespeare Programming Language (SPL) is an esoteric programming language created by Karl Hasselström and Jon Åslund in 2001. The design goal of Shakespeare was, according to the Manual, to make a language with beautiful source code that resembled Shakespeare plays."
Braintwist,https://esolangs.org/wiki/Braintwist,2005,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,Braintwist is a dialect of Brainfuck designed by Troels Henriksen in 2005. Its only difference from Brainfuck is the introduction of a new operator that allows for self-modifying code.
Catch,https://esolangs.org/wiki/Catch,,,,unimplemented,,languages,"Catch is an esoteric programming language, designed by User:ihope127, in which most statements throw exceptions. A block consists of an if statement followed by a number of others, and it ends right before the next if. The exception is if's inside a catch statement: outside a catch statement, the whole thing is treated as a single instruction, while inside the catch statement, the catch statement is treated as if it were the whole program."
Braincopter,https://esolangs.org/wiki/Braincopter,2005,,turing complete,implemented,cell-based; steganography,languages; brainfuck derivatives; two-dimensional languages; low-level,"Braincopter is an esoteric programming language that is an almost identical clone of Brainloller designed by Lode Vandevenne in 2005. The commands and the specification are exactly the same as those of Brainloller. The Brainloller interpreter can be converted into a Braincopter interpreter by changing only a few lines of code. Like in Brainloller, the Braincopter source code has to be a PNG image."
Subskin,https://esolangs.org/wiki/Subskin,2005,,turing complete; turing tarpits,implemented,,languages; low-level,"Subskin is an OISC variant with a very short (148 bytes of code) Ruby implementation written by Jannis Harder in 2005.
Subskin is an abbreviation for ""subtract and skip if negative"", which is the only instruction."
Mycelium,https://esolangs.org/wiki/Mycelium,2005,,,implemented,cell-based,languages; two-dimensional languages; low-level,"Mycelium is an image-based esoteric programming language designed by Lode Vandevenne in 2005. The commands are read from a png image. There is some freedom in the colors you can give a pixel to get a certain command, so it's possible to create an image out of commands or encode the commands in a photo."
Trigger,https://esolangs.org/wiki/Trigger,2005,,finite state automata,implemented,,languages; low-level,"Trigger is an esoteric programming language designed in 2005 by Keymaker, based on triggers, which are toggled by patterns (rows of the same character). There are four different patterns, thus four instructions. One for toggling triggers, one for conditional jumping, one for output, and one for input."
Cvlemar,https://esolangs.org/wiki/Cvlemar,2005,,,,,languages,"Cvlemar is an esoteric programming language by User:Zzo38. A program is a map of lines connected to nodes. It does steps by sending each input node to all lines from that node, and sends output to the output nodes. If more than one number sending to a output node, all are added together. The syntax of each line is (in node) (out node) (command) (parameter)"
SMATINY,https://esolangs.org/wiki/SMATINY,2005,,unknown computational class; finite state automata,usability unknown; output only; implemented,,languages; low-level,"SMATINY, the Self-Modifying Automaton application that's really TINY, is a minimalistic programming language by Ihope127, based on the swapping concept of SMETANA.
The computational class is as yet unknown."
Glypho,https://esolangs.org/wiki/Glypho,2005,,turing complete; turing tarpits,implemented,stack-based,languages; low-level,"Glypho is an esoteric programming language based on symbol independence. It was created by Brian Thompson in September 2005. Each instruction is composed of a string of 4 symbols which may be any value, and the language determines which instruction is executed based on the set of symbols in the string."
AlPhAbEt,https://esolangs.org/wiki/AlPhAbEt,2005,,,usability unknown; implemented,cell-based; deque-based,languages; low-level,"AlPhAbEt (or ABC for short) is an esoteric programming language designed by Kevin Niehage. All variables consist of single bits, but some advanced structures such as looping and subprocedures (with local copies of registers) are supported. A double-ended queue of bits known as a queack (or, for normal people, a deque) is also present."
Zot,https://esolangs.org/wiki/Zot,2002,functional paradigm,turing tarpits,implemented,,languages,Zot is a version of Jot with I/O by Chris Barker.
Brainhype,https://esolangs.org/wiki/Brainhype,,,,implemented,cell-based,languages; brainfuck derivatives; low-level,Brainhype is an esoteric programming language based on Brainfuck.
Glass,https://esolangs.org/wiki/Glass,2005,object-oriented paradigm,turing complete,implemented,stack-based,languages,
Befalse,https://esolangs.org/wiki/Befalse,2005,,turing complete,implemented,cell-based; stack-based,languages; two-dimensional languages; low-level,"Befalse is an esoteric programming language created by Ian Osgood in 2005 and inspired by SNUSP and False.  Like SNUSP, no letters were harmed in the making of this language."
Subtle cough,https://esolangs.org/wiki/Subtle cough,,functional paradigm,,unusable for programming,,languages,"Subtle cough is an esoteric programming language by User:ihope127 that can be defined as Unlambda with c as its only function primitive. That is, the set of Subtle cough programs is the set of Unlambda programs which use only the characters ` and c, and the Subtle cough programs do the same thing as these Unlambda programs."
QUATRE-CALC,https://esolangs.org/wiki/QUATRE-CALC,,,,implemented,stack-based,languages,QUATRE-CALC is an esoteric programming language based around the concept of pouring cans of liquid into each other.
Sceql,https://esolangs.org/wiki/Sceql,2005,,turing complete,implemented,queue-based,languages; low-level,"Sceql is an esoteric programming language devised by Scott Feeney in 2005, which provides a single byte queue as the only form of memory available to programs. The queue can never be empty, and data can never be removed from it once enqueued into it. Initially the queue has one value of 0."
Rail,https://esolangs.org/wiki/Rail,2005,functional paradigm,,implemented,stack-based,languages; two-dimensional languages,"Rail is a two-dimensional language along the lines of Befunge and PATH. It was invented by Jonathon Duerig in 2005. There are four unique things about Rail. First, the program counter in Rail is modelled as a train on a railroad, not as a free-moving pinball. This means that every path must be explicitly laid out and the decision rules are not about absolute direction, but about which rail to choose next. Second, Rail provides both local variables and a clean procedural model. This means that it is about as easy to program as a normal stack-based language. Third, Rail is in many respects a functional language. It provides LISP-style lists, garbage collection, and immutable values. Finally, the creator deliberately avoided the minimalism of many other two-dimensional languages. In addition to a rich set of builtins, a standard library is planned which should make it possible to write a useful program."
Hanoi Love,https://esolangs.org/wiki/Hanoi Love,2001,,turing complete,implemented,stack-based,languages; low-level,"Hanoi Love is a minimal stack based language created by Jeffry Johnston, April 30, 2001. Its name was inspired by the Towers of Hanoi game, while the language itself was inspired by Spaz and brainfuck."
Magenta,https://esolangs.org/wiki/Magenta,1995,,,unimplemented,,languages,"Magenta was created by committee from a proposal thrown out on the Usenet newsgroup alt.folklore.computers in 1995. It was designed to be the most redundant programming language in existence. It has over eighty reserved words, a needlessly convoluted exception system, a threading system that looks entirely too much like a really weird function call syntax, a function call syntax that happens to be really weird, and a curse."
Shelta,https://esolangs.org/wiki/Shelta,1999,,,implemented,,languages; low-level,"Shelta is a language designed and implemented by Chris Pressey in 1999.  Shelta was designed as a successor to Maentwrog. It is a low-level language inspired by Forth, False and assembly language."
GraNoLa/M,https://esolangs.org/wiki/GraNoLa/M,2002,,,implemented,,languages,"GraNoLa/M is a programming language in which a directed graph is the
only data type.  It was Chris Pressey's entry for the 2002 Esoteric Awards."
"Foobar and Foobaz and Barbaz, oh my!","https://esolangs.org/wiki/Foobar and Foobaz and Barbaz, oh my!",2005,,finite state automata,implemented,,languages; low-level,"Foobar and Foobaz and Barbaz, oh my! is a simple esolang by User:Ihope127. The syntax is as follows:"
Object disoriented,https://esolangs.org/wiki/Object disoriented,2005,object-oriented paradigm; functional paradigm,turing complete,unimplemented,,languages,"Object disoriented is an object-oriented programming language. This means that objects are the only kind of data it manipulates. It also belongs to the class of functional programming languages, especially ""dysfunctional programming languages"" alongside 0x29A."
Camouflage,https://esolangs.org/wiki/Camouflage,2005,,,implemented,,languages; high-level,"Camouflage is a language designed by Benedict Roeser, based on the idea of ""disguises"" which change the mode of interpreting commands."
BAK,https://esolangs.org/wiki/BAK,2000,,,implemented,stack-based,languages,BAK is an esoteric programming language created by Prfnoff (2000).
Bear Food,https://esolangs.org/wiki/Bear Food,2001,,,implemented,,languages,"Bear Food is an esoteric programming language created by Chris Pressey in 2001.
It is described as ""liquid insanity from hell""."
ILLGOL,https://esolangs.org/wiki/ILLGOL,2000,,,implemented,,stubs; languages,"ILLGOL is an esoteric programming language created by Chris Pressey in 2000, intended as a parody of ""debugged-into-existence"" programming languages -- languages which exist solely by virtue of the fact that there is a compiler or interpreter for them which works most of the time.  It was followed by sequels Illgola-2, Illberon, and Open Sores ILLGOL##."
Shoopuf,https://esolangs.org/wiki/Shoopuf,2004,,,implemented,,languages,Shoopuf is a list-based language created by Deathping in 2004. It is loosely based on Brainfuck and Kipple. The name Shoopuf comes from a creature in the computer game Final Fantasy X.
MDPN,https://esolangs.org/wiki/MDPN,1998,,unknown computational class,,,languages; meta-languages,MDPN or Multi-Directional Pattern Notation is an esoteric programming language  created by Chris Pressey in 1998.  It is an extension of EBNF with operators for describing the parsing of multi-directional and multi-dimensional languages.
Sally,https://esolangs.org/wiki/Sally,2000,functional paradigm,unknown computational class,implemented,,languages,"Sally is a toy programming language created by Chris Pressey in 2000.
It is described as ""upside-down Forth cake"", because it resembles a
(statically-typed) variant of Forth that is written in Polish notation
instead of the more usual Reverse Polish notation.  Because of this,
program sources resemble those in more conventionally notated functional languages
like Haskell."
Squishy2K,https://esolangs.org/wiki/Squishy2K,2000,,,implemented,,languages,Squishy2K is an esoteric programming language created by Chris Pressey in 2000.
Tamerlane,https://esolangs.org/wiki/Tamerlane,2000,,,unimplemented,,stubs; languages,"Tamerlane is an esoteric programming language created by Chris Pressey in 2000.  It is essentially a graph-rewriting system with a mixture of concepts from various programming paradigms, making it difficult to classify as belonging to any paradigm."
*W,https://esolangs.org/wiki/*W,,,unknown computational class,,,languages,*W is an esoteric programming language created by John Colagioia.
JUSTIF,https://esolangs.org/wiki/JUSTIF,2001,,,implemented,,languages,"Justif & Recursion (or simply JUSTIF) is an esoteric programming language created by Gerson Kurz, where control flow is limited to if-else statements and recursion."
Dumbf*ck,https://esolangs.org/wiki/Dumbf*ck,2001,,unknown computational class,implemented,cell-based,languages; brainfuck derivatives; low-level,"Dumbf*ck is a Brainfuck-derived esoteric programming language, announced by Cliff L. Biffle on April 24, 2001."
When,https://esolangs.org/wiki/When,2001,,,,,languages,When is an imperative esoteric programming language created by Martin Sandin in 2001.
.Gertrude,https://esolangs.org/wiki/.Gertrude,2001,,,,,languages,".Gertrude is an esoteric programming language created by Gerson Kurz in 2001.
It is named in honor of the American author Gertrude Stein, and programs may resemble poetry in her style, or in any mixture of styles."
.yacuabll,https://esolangs.org/wiki/.yacuabll,2001,,,,,languages,".yacuabll (Yet Another Completely Useless And Badly Labelled
Language) is an esoteric programming language created by Gerson Kurz in 2001."
Mouse,https://esolangs.org/wiki/Mouse,,,turing complete,implemented,stack-based,languages,"Mouse is a Forth-like stack-based programming language eerily similar to FALSE. It uses Reverse Polish Notation for its mathematical operations, and provides the ability to define single character macros A-Z. In addition to the stack, there are 26 available variables, also designated A-Z."
Linguine,https://esolangs.org/wiki/Linguine,2005,,turing complete,implemented,,languages,"Linguine, created by Jeffry Johnston in November 2005, is designed as a ""flattened Spaghetti"", and adds unbounded memory and cell values, negative cell indices, unlimited pointers, and multiple commands per line."
ObjectPar,https://esolangs.org/wiki/ObjectPar,,object-oriented paradigm,,,,languages,"It uses only objects. Each data is an object, including one object for each integer number."
BF-PDA,https://esolangs.org/wiki/BF-PDA,2005,,,output only; implemented,stack-based,languages; brainfuck derivatives; low-level,"BF-PDA is a simple programming language by ihope127, designed to be of use in a compression algorithm. An interpreter was written by Madk in 2010."
Bitwise Cyclic Tag,https://esolangs.org/wiki/Bitwise Cyclic Tag,2005,,turing complete; turing tarpits,no io; implemented,queue-based,languages,Bitwise Cyclic Tag (BCT) is a Turing-complete programming language using only two commands (0 and 1) to operate on a finite data-bitstring extensible without bound on the right. Its extremely simple syntax and semantics make it a useful target for simulation-based proofs of a language's computational class.
Yellow Four Code,https://esolangs.org/wiki/Yellow Four Code,,,unknown computational class,unimplemented,,languages; low-level,"Yellow Four Code is a language similar to Malbolge, based around being confusing and useless. The program is loaded into memory at the beginning."
Rhotor,https://esolangs.org/wiki/Rhotor,2006,functional paradigm,turing complete,implemented,,languages,Rhotor is an esoteric programming language developed by Jannis Harder in 2006.
Minks,https://esolangs.org/wiki/Minks,2006,,unknown computational class,implemented; usability unknown,,languages; low-level,"Minks is a programming language based on a Minsky machine with two registers: the REGISTER and the register. Every instruction is preceded by a condition, which is a string of alphabetic characters. (Case is ignored here.) Conditions are like boolean variables: if they're set to True, the instruction will be executed; if False, it won't.  Conditions start out as True."
SPL,https://esolangs.org/wiki/SPL,2005,,,implemented,cell-based,languages; brainfuck derivatives; low-level,"SPL is an esoteric programming language invented by StelK around December 2005.
It is very similar to Brainfuck but it has some new instructions. It was made only as a hobby.
SPL can handle only integers."
Owl,https://esolangs.org/wiki/Owl,2005,,turing complete,implemented,stack-based,languages,"owl, or Obfuscated Weird Language, is an esoteric programming language inspired by Forth and False. It was created by Antonio Maschio in 2005, and is based on his earlier BogusForth language."
Y,https://esolangs.org/wiki/Y,1995,,turing complete,implemented,stack-based,languages,Y is an esoteric programming language by Thomas Fischbacher derived from False.
Lambda,https://esolangs.org/wiki/Lambda,,,,implemented,,languages; low-level,"The Lambda programming language is a minimalistic language by Anne Veling, inspired by lambda calculus."
Tory,https://esolangs.org/wiki/Tory,,,turing complete,implemented,cell-based,languages; brainfuck derivatives; thematic,"The Tory programming language is an esoteric language where programs consist of Conservative election pledges. Tory was created by Philip McCarthy, and is based mainly on l33t."
Random,https://esolangs.org/wiki/Random,2006,,,implemented,stack-based,low-level; languages,"Random, standing for R and O Machine(temporarily R & O refers to Regenerating & Overrunning, but subjects to change looking forward any better idea) is a minimalistic esoteric programming language in string-rewriting paradigm, assuming the source code itself as a double-ended stack. First proposed by User:Gs30ng, the specification is under development yet."
UNBABTIZED,https://esolangs.org/wiki/UNBABTIZED,2002,,,implemented,cell-based,languages,UNBABTIZED is an esoteric programming language by Gerson Kurz.
SON-OF-UNBABTIZED,https://esolangs.org/wiki/SON-OF-UNBABTIZED,2002,,,implemented,,languages,"SON-OF-UNBABTIZED is an esoteric programming language by Gerson Kurz based on Sorted! (and, ironically, not really related to UNBABTIZED.)"
Shakell,https://esolangs.org/wiki/Shakell,2005,,,implemented,,languages,"Shakell is an esoteric programming language created by SimonRC in 2005. It is mainly inspired by SADOL, but also Unlambda, Lisp and Haskell."
Versert,https://esolangs.org/wiki/Versert,2005,,unknown computational class,implemented,,languages; two-dimensional languages; low-level,"Versert is an esoteric programming language inspired by Befunge, invented by Kang Seonghoon in 2005. (Versert is originated in a word ""버섯"", meaning mushroom in Korean.)Versert is a two-dimensional programming language, like befunge.Versert starts as a problem, what happens if befunge doesn't have a stack."
BF-SC,https://esolangs.org/wiki/BF-SC,2006,,unknown computational class,usability unknown; output only; unimplemented,cell-based,languages; brainfuck derivatives; low-level,"BF-SC is a language designed by ihope127 to be more powerful than BF-PDA yet less so than Brainfuck. The memory consists of a tape extending to the right only. Every cell has a number: the leftmost is 1, then 2, then 3, etc. Each cell is either ""set"" or ""unset""; all cells start out unset. The ""head"" starts on cell 1. The instructions:"
Self-modifying Brainfuck,https://esolangs.org/wiki/Self-modifying Brainfuck,2006,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; low-level,"Self-modifying Brainfuck, also known as SMBF, is a variant of brainfuck by Simon Howard, which allows a program to modify its own source code. The program code is placed in the data array, and the data pointer starts at the byte immediately after the last instruction in the code."
REverge,https://esolangs.org/wiki/REverge,,,,works-in-progress,,,"REverge (a deliberate typo for ""revenge"") is an esoteric programming language by ihope127 based on the concept of ""data replacements"". The syntax:"
P,https://esolangs.org/wiki/P,2006,,,implemented,stack-based,languages,P is an esoteric programming language created by StelK around December 2005.
SuperPar,https://esolangs.org/wiki/SuperPar,,object-oriented paradigm,unknown computational class,unimplemented,,languages; low-level,SuperPar is based on ObjectPar but better:
AAAAAAAAAAAAAA!!!!,https://esolangs.org/wiki/AAAAAAAAAAAAAA!!!!,2006,,turing complete,unimplemented,,languages; low-level,"AAAAAAAAAAAAAA!!!! is an esoteric programming language by User:Zzo38 which consists entirely of the letter A, spaces, commas, and exclamation points. If you type a line beginning with @, it can be a comment and can contain anything, but it must be removed from the program before the interpreter can run it. If you type a newline, it can count as a space, and multiple consecutive spaces or exclamation points can count as a single one."
Hargfak,https://esolangs.org/wiki/Hargfak,,,turing complete,,stack-based,languages; low-level; brainfuck derivatives,"This is like brainfuck, but has main pointer, sub pointer (points to same memory space but may be different position), and one main stack."
POGA-INTERCAL,https://esolangs.org/wiki/POGA-INTERCAL,,,turing complete,,,languages; low-level,"This is like INTERCAL-72 and C-INTERCAL and CLC-INTERCAL, with some differences:"
Barely,https://esolangs.org/wiki/Barely,2006,,turing complete; turing tarpits,implemented,cell-based,languages; low-level,"Barely is an esoteric programming language created by Jeffry Johnston in 2006, with the goal of having as small a Turing complete interpreter as possible.  The interpreter is in MS-DOS COM binary format and is 59 bytes in size.  It was written using DEBUG, so the source listing is made from disassemblies at different points in the program."
MinISCule,https://esolangs.org/wiki/MinISCule,2006,,turing complete; turing tarpits,implemented,,languages; low-level,"MinISCule is an esoteric programming language created by Jeffry Johnston in 2006, with the goal of having a very small interpreter for a Turing-complete language.  The interpreter is in MS-DOS COM binary format and is 36 bytes in size.  It was written using DEBUG, so the source listing is made from a program disassembly."
TriINTERCAL,https://esolangs.org/wiki/TriINTERCAL,,,turing complete,implemented,,languages,"TriINTERCAL is an esoteric programming language created by Louis Howell in 1991 as a more difficult version of INTERCAL. It uses ternary instead of binary, and introduces the logical BUT operation."
Piet-Q,https://esolangs.org/wiki/Piet-Q,2006,,unknown computational class,implemented,stack-based,languages; two-dimensional languages; low-level,"Piet-Q is a modification of the esoteric programming language named Piet by David Morgan-Mar created by poiuy_qwert. Piet is a 2D language and uses colors in a bitmap as the commands to be executed. Similarly, Piet-Q uses a bitmap as the program, but has a different way of executing commands. The main difference is that in Piet commands are called by the difference in the HUE from one color to the next. In Piet-Q the color of the pixel is split into its Red, Green, and Blue (RGB) parts. The command is the integer for the Red section of the color, and the Blue and Green can be parameters for that command."
BitChip,https://esolangs.org/wiki/BitChip,2006,,unknown computational class,no io,,languages; low-level; two-dimensional languages,"BitChip is a two-dimensional programming language. A program consists of ""chips"", which are square-shaped, with an odd number of commands on each side. The instruction pointer enters and exits chips in the center of each side. As in Befunge, the instruction pointer consists of both a position and a direction (horizontal or vertical)."
INCAL,https://esolangs.org/wiki/INCAL,,,unknown computational class,implemented,,languages; low-level,INCAL is an esoteric programming language by (presumably) User:Zzo38.
TwoDucks,https://esolangs.org/wiki/TwoDucks,,,unknown computational class,unimplemented,,languages,TwoDucks is an esoteric programming language by User:Zzo38 which allows you to go back in time and change things. It is uncomputable on a Turing machine; it even allows you to solve the halting problem.
MiniMAX,https://esolangs.org/wiki/MiniMAX,2006,,turing tarpits; turing complete,implemented,,languages; low-level,"MiniMAX is an esoteric programming language created by User:ais523 in 2006, in an attempt to create a ridiculously small interpreter. It was inspired by SMETANA."
Bag,https://esolangs.org/wiki/Bag,2001,,turing tarpits; turing complete,unimplemented,,languages; low-level,"Bag by Ørjan Johansen is derived from John Conway's Fractran game/language, adding syntax and side effects to make it a ""practical"" programming language (although still an esoteric one), while being backwards compatible with it, and perhaps allowing a semi-efficient implementation."
Omegaplex,https://esolangs.org/wiki/Omegaplex,2006,,unknown computational class,unimplemented,stack-based,languages; two-dimensional languages; high-level,"Omegaplex, created by poiuy_qwert is a variant of the esoteric programming language Gammaplex created by Lode Vandevenne. It is definitely not as advanced as Lode Vandevenne's update to Gammaplex, Deltaplex, but is still an improvement in the opinion of the author. All the printable ASCII characters are used for commands."
BackFlip,https://esolangs.org/wiki/BackFlip,2006,,unknown computational class,implemented; no io; total,,languages; low-level; two-dimensional languages,BackFlip is a 2-D reversible programming language created by User:ais523 in 2006.
Revaver2pi,https://esolangs.org/wiki/Revaver2pi,2006,,unknown computational class,implemented,stack-based,languages,This is a variant on Revaver created by User:Zzo38 in 2006.
TapeBagel,https://esolangs.org/wiki/TapeBagel,2006,,,unimplemented,,languages,"TapeBagel is an esoteric programming language that uses an integer array of three integers to make up most of the commands and operators. It was made by S. R. Farmer in May, 2006, a full time SDK is currently in the works. The commands and operators consist of two to seven special characters such as the pound sign etc. The first character or set of characters tells which class the operator is in. The second character or set of characters will have another character telling which command or operator in that class (see below)."
DZZZZ,https://esolangs.org/wiki/DZZZZ,,,,implemented,,languages; two-dimensional languages,"DZZZZ is an esoteric programming language invented by User:Zzo38. He has forgotten when, but the interpreter source's datestamp suggests that it was in 1994 or earlier."
ABCDXYZ,https://esolangs.org/wiki/ABCDXYZ,2006,object-oriented paradigm,unknown computational class,implemented; output only; total,,languages; low-level,ABCDXYZ is a reversible object-oriented programming language created by User:ais523 in 2006. It was designed as a language that could be compiled into BackFlip; it is based around the first practical BackFlip storage mechanism to be discovered.
Unassignable,https://esolangs.org/wiki/Unassignable,2006,object-oriented paradigm,unknown computational class,output only; implemented; total,,languages; low-level,":≠ is a reversible object-oriented esoteric programming language created by User:ais523 in 2006. It was created as an easier way to write ABCDXYZ and BackFlip programs, and ABCDXYZ programs are trivial to translate into it. The language's name is pronounced 'Unassignable'; it is a reference to the most frequently used operation impossible in a reversible programming language."
Black,https://esolangs.org/wiki/Black,2006,,turing complete; turing tarpits,implemented; no io,,low-level; languages; two-dimensional languages,"Black is a two-dimensional esoteric programming language created in 2006 by User:ais523. It was inspired by 1L and BackFlip, as an attempt to create a symmetrical Turing-complete language with only one instruction (two counting NOP), that uses code as data (BackFlip-style)."
MechaniQue,https://esolangs.org/wiki/MechaniQue,2006,,unknown computational class,implemented,,languages; high-level,"MechaniQue is an esoteric programming language (http://gabordemooij.com/mechanique/) used for writing interactive fiction, designed by Gabor de Mooij in 2006. MechaniQue lacks variables and explicit calculations while still offering complex dynamics."
Brainscrambler,https://esolangs.org/wiki/Brainscrambler,2004,,turing complete,implemented,stack-based,languages; brainfuck derivatives,"Brainscrambler is an esoteric programming language designed by Cody Brocious in 2004, and implemented by Nerowolfe in 2008. It is a brainfuck variant with 3 stacks instead of the tape."
BF-RLE,https://esolangs.org/wiki/BF-RLE,,,,,,brainfuck equivalents; languages,One of the more useful ways of extending brainfuck is to use Run-length encoding to reduce the number of characters needed to enter a brainfuck program.
Forte,https://esolangs.org/wiki/Forte,2006,,turing complete,implemented,,languages; low-level,"Forte is an esoteric programming language created by User:ais523 in 2006, based around redefinition of constants. Its syntax is similar to BASIC (a non-esoteric language). It is called Forte due to the mess it makes of the Peano postulates. It was created after considering the following pseudocode for the 99 bottles of beer program:"
Oof!,https://esolangs.org/wiki/Oof!,2006,,unknown computational class,usability unknown; no io; unimplemented,cell-based,languages; two-dimensional_languages; low-level,"The esoteric programming language Oof! (not to be confused with Oof) was invented by User:Zzo38 in May 2006. It is a bit similar to Black, and to the game Black Box."
IINC,https://esolangs.org/wiki/IINC,2006,,,unimplemented,,languages,IINC is an esoteric programming language by User:Zzo38.
Omgrofl,https://esolangs.org/wiki/Omgrofl,2006,,turing complete,implemented,stack-based; queue-based,languages; thematic,"Omgrofl is 
an esoteric programming language created in 2006 by Juraj Borza. It is equipped with a stack/queue, has support for byte-sized variables and keywords resembling Internet slang. The name comes from combining the slang ""words"" omg and rofl. Rofl is actually one of Omgrofl's commands."
Petrovich,https://esolangs.org/wiki/Petrovich,,,,unimplemented,,,"Petrovich is an esoteric user interface/operating system designed by David Morgan-Mar, which is based on the concept of reward and punishment."
Tiny,https://esolangs.org/wiki/Tiny,,imperative paradigm,,,,,"Tiny is a small integer RPN based language created by User:Ron.hudson. It is a console/character type interpretive programming language, in which all statements are either assignments or those that print quoted strings."
Circute,https://esolangs.org/wiki/Circute,2005,,unknown computational class,implemented,cellular automata,languages; low-level; two-dimensional languages,Circute is a cellular automaton (and quite arguably an esoteric programming language) developed by Chris Pressey in 2005 as a test of the wire-crossing problem. It consists of nothing but logical NAND gates connected by wires. It was designed to be implementable in ALPACA.
Nybbleist,https://esolangs.org/wiki/Nybbleist,2006,,,,,languages,"Nybbleist is an esoteric programming language created by User:Zzo38 in 2006, where the only data type is a nybble."
Pointy,https://esolangs.org/wiki/Pointy,2006,,turing tarpits,implemented,,languages; low-level,Pointy is a language by Ihope127. The basic datatype is the pointer.
Reaper,https://esolangs.org/wiki/Reaper,2002,,unknown computational class,unimplemented,,languages,"Reaper is a lazy object-oriented language by Ørjan Johansen (originally idea from 2002, but not published until 2006).  It is lazier than most languages, in that objects perform actions only at the last possible time, when they are destroyed. To facilitate destruction the language has a reference-counting garbage collector (the reaper), as well as replacement instructions."
Metropolis,https://esolangs.org/wiki/Metropolis,2006,,turing complete,no io; implemented,,languages; two-dimensional languages,"Metropolis is a 2D Turing Machine language designed by Brian Thompson in 2006. It was originally inspired by Langton's Ants, but later refined on the more general idea of Turmites (also called Turning Machines) - the two-dimensional equivalent of Turing Machines."
Threaded INTERCAL,https://esolangs.org/wiki/Threaded INTERCAL,1998,,,implemented,,languages; low-level,Threaded INTERCAL is an extension of INTERCAL by Malcolm Ryan to include threads.
Backtracking INTERCAL,https://esolangs.org/wiki/Backtracking INTERCAL,2002,,,implemented,,languages; low-level,Backtracking INTERCAL is an extension of INTERCAL by Malcolm Ryan to include backtracking like in Prolog.
Fractran,https://esolangs.org/wiki/Fractran,,,turing complete; turing tarpits,implemented,,,See also wikipedia:FRACTRAN.
Wiki Cyclic Tag,https://esolangs.org/wiki/Wiki Cyclic Tag,2006,,turing complete; turing tarpits,implemented,queue-based,languages; low-level,Wiki Cyclic Tag is a programming language created by User:ais523 in 2006. It is designed to prove that the MediaWiki software used to run Wikis would be Turing-complete by simulation if it allowed infinite loops. It is based on Bitwise Cyclic Tag.
HighFive,https://esolangs.org/wiki/HighFive,2006,,,implemented,cell-based,languages; brainfuck derivatives,"HighFive is an esoteric programming language by Ben Russell, which is loosely inspired by brainfuck."
TheSquare,https://esolangs.org/wiki/TheSquare,2006,,,implemented,,languages; two-dimensional languages,TheSquare is an esoteric programming language made by Ben Russell in 2006 which is inspired by Befunge.
Cupid,https://esolangs.org/wiki/Cupid,,,turing complete,implemented,cell-based,languages; brainfuck derivatives,Cupid is a brainfuck derivative.
Quantum brainfuck,https://esolangs.org/wiki/Quantum brainfuck,2006,,unknown computational class,implemented,cell-based,languages; brainfuck derivatives; low-level; quantum computing,Quantum brainfuck is an esolang by Ihope127 which is essentially brainfuck operating on qubits instead of integers. The tape starts initialized with all 1's. The commands:
Pi,https://esolangs.org/wiki/Pi,2006,,turing complete,implemented,,languages; brainfuck equivalents,The Pi language is a public domain esoteric programming language and trivial brainfuck substitution idealized by Daniel Lopes Parra and invented by Marcelo Aires Caetano and Paulo Matias in 2006.
UM-32,https://esolangs.org/wiki/UM-32,2006,,turing complete,implemented,,low-level; icfp contest,"UM-32 ""Universal Machine"" is a virtual machine used in the 2006 ICFP Programming Contest. It was supposedly created by an ancient secret society, the Cult of the Bound Variable, in 200 BC. The machine had eight registers, a replaceable codespace, and dynamic memory allocation. The opcodes could refer three registers (indexed A, B, C). The 14 opcodes:"
Aeolbonn,https://esolangs.org/wiki/Aeolbonn,2006,,turing complete; turing tarpits,output only; implemented,cell-based,languages; low-level,Aeolbonn (An esoteric output language based on natural numbers) is a Turing-complete esoteric language designed by Keymaker.
Flatline,https://esolangs.org/wiki/Flatline,2004,,unknown computational class,unimplemented,cell-based,languages,Flatline is a language invented by Tristan Parker.
Clunk,https://esolangs.org/wiki/Clunk,2002,,turing complete,implemented,,languages; two-dimensional languages; low-level,Clunk was an entry for the 2002 Essies. Clunk programs are created by defining various shapes out of ASCII characters. When running the program the shapes get placed on an infinite grid (which is initially all spaces (blank)) according to certain rules:
NICE,https://esolangs.org/wiki/NICE,2002,,,implemented,queue-based,languages,"The NICE (Nice Is a Creative Environment) language is a two-dimensional, line following, queue-based, multi-threaded language.
It has been influenced mostly by Wierd, Befunge and Q-Bal."
SORTA,https://esolangs.org/wiki/SORTA,,,,implemented,stack-based,languages,SORTA is a language by Daniel J. Bernstein. His interpreter won Best of Show in the 1991 International Obfuscated C Code Contest.
RETURN,https://esolangs.org/wiki/RETURN,,,,implemented,,languages,"RETURN is an esoteric programming language made by Ben Russell (the third one by this author so far), which incorporates a new theory, in which all commands are blank functions, that call other blank functions, and the commands are called by the number of functions passed through a function. It is called RETURN because commands are executed depending on the return codes, effectively."
CLC-INTERCAL,https://esolangs.org/wiki/CLC-INTERCAL,1999,object-oriented_paradigm,,,,languages,PLEASE NOTE that this article only discusses the differences with other dialects of INTERCAL: familiarity with INTERCAL or C-INTERCAL may be required to understand this article.
FURscript,https://esolangs.org/wiki/FURscript,2006,,,,,languages,"FURscript is the programming language currently in development by Broken Angel. The structure is based off a mix of html, turbo pascal, and BASIC."
DoubleFuck,https://esolangs.org/wiki/DoubleFuck,,,turing tarpits,implemented,cell-based,brainfuck derivatives; low-level; languages,"DoubleFuck is a modification of BF that operates on two tapes, rather than one. In addition to the normal BF commands, there is a second set of commands for working with this second tape and pointer. The accepted abbreviation for Doublefuck is DBF."
Dimensifuck,https://esolangs.org/wiki/Dimensifuck,2006,,turing tarpits,implemented,cell-based; multi-dimensional languages,brainfuck derivatives; low-level; languages,"Dimensifuck is an esoteric programming language designed by Pikhq and avpx in 2006 that is based upon Brainfuck. Unlike ""normal"" programming languages, which can only flow in one dimension, going forward or back, Dimensifuck can flow in an infinite number of directions."
BestFriends.js,https://esolangs.org/wiki/BestFriends.js,,,,implemented,,languages; two-dimensional languages,BestFriends.js is a two-dimensional esoteric programming language invented in 2006 by David Millar with the goal of creating an esoteric javascript library.
Thubi,https://esolangs.org/wiki/Thubi,2006,,turing complete,unimplemented,,meta-languages; low-level,"Thubi is a matrioshka language by User:Ihope127 inspired by Thue. Its name is a pun on Thue's: the name ""Thue"" is pronounced roughly like ""2A"", so ""Thubi"" is pronounced roughly like ""2B"", or TOO-bee."
TwoStep,https://esolangs.org/wiki/TwoStep,2006,,,implemented,,languages,"TwoStep is an esoteric programming language where each statement consists of two characters: a command character and a single digit (or other character). There are 12 commands, and it uses digits 0-9 and a single byte of memory."
BitFlip,https://esolangs.org/wiki/BitFlip,2006,,turing complete,unimplemented,,languages,BitFlip is a language by User:Zzo38.
OGEL,https://esolangs.org/wiki/OGEL,2006,,,unimplemented,cell-based; stack-based,languages; two-dimensional languages,"OGEL stands for Open Grid Execution Language (the fact that, backwards, it happens to spell the name of a certain famous manufacturer of coloured blocks (LEGO®) is a complete coincidence). It was designed by GreyKnight in August of 2006."
Lo'reran,https://esolangs.org/wiki/Lo'reran,,,,unimplemented,,languages,"Lo'reran is a esoteric programming language, language of Li'ara project."
Con-Text,https://esolangs.org/wiki/Con-Text,2016,,turing complete,unimplemented,,,Con-Text is an esoteric programming language created in 2004 created by User:Sphen lee.  It is equivalent to C/C++ however it relies on context so much that it can be impossible to determine what a line does without looking at the entire program.
GrainFimple,https://esolangs.org/wiki/GrainFimple,2006,,,,,languages,"GrainFimple is an esoteric programming language by User:Zzo38 based on Brainfuck and BF-RLE, and which can be used to make games."
Formula,https://esolangs.org/wiki/Formula,2006,,turing complete,unimplemented,multi-dimensional languages,low-level,Formula is an esoteric programming language created by User:ais523 in 2006 as an exploration of the boundaries of the wire-crossing problem.
~,https://esolangs.org/wiki/~,2006,,,implemented,deque-based,languages,~ is an esoteric programming language created in 2006 by User:Tim_pettit. The basis of this language is to manipulate data on a single deque using only unary and ternary operators.
Vertica Smile,https://esolangs.org/wiki/Vertica Smile,,,,,,languages,"Vertica Smile is an esoteric programming language whose code resembles Emoticon. It allows for inline Ook!, Fuckfuck, Brainfuck, and assembler."
Recurse,https://esolangs.org/wiki/Recurse,2006,,turing complete,implemented,cell-based,languages; two-dimensional languages,"Recurse is a two-dimensional language based on Befunge and other, similar languages.  It was created by MagiMaster.  It was inspired, at least partly, by the fractal circuit mazes."
Arbol,https://esolangs.org/wiki/Arbol,2005,functional paradigm,turing complete,unimplemented,,languages,"Arbol is a functional programming language developed by Rossen Radev and primarily serves as a programming language for genetic programming experiments. It is inspired by the ideas of other esoteric programming languages like Unlambda, Lazy K, Iota and Zot and the functional languages Joy and Haskell (the STG machine). The current version of the Arbol language is 1.0."
Waduzitdo,https://esolangs.org/wiki/Waduzitdo,,,finite state automata,implemented,,languages; low-level,"Waduzitdo (What does it do?), originally spelled in all caps (WADUZITDO) as many programming languages were at the time, is a non-Turing complete derivative of PILOT. It was created by BYTE Magazine contributor Larry Kheriaty in the late 1970s as a way to put together quick and dirty demonstrations for friends not familiar with the functions of computers, and is most useful for simple question-and-answer quiz and game programs."
LOCK,https://esolangs.org/wiki/LOCK,2006,,turing complete,implemented,,languages,"LOCK is an esoteric programming language based loosely on MechaniQue. It was created by MagiMaster. LOCK is a clever acronym if you know what it stands for. (If you do, you might want to add that here.) This specification is a work in progress."
Come Here,https://esolangs.org/wiki/Come Here,2003,,turing complete,implemented,,languages,"Come Here is a programming language devised by User:Smjg.  Its aim is to do away with the GOTO statement that is considered harmful by many people, but nonetheless is far too common in the world's languages."
Condit,https://esolangs.org/wiki/Condit,2001,,turing complete,implemented,,languages,"Condit is an esoteric programming language by Paul E Collins from 2001. All statements of Condit are conditional, taking the form:"
Perligata,https://esolangs.org/wiki/Perligata,2000,,,implemented,,languages,"Perligata is a dialect of Perl by Damian Conway, using a syntax based on Latin, including an inflectional system quite different from the positional syntax used in most programming languages. It is implemented as a Perl module."
Celum,https://esolangs.org/wiki/Celum,2006,,,implemented,,languages,Celum is a programming language invented by User:Zzo38 in 2006.
MonkeyCode,https://esolangs.org/wiki/MonkeyCode,2006,,unknown computational class,implemented,,languages,"MonkeyCode is a programming language created by User:Wezyap and first released in 2006. Unfortunately, pretty much no information on the language now exists on the Internet."
Odtizuda,https://esolangs.org/wiki/Odtizuda,2004,,,,,languages,This is a esoteric programming language invented by User:Zzo38. It is similar to Waduzitdo but has more commands.
LOLA,https://esolangs.org/wiki/LOLA,2006,functional paradigm,turing complete; turing tarpits,implemented,,languages,LOLA (Lots Of Lambda Abstractions) is a minimalistic functional programming language devised by User:Smjg.  It is based on lambda-calculus.
TLWNN,https://esolangs.org/wiki/TLWNN,2006,,turing complete,implemented,stack-based,languages,"The Language With No Name is a programming language devised by User:Smjg.  It has no name because names are not used in the language.  In spite of this, ""TLWNN"" is frequently used as a placeholder for a name when talking about this language."
2D-Reverse,https://esolangs.org/wiki/2D-Reverse,2006,,,,,languages; two-dimensional languages,"2D-Reverse is a esoteric programming language invented by User:Zzo38. It is a reversible programming language. There are 2 memory-spaces, which are 2D infinite in all directions, and the value of each is 2 integers, a horizontal value and vertical value (it can be represented by a ordered pair or a complex number), all values are starting at zero. Each memory space has its own pointer. There is also 1 program pointer that can be in one space in the program, and a direction (N, S, E, W). It starts at the $ and going east. The program pointer will wrap around the program area."
RecurseMe,https://esolangs.org/wiki/RecurseMe,2006,,,,,languages,RecurseMe is a esoteric programming language invented by User:Zzo38 that the program code can call itself recursively.
Leszek,https://esolangs.org/wiki/Leszek,2006,,unknown computational class,implemented,,high-level; languages,"Leszek (pronounced lesheck) is a non-imperative esoteric programming
language, based on the string-rewriting paradigm. It has no jumps,
no loops, no variables nor stack. It was created in 2006 by User:Janek37."
Subleq,https://esolangs.org/wiki/Subleq,,,turing complete,implemented,cell-based,languages; low-level,"Subleq refers to a kind of OISC where the one instruction is ""SUBtract and branch if Less-than or EQual to zero"", conventionally abbreviated to subleq."
Capuirequiem,https://esolangs.org/wiki/Capuirequiem,2006,,turing complete,implemented,,languages,"Capuirequiem is an esoteric programming language by User:Zzo38 from the year 2006. All of the ASCII characters mapping to the code range 33 to 126 constitute valid content. The digits 0 to 9 as commands push their own value onto the stack. Lowercase letters and the apostrophe are valid characters to use as a part of a name. The language is stack-based and discriminates between three types: array, string, and integer."
Another Pi Language,https://esolangs.org/wiki/Another Pi Language,2006,,,unimplemented,,languages,Another Pi Language is an esoteric programming language that is based on the bits of Pi. It was designed by Lode Vandevenne in november 2006
Lazy,https://esolangs.org/wiki/Lazy,2006,functional paradigm,turing complete,usability unknown; unimplemented,,languages,"Created by User:MagiMaster in 2006 (and conceived much earlier). Its main goal is to use lazy evaluation and have functions as first-class objects. Also, it tries to do everything as a function definition."
Fractran++,https://esolangs.org/wiki/Fractran++,,,,,,languages,Proposal of Standard for Fractran++ Language Specifications 1.0.
Underload,https://esolangs.org/wiki/Underload,2006,,turing complete; turing tarpits,implemented; output only,stack-based,languages; low-level,"Underload is a stack-based esoteric programming language that works along similar lines to Muriel. It was created by User:ais523 in 2006. Although not technically speaking a functional language, its evaluation operator ^ (which is the only form of flow control) makes programming in it functional in practice."
Deadfish,https://esolangs.org/wiki/Deadfish,2006,,finite state automata,unusable for programming; output only; implemented; total,accumulator-based,languages; joke languages,
Version2,https://esolangs.org/wiki/Version2,,,,implemented,,languages,Version2 is a extension of Version invented by User:Zzo38 and with a few extra commands:
Reversible Brainfuck,https://esolangs.org/wiki/Reversible Brainfuck,2006,,turing complete,implemented,,languages; brainfuck derivatives,"Reversible Brainfuck is a brainfuck derivative created by User:ais523 at the end of 2006. It uses the same right-infinite tape starting with zeros as brainfuck does, and most of the same commands."
Revomer,https://esolangs.org/wiki/Revomer,2006,,,implemented,,languages,"Revomer is an esoteric programming language where the programs work by removing the lines of their own source code. It was created by Tomasz ""Zyx"" Jedrzejewski (User:Zyx) and Krzysztof Piecuch in the summer Category:2006."
CUTLASS,https://esolangs.org/wiki/CUTLASS,,,turing complete,implemented,,languages; high-level,"Cutlass (Computer Users Technical Languages and Application Software System[1]) is the internally-developed language used by the CEGB and later Powergen and National Power for their power station control systems. It was developed during the 1980s, and ran originally on DEC PDP-11 machines. There were many hundreds of machines running this around the power stations in the UK."
Numobin,https://esolangs.org/wiki/Numobin,2007,,,implemented,,languages,"Numobin is a esoteric programming language invented by User:Zzo38. The memory is a stack, a boolean value, and a set of variables."
0x29C,https://esolangs.org/wiki/0x29C,2007,,,unimplemented,,languages,0x29C is a variation of 0x29A. The commands are different. Another difference is the way the register works.
Dupdog,https://esolangs.org/wiki/Dupdog,2007,,unknown computational class,implemented; usability unknown,,languages,Dupdog is a thing made by Seven Inch Bread that looks like a self-modifying esoteric language.
Weave,https://esolangs.org/wiki/Weave,2007,,turing complete,implemented,concurrent programming,languages; brainfuck derivatives,Weave is a concurrent dialect of brainfuck. The original specification was written by Seven Inch Bread.
5-logic,https://esolangs.org/wiki/5-logic,2007,,,unimplemented,,languages,A value can be:
COBOL,https://esolangs.org/wiki/COBOL,2007,,unknown computational class,unimplemented,stack-based,languages,"COBOL is an esoteric programming language designed by User:IslandHopper973. It stands for ""Card Orientations Based Object Language"", and it takes the form of Player, Game and Deck definitions. The Deck definition consists of a list of playing cards, each of which is linked to some instruction."
Minus,https://esolangs.org/wiki/Minus,,,turing complete,implemented,,languages,"Minus is a language created by Darren Smith. At its core there is only one instruction, similar to -= in C. This gives it a passing similarity to OISC (using Subleq). However, branching and I/O in Minus are implemented using some additional special variables."
Malbolge Unshackled,https://esolangs.org/wiki/Malbolge Unshackled,2007,,turing complete,implemented,cell-based,languages,"Malbolge Unshackled is a dialect of Malbolge from 2007 by Ørjan Johansen.  It was created as an attempt to remove the arbitrary memory limits of Malbolge, in order to create a language that had the potential to be Turing complete, while keeping closely to the spirit of Malbolge in most ways. The language was subsequently discovered to have succeeded at this goal, with the creation in 2020 of MalbolgeLisp."
Tag,https://esolangs.org/wiki/Tag,2007,,turing tarpits,output only; implemented,queue-based,languages,"Tag is an implementation of a variable Post tag system as a simple, but inscrutable, programming language by Mark C. Chu-Carroll."
Zetaplex,https://esolangs.org/wiki/Zetaplex,2007,,turing complete,implemented,,languages; two-dimensional languages; high-level,"Zetaplex, created by poiuy_qwert in 2007 is another varient of Gammaplex created by Lode Vandevenne. The two main differences between the languages are that commands are made up of a pair of characters, and the memory is an infinite tape of infinite stacks. This language was designed to be very functional."
Thutu,https://esolangs.org/wiki/Thutu,2007,,turing complete,implemented,,languages; low-level,"Thutu is an esoteric programming language created by User:ais523 and released in 2007. It was based on Thue; although it was created independently of Thubi, the languages evolved along similar lines. Thutu resembles Thue and ///, but uses regular expressions rather than just strings, and has a more sophisticated flow-control system (in Thue, lines execute nondeterministically, or sequentially in ///, but in Thutu the order of flow can be controlled using command characters)."
SMITHb,https://esolangs.org/wiki/SMITHb,,,turing complete,implemented,stack-based,languages,"SMITHb (or in other words, ""SMITH FLAT"") is an esoteric programming language invented by User:Zzo38. There is no GOTO or loops or such things as that. The program consists of a sequence of integers (of any size, positive, negative, or zero) and nulls (which are represented by *). The program executes only forward, repeatedly executing and deleting the command indicated by the first 2 elements of the sequence (which is one command). It can also act as a stack with the top of the stack at the end of the program."
FRAK,https://esolangs.org/wiki/FRAK,,,,,,brainfuck; languages,"FRAK is an assembler for the esoteric language brainfuck. It works by simulating an 8-bit conventional computer on the brainfuck machine. The simulated architecture is a RISC whose instruction set is inspired by Processor/1. The word ""Frak"" is the offensive word used in Battlestar Galactica instead of fuck. It was selected to represent the fact that an assembler 'fracked' the goal of brainfuck by allowing the writing of brainfuck program in an intuitive and not clever way."
Brainfuck++,https://esolangs.org/wiki/Brainfuck++,,,turing complete,implemented,cell-based,languages; brainfuck derivatives,"Brainfuck++ is a Brainfuck extension by Jacob I. Torrey. It's brainfuck with new instructions that enable file I/O and networking, to make it more useful for everyday applications."
Stue,https://esolangs.org/wiki/Stue,,,unknown computational class,usability unknown,stack-based; queue-based,languages,Stue is a stack/queue language by User:CakeProphet.
LOLCODE,https://esolangs.org/wiki/LOLCODE,2007,,turing complete,implemented,,languages,"LOLCODE is a general-purpose programming language being developed to resemble the kitty pidgin natlang of the lolcat phenomenon. It was initially created in 2007, one year after LOLCATS became an Internet meme and development continued for some time before the creator lost interest (or something like that)."
Betterave,https://esolangs.org/wiki/Betterave,2007,,turing complete,implemented,,languages,Betterave is a functional programming language created by User:Boily in 2007.
Liquid,https://esolangs.org/wiki/Liquid,2007,,turing complete,unimplemented,cell-based,languages,This esoteric programming language was designed by Jonathan Todd Skinner. He is known as user User:Jonskinner.
Pavia,https://esolangs.org/wiki/Pavia,,,,implemented,stack-based,languages,Pavia (formerly Oivphael) is an esoteric stack-based language by Kasper Bolding.
DumbScript,https://esolangs.org/wiki/DumbScript,,,,,,languages,This is an esoteric programming language made in C# by Doomguy0505.
HEX,https://esolangs.org/wiki/HEX,2007,,finite state automata,implemented; usability_unknown,,languages,"HEX is a language created by User:Barrucadu based on the HEX machine from the Discworld books. As stated in the books, anything is possible if you get enough bugs in the system. If any discworld-enthusiasts want to help me with this, send me an email! The current specification is Hex Version 2.2"
Musical-X,https://esolangs.org/wiki/Musical-X,2007,,,,,languages,"Musical-X is an esoteric programming language whose source code consists entirely of music, invented by User:Zzo38."
Billiard ball machine,https://esolangs.org/wiki/Billiard ball machine,,,turing tarpits,no io,particle automata,languages; two-dimensional languages; low-level; quantum computing,"The billiard ball machine is a model that roughly simulates the action of ""billiard balls"" colliding with obstacles (#) and each other (0) on a two-dimensional playing field. Though different versions of the billiard ball machine probably exist, they all work about the same way. If some way of indicating direction of the balls (NE, SE, SW, NW) is added, the BBM essentially becomes a programming language. It then becomes Turing-complete if an infinite number of balls/obstacles is allowed."
2-ill,https://esolangs.org/wiki/2-ill,2007,,,implemented,,languages; two-dimensional languages,"2-ill is designed by User:Zzo38, to be something like 2L but a bit different."
Crainfuck,https://esolangs.org/wiki/Crainfuck,2007,,turing complete,implemented,,languages; brainfuck derivatives,Crainfuck is a derivative of Brainfuck by User:Stump that combines the beauty of Brainfuck with the power of C.  The name comes from a combination of Brainfuck and C.
EPOAQ,https://esolangs.org/wiki/EPOAQ,2006,,unknown computational class,,,languages,EPOAQ-PL is an esoteric programming language created by Peter Larsen in 2006.
JumpFuck,https://esolangs.org/wiki/JumpFuck,2007,,turing complete,implemented,,languages; brainfuck derivatives,"Brainfuck, but with some differences:"
XBF,https://esolangs.org/wiki/XBF,2007,,,,,languages; brainfuck_derivatives,XBF is a Brainfuck variant.
SockZ,https://esolangs.org/wiki/SockZ,,,,implemented,stack-based,languages; low-level,SockZ is a small stack-based programming language able to work with big relative integers. It features only a minimalist set of instructions but allows easy definition of functions (eg to handle fractions or polynomials).
Complode,https://esolangs.org/wiki/Complode,2007,,unknown computational class,implemented,stack-based,languages,Complode is a stack-based language with not very many commands.
PointerTape,https://esolangs.org/wiki/PointerTape,2007,,,unimplemented; works-in-progress,cell-based,languages,"PointerTape is a tape-based programming language created by User:Asymptote. It is, as yet, incomplete."
Crab,https://esolangs.org/wiki/Crab,,,,,,languages,"Crab (carriage returns are bountiful) is a new language based on an idea i was playing around with some time ago, CRalphabet.
Crab uses some fairly unique language constructs(see Below). Version 1.0 of the Crab interpreter is 
currently under development."
TWiRQ,https://esolangs.org/wiki/TWiRQ,,,,implemented,,languages,"TWiRQ is a relatively unknown esolang, yet an interpreter for it and a 99 Bottles of Beer program written in it did exist (both links are dead, so this is a dead language)."
V--,https://esolangs.org/wiki/V--,2007,,,,,languages; high-level,V-- is an interpreted high-level programming language created by Marcus Kaiser in 2007.
Q-Ref,https://esolangs.org/wiki/Q-Ref,2007,,unknown computational class,unimplemented,queue-based,languages,"Q-Ref is a queue-based language invented by User:Zzo38, with the only data type being queues of references of queues. The variable names must follow the regular expression ([A-Za-z_][A-Za-z_0-9]*)."
Stackfuck,https://esolangs.org/wiki/Stackfuck,2007,,unknown computational class,implemented,stack-based,languages; brainfuck derivatives; low-level,Stackfuck is a stack-based esoteric language inspired by brainfuck. It is converted to pseudo-code at runtime to speed up the interpreter.
RubE On Conveyor Belts,https://esolangs.org/wiki/RubE On Conveyor Belts,2007,,,implemented; usability unknown,,languages; brainfuck derivatives; two-dimensional languages,"RubE On Conveyor Belts (abbreviated to ROCB in this article and pronounced ""Roob-Ee On Conveyor Belts"", a bad pun on ""Ruby on Rails"") is a language created in 2007 by immibis, and based on Chris Pressey's RUBE."
Divzeros,https://esolangs.org/wiki/Divzeros,2007,declarative paradigm,unknown computational class,implemented,,languages,"Divzeros program is in a format with function definitions name = expression and a semicolon, the last entry is the main program, without a name and equal sign. The function name can contain uppercase/lowercase letters, period, comma, and numbers, but it cannot start with a number."
IRC,https://esolangs.org/wiki/IRC,,,turing complete,implemented,,languages; thematic,IRC is a Turing complete programming language created by Smallhacker.
Roco,https://esolangs.org/wiki/Roco,2007,,turing complete,implemented,,languages,"Roco is programming language using a form of coroutines, designed by Lode Vandevenne in 2007. The coroutines are very basic, they have no input or output parameters, and their instruction pointer is never copied or reset. If a coroutine doesn't call (""ca"" or ""ac"") or yield (""yi"") another coroutine, it simply loops forever: if the instruction pointer reaches the end of a coroutine, it goes back to its beginning and continues running. Coroutines can be nested, and the top level of the source code is the root coroutine, which is called ""ro"". You can't achieve recursion by making a coroutine call or yield itself, because it just continues where it was."
DOG,https://esolangs.org/wiki/DOG,2007,,,implemented,,languages; thematic,"DOG is an esoteric programming language created by Jeremy Ruten. The commands in this program are supposed to look like commands you'd give to a dog. Numbers are represented as piles of cookies. Piles of cookies (numbers) are stored in dishes, plates, and the floor. Dishes are named dish0, dish1, ..., dish9. Plates are named plate0, plate1, ..., plate9. So you only have 10 dishes and 10 plates. The floor should hold as many numbers as you want. When you get a number from the floor, the dog (the interpreter) will choose a random number from the floor that isn't 0. Negative numbers are allowed."
PHAWN,https://esolangs.org/wiki/PHAWN,,,,,stack-based,languages; two-dimensional languages,"PHAWN is a grid-based esoteric language. It uses a pointer to the current instruction, which bounces between the edges of the grid. Certain instructions will have the opposite meaning if executed when the instruction pointer is moving in a different direction. PHAWN is still on the drawing board."
Xigxag,https://esolangs.org/wiki/Xigxag,2001,,unknown computational class,implemented; unusable for programming,,languages,"Xigxag is a simple string-copying automaton designed by Chris Pressey in 2001, but not released until 2007."
Hev,https://esolangs.org/wiki/Hev,2007,,turing complete,implemented; no io,,languages,"Hev is an esoteric programming language designed by Chris Pressey between 2005 and 2007.  It purports to solve the ""central problem of infix notation"": avoid making the programmer ever supply parentheses, and avoid requiring the programmer to ever memorize precedence tables."
Burro,https://esolangs.org/wiki/Burro,2007,,unknown computational class,no io; implemented,,languages; brainfuck derivatives,"Burro is a brainfuck-like language, the set of whose programs form an algebraic group under the operation of concatenation and over the equivalence relation ""computes the same function"". Burro was designed by Chris Pressey between 2005 and 2007, and revised in 2010."
Cabra,https://esolangs.org/wiki/Cabra,2007,,,unusable for programming; no io; implemented,,languages,"Cabra is a formal ""programming"" language, the set of whose programs form an algebraic dioid (an idempotent semiring) under the operations of sequential composition (considered multiplicative) and parallel composition (considered additive), over the equivalence relation ""computes the same function"".  Cabra was designed by Chris Pressey in 2007."
You are Reading the Name of this Esolang,https://esolangs.org/wiki/You are Reading the Name of this Esolang,2007,,turing complete; turing tarpits,unimplemented,cell-based,brainfuck derivatives; languages; low-level,"You are Reading the Name of this Esolang is an esoteric programming language invented by Chris Pressey on November 5th, 2007.  It is based loosely on the language Spoon and is somewhat similar to the languages Brainhype and onoz.  It was intended as an exploration of the design space of languages with undecidable elements such as Gravity and Banana Scheme.  The problem of determining whether or not a given string of symbols is a well-formed You are Reading the Name of this Esolang program is undecidable."
Emmental,https://esolangs.org/wiki/Emmental,2007,,turing complete,implemented,stack-based,languages,
DateFuck,https://esolangs.org/wiki/DateFuck,2007,,unknown computational class,implemented,,languages,"DateFuck is an esolang designed by John Ohno (User:Hakware) in 2007 for use in creating text-based dating sims and text adventures. It is probably Turing-complete, and consists entirely of printing, xor, and implied jumps. It contains no instructions, and has no data storage, save from the program counter itself. Despite this, it is capable of being used to create rather complex programs. It is also interactive, with each jump requiring user input, though it would be possible to pipe two such programs into one another in order to create one self-sufficent program."
Byte Syze,https://esolangs.org/wiki/Byte Syze,2007,,finite state automata,implemented,cell-based,languages; low-level,Byte Syze is a very simple programming language devised by User:Smjg.  Source code takes the form of a binary file.
Splinter,https://esolangs.org/wiki/Splinter,2007,,push-down automata,output only; implemented,,low-level; languages,"Splinter is an esoteric programming language designed by Keymaker in 2007. It was intended to be Turing-incomplete, and was purposefully kept so, but initially wrongly classified as a finite-state machine, the author not realizing certain things could be done with it, after all. Later, User:ais523 proved it to be a push-down automaton. The language has 26 unbounded memory storages, splinters, but not enough abilities to modify their content. The language has three instructions, one for placing data from splinters to the current program execution, one to set content for splinters, and one for output."
SendStuff,https://esolangs.org/wiki/SendStuff,2007,,unknown computational class,unimplemented,,languages,"The SendStuff esoteric programming language, created by User:Zzo38, involves creating nodes to send the result(s) of the command (which can be only non-negative integers) to other nodes. There is no variables, strings, or anything else like that, only nodes and send number to another nodes."
1cnis,https://esolangs.org/wiki/1cnis,2007,,unknown computational class,implemented; output only,,languages,"1cnis is an esoteric programming language created by User:ais523 in 2007. It is deliberately designed to be Turing-incomplete; its purpose is to provide a language in which to express single-counter neighbour-independent substitution systems, and therefore can create the same output as those systems can; it is designed to create infinite initial conditions for use by systems such as Turing machines, and has features designed to make infinite output possible, even though it's a rewriting language with finite input programs."
Jug,https://esolangs.org/wiki/Jug,2007,,,implemented,,languages,"Jug is an esoteric programming language created by User:Marz. Inspired by Liquid and the Die Hard Water Puzzle, Jug involves pouring water between different jugs in order to accomplish integer arithmetic."
Nest,https://esolangs.org/wiki/Nest,2007,,turing complete,implemented,,languages; low-level,"Nest is an esoteric programming language designed by Sam Bleckley. It is a turing-complete language whose low-level instructions are nested, allowing unusual self-modifying behavior. Instructions include the digits 0-7 and !. Because all data is used in base 8, all strings of instructions between !'s are valid data, and all data are also valid instructions."
SoT,https://esolangs.org/wiki/SoT,2007,,turing complete,unimplemented,,languages; quantum computing,"SoT is short for ""Stack of Tapes"". (Note: I am still not finished! It takes a long time to do it!)"
SCAB computer,https://esolangs.org/wiki/SCAB computer,2007,,turing tarpits,implemented,cell-based,languages; low-level,"The SCAB computer is a Reduced Instruction Set Computer (RISC). It has four instructions and does not use any operand which means that only 2 bits per instruction is needed to code all instructions. Although the instruction set and instruction size is small, the language form by its instruction set is Turing complete. The SCAB is an esoteric or academic computer. as many instructions are needed to do simple operation. However, the SCAB has a very simple architecture and the number of transistor to make a SCAB is extremely limited. Therefore, its performance relative to the number of transistor might still be interesting. For example a huge number of SCAB could easily be integrated in a single chip and massive parallelization could make this concept attractive."
ContinuousEquation,https://esolangs.org/wiki/ContinuousEquation,2007,,,,,languages,ContinuousEquation is an esoteric programming language invented by User:Zzo38. Program flow runs by continuous equations rather than by discrete steps.
Novice,https://esolangs.org/wiki/Novice,2007,,turing tarpits,implemented,,low-level; languages,"Novice is an esoteric programming language designed by Keymaker in 2007. It's a Turing-complete language based on string-rewriting and jumping to labels. For any string-rewriting to happen, there must exist a label that's identical to the part that rewrites something. There's an unbound memory string, and it, as every other line, must have at least one character. Replacing empty string with something or something with empty string isn't allowed. The memory string may not feature any '=' or '-' characters, and a line that's not label may feature only one, but not both.
For example, the following"
TempoVar,https://esolangs.org/wiki/TempoVar,2007,,,unimplemented,,languages,"In this programming language TempoVar, there is only one variable and one flag. It also supports backtracking and executing commands on future tempos."
1337,https://esolangs.org/wiki/1337,,functional paradigm,turing complete,implemented,,languages,"1337 is a language by User:Olsner based on single-combinator combinatory logic and a simple precedence parser, with the set of integers (or, really, any ordered set of items) as its input alphabet. The language has a single operator, function application, that can be used with any precedence specified by the input integer. The single combinator used is Fokker's X combinator, X = λf.fS(λxyz.x), with the standard S combinator S = λfgx.fx(gx)."
Full 0,https://esolangs.org/wiki/Full 0,2007,,,implemented,,languages,"Full 0 (pronounced Full Circle or Full Oh) is an Esoteric Programming Language devised by Tslil Clingman in late 2007. Full 0 encompassed the author's wishes for a language with a minimal set of commands, but many possible instructions. This was achieved through the unique implementation of a command list and modifiers in the language."
Ctonia,https://esolangs.org/wiki/Ctonia,2008,,,,stack-based,languages,"Ctonia is an esoteric programming language by User:Zzo38 based on call/cc and stacks. There are variables, though."
Perl,https://esolangs.org/wiki/Perl,,,turing complete,implemented,,languages,We'll write more about Perl after we decipher the following code:
Skull,https://esolangs.org/wiki/Skull,2008,,turing complete,implemented,,languages,Skull is an esoteric programming language designed by Emil Svensson (User:fr34k). The name comes from the sketch the author had drawn next to the language draft.
BIO,https://esolangs.org/wiki/BIO,2008,,,implemented; output only,,languages,BIO (Binary IO) is an esoteric programming language designed by Emil Svensson (User:fr34k) in 2008. BIO was inspired by ABCDXYZ by ais523
EXCON,https://esolangs.org/wiki/EXCON,2008,,,unusable for programming; total; implemented,,languages,EXCON is a lame abbreviation for EXclamation mark COloN and was designed by Emil Svensson (User: fr34k) in 2008.
CRTL,https://esolangs.org/wiki/CRTL,2008,,,,,languages,"CRTL, short for ""Constantly Rewriting Term Language"", is a silly, uncompilable, self-modifying esolang by User:ehird."
NTCM,https://esolangs.org/wiki/NTCM,2007,,turing complete,implemented,cell-based,languages; low-level,NTCM is an esoteric programming language developped by user:Slereah. It is based on a Turing machine with multiple tapes and I/O (the name stands for n-tape choice machine).
GolfScript,https://esolangs.org/wiki/GolfScript,2007,,turing complete,implemented,stack-based,languages; golfing language,"GolfScript is a concatenative programming language embedded on top of Ruby, designed to allow very short programs to be written, in order to win code-golf contests. It supports a range of datatypes including arbitrary precision integers, and a wider range of standard operations than many other esoteric programming languages."
C-LONG,https://esolangs.org/wiki/C-LONG,,,,unimplemented,,languages,"C-LONG is an esoteric programming language by User:Zzo38 with long lines (it doesn't have anything to do with C programming, though.)"
LICE,https://esolangs.org/wiki/LICE,2008,,,unimplemented,,languages,LICE stands for the LISP INTERCAL C Esoteric language.
Lazy Bird,https://esolangs.org/wiki/Lazy Bird,2008,functional paradigm,turing complete,implemented,,languages; low-level,"Lazy Bird is a functional esoteric programming language designed by user:Slereah, based on Unlambda (with lazy evaluation) and inspired by To mock a mockingbird . It uses the usual basic instructions :"
ACRONYM,https://esolangs.org/wiki/ACRONYM,2008,,,unimplemented,,languages,"ACRONYM was created by Tslil Clingman in early 2008, originating from an idea the author had in late 2007. ACRONYM was created to serve the author's wishes for a highly obfuscated language in which no given programme would have major visual differences from any other given programme (with the exceptions of length and format)"
Child,https://esolangs.org/wiki/Child,,,,implemented,cell-based,languages; brainfuck derivatives,"Child is an esoteric programming language in the vein of Brainfuck. It is cell-based like Bf,
but it is oriented to support data processing."
Tree,https://esolangs.org/wiki/Tree,2008,,,implemented; total,,languages; two-dimensional languages; thematic,Tree - taking branching to new heights
Byter,https://esolangs.org/wiki/Byter,,,,unusable for programming; output only; implemented,,joke languages; languages; high-level,"Byter is a language for training brains. Byter consists of 11 instructions that are intended to move the instruction pointer on a 16 × 16 matrix and for outputting the characters which are associated with each cell. On an output operation the ascii character associated with the specific cell is printed out. The correct ascii value is determined by the position of the cell: It starts with zero in the top left corner of the matrix, and is increased from left to right. So the first two lines for example of the playfield have the following values associated with the cells:"
Ozone,https://esolangs.org/wiki/Ozone,,,unknown computational class,unimplemented,stack-based,languages,"Ozone is an stack-based language created by User:Set.  Program flow in Ozone is controlled by the mechanism of spawning new stacks, copying them, and executing."
Andrei Machine 9000,https://esolangs.org/wiki/Andrei Machine 9000,2008,,unknown computational class,unimplemented,,languages,"The Andrei Machine 9000 is an esoteric programming language, based on the observation that Kolmogorov is hard to remember. It is based on a Kolmogorov machine."
Foo,https://esolangs.org/wiki/Foo,2008,,,implemented,cell-based,languages; low-level,"Foo is an esoteric programming language, created by User:Feky in February 2008.
It is inspired mainly by Brainfuck."
RCEM,https://esolangs.org/wiki/RCEM,2008,,turing tarpits; turing complete,implemented,cell-based,languages,"Random Code Executation Machine (RCEM) is an esoteric computer language invented in March 2008 by User:Feuermonster.
Data is stored on an infinite tape. In addition, there exists a cell (called I-Cell), which can store numbers. Every cell can have one of the following values: 0 (false), 1 (true), or 2 (maybe)."
FlogScript,https://esolangs.org/wiki/FlogScript,2008,,,implemented,stack-based,golfing language; languages,"FlogScript is a programming language by User:Zzo38, similar to GolfScript but it is different. No documentation yet, read the examples and source code to try to figure it out."
3D,https://esolangs.org/wiki/3D,2008,,unknown computational class,usability unknown; implemented,multi-dimensional languages,languages,"3D is a 3 dimensional esoteric programming language inspired by Befunge. It was created by User:Stop h time on 25 March 2008 and finished 31 March 2008. It has been superseded by Suzy, which could have been called 3D 5.0, because it is the fifth iteration of the 3D idea."
ABC,https://esolangs.org/wiki/ABC,2008,,,implemented; unusable for programming,,languages,ABC is an esoteric programming language created by User:Orange.  The language is very simple and easy to implement.  This language has nothing to do with the real programming language ABC.
Aubergine,https://esolangs.org/wiki/Aubergine,2008,,turing complete,implemented,,languages; low-level,"Aubergine is a minimalist language with 4 instructions, 4 variables, and a single constant, created by User:Boily in 2008."
WALP,https://esolangs.org/wiki/WALP,2008,,,output only; implemented,,two-dimensional languages,WALP (What A Limited Programming language) is a language designed by User:fr34k in 2008.
Grass,https://esolangs.org/wiki/Grass,2006,functional paradigm,,implemented,,languages,Grass is a functional grass-planting programming language. Its unique characteristic is that it is said to be easy to slip into ASCII art.
Brainstuck,https://esolangs.org/wiki/Brainstuck,,,unknown computational class,implemented,stack-based,languages; brainfuck derivatives,"Brainstuck is a variation of Brainfuck, with a stack instead of a tape."
Selector,https://esolangs.org/wiki/Selector,2008,,,unimplemented,stack-based,languages; low-level,Selector is a simple language created in April 2008 by User:EvincarOfAutumn.
MIX,https://esolangs.org/wiki/MIX,2008,,,implemented,,languages,"MIX is an esoteric language invented by User:Feuermonster in April 2008.
MIX has one integer (called buffer) to store data.
I couldn't write a hello world program till now. But it should be possible."
Alchemy,https://esolangs.org/wiki/Alchemy,2008,,unknown computational class,implemented,,languages; thematic,Alchemy is an esoteric programming language created by User:EvincarOfAutumn in April 2008.
Optimism,https://esolangs.org/wiki/Optimism,2008,,turing_complete; turing_tarpits,,,low-level; languages,"Optimism is another implementation of the OISC idea, this one by ToothPic, but it's a little different in that it's based on addition, not subtraction. That is where it's name came from. Addition is giving, optimistic. The only instruction is ADDOV, which takes three operands. Code and data are separate, and memory mapped I/O is available."
Two Fifty Six,https://esolangs.org/wiki/Two Fifty Six,,,,,,,"TFS is a little idea of mine (User:Jercos). I was playing around with logical gates and truth tables, and realized any two-input gate could be represented by reading the Z column of a truth table as a nybble, like so:"
Tg,https://esolangs.org/wiki/Tg,2008,,,implemented,,languages,"Tg is a postfix-expression programming language created by User:SteloKim. It is, as yet, incomplete."
RFOL,https://esolangs.org/wiki/RFOL,2008,,,implemented,,languages,RFOL or Repeating FOur Language was designed by Tslil Clingman in early June of 2008 for the purposes of beginning to program in Python. The language was thus intended to be as minimal as possible to ease the learning curve for the author.
Varsig,https://esolangs.org/wiki/Varsig,2008,,turing complete,implemented,cell-based; stack-based,languages,Varsig is a variant by User:Zzo38 of SIG.
Hannah,https://esolangs.org/wiki/Hannah,,,,,,languages; two-dimensional languages; low-level,Hannah is a two-dimensional esoteric programming language invented by Marz. It is believed to be Turing complete.
RWLR,https://esolangs.org/wiki/RWLR,2008,,,implemented,,languages,Read Write Left Right was a language created by Tslil Clingman in mid 2007 only to be realised by the author in mid 2008. The language combines the author's wishes for a purely tape based language and the capability for self-modifying code.
Eodermdrome,https://esolangs.org/wiki/Eodermdrome,2008,,turing tarpits,implemented,,languages,Eodermdrome is a graph-rewriting tarpit created in 2008 by User:ais523.
Drainfuck,https://esolangs.org/wiki/Drainfuck,2008,,,implemented,cell-based,languages; brainfuck derivatives,"Drainfuck is a modified version of Brainfuck, named for how it is draining on CPU power. Drainfuck uses three tapes, each cell being two bytes, 65536 cells per tape. One tape is the code tape, and the other two are the data tapes. Along side this is a pointer function, setting the pointer to the cell number given in the data at the current cell. Official interpreter download link is in External resources"
Brainstack,https://esolangs.org/wiki/Brainstack,2008,,,,cell-based; stack-based,languages; brainfuck derivatives,"A language derived from brainfuck, brainstack provides commands to alter the stack, enter a stack, and leave it."
Conveyor,https://esolangs.org/wiki/Conveyor,2008,,,unimplemented,,languages,"Conveyor is a concept language based on multiple workers each with two conveyor belts, two stacks, a collector, and a hand. There is a turn system in who gets turns in what order.

Example (3 thinkers):"
Figurehead,https://esolangs.org/wiki/Figurehead,2008,,turing tarpits; turing complete,no io; implemented,,low-level; languages,"Figurehead is a minimal esolanguage designed by Keymaker. The language was formed while the author was designing another language, and once the idea for Figurehead struck, the other one was abandoned. The language uses two characters, ""|"" and "" "", and a memory that's mostly accessed as a stack. Programs can only consist of the two characters, everything else is forbidden. Only sequences of two or more of the same character are counted, that is, only they cause computation to happen. Sequences of one character may be used to distinguish different sequences from each other. The memory is unbounded and infinite."
Platts,https://esolangs.org/wiki/Platts,2008,,turing complete,implemented,,languages; low-level,Platts (Programming Language for Arbitrary Two-Tag Systems) was devised in October 2008 by User:Quintopia as a way to add I/O to 2-Tag systems.
DOBELA,https://esolangs.org/wiki/DOBELA,2008,,unknown computational class,implemented,queue-based,languages; two-dimensional languages; low-level,DOBELA: DOt-Based Esoteric LAnguage. This is a language made by User:asiekierka in 2008.
RAND,https://esolangs.org/wiki/RAND,,,,,,languages,"RAND is an esoteric programming language created by User:Smallhacker, partially based on non-determinism. It's believed to be Turing complete, but this hasn't been proven."
Vrejvax,https://esolangs.org/wiki/Vrejvax,2008,,turing tarpits; turing complete,implemented,cell-based,languages; low-level; brainfuck derivatives,Vrejvax  is a three- or five-instruction Boolfuck derivative designed by User:Nortaneous in 2008. An interpreter was written by User:Madk in 2010. There is an incomplete interpreter written in QuickBASIC available here. (dead link)
Insomnia,https://esolangs.org/wiki/Insomnia,,,turing complete,output only,cell-based,languages; brainfuck derivatives,Insomnia is a language by User:fr34k and is based on the ASCII character encoding.
Extended Foo,https://esolangs.org/wiki/Extended Foo,2008,,,unimplemented,cell-based,languages; low-level,"Extended Foo is a modified version of the original Foo language with new features
like nondeterminism, user input and better program flow control.
Both Foo and Extended Foo are designed by User:Feky."
ALPL,https://esolangs.org/wiki/ALPL,,functional paradigm,,unimplemented,,languages; low-level,ALPL (A Lambda Programing Language) is an esoteric programming language that was invented by User:Kros.
Bracket Hax,https://esolangs.org/wiki/Bracket Hax,2008,,,implemented,,languages; high-level,"Bracket Hax is a high-level esoteric language created by MeTh0Dz, first published in August 2008. Brackets and other grouping symbols are frequently used in its syntax, hence the name."
2050706,https://esolangs.org/wiki/2050706,2008,,,implemented,,languages; high-level,"2050706 is an esoteric macro language created by User:sigurdwe. It is a high-level procedural language based on C. The goals of the language are zero grammar, zero compilation errors and a total focus on numerics."
Th,https://esolangs.org/wiki/Th,2008,functional paradigm,,total; unimplemented; unusable for programming,,languages; high-level,"Th is an esoteric programming language consisting of one named pair of values, created by User:Scan in 2008. A value is again either a named pair or an atom. Is it similar to Lisp, but the length of a list is fixed. Thus, a pair represents an atomisable value itself, meaning a pair is just a thing to be evaluated. Eventually, a Th program is pretty simple."
Suicide,https://esolangs.org/wiki/Suicide,2008,,turing complete,unimplemented,,languages,"suicide is a language create by User:fr34k in 2008.
suicide is Turing complete.  It has a limit of 676 variables, but if these are unbounded it can emulate a Minsky machine."
Paintfuck,https://esolangs.org/wiki/Paintfuck,2008,,turing complete; turing tarpits,implemented; no io,cell-based,languages; low-level; brainfuck derivatives,Paintfuck is a borderline-esoteric graphical programming language by User:Whtspc. A derivative from Smallfuck that uses a 2D datagrid instead of 1D.
Karma,https://esolangs.org/wiki/Karma,2008,,turing complete; turing tarpits,implemented,stack-based; deque-based,languages,"Karma is a Turing tarpit created by revcompgeek that was designed to have no explicit loops. Instead it has lines that can be jumped between, acting somewhat like functions. It has one stack and one deque as its only data structures. The stack and deque hold bytes and are unbounded (interpreter is limited by memory)."
BrainSpace 1.0,https://esolangs.org/wiki/BrainSpace 1.0,2008,,turing complete,implemented,,languages; two-dimensional languages; low-level,"BrainSpace 1.0 is an esoteric programming language based on Befunge, PingPong and Brainfuck by User:SpaceMan++.
BrainSpace 1.0 is like Befunge and Brainfuck. There is a 2D field and a memory tape. ^V<> changes direction(like in Befunge#Instructions) and /\ acts like mirrors(like in PingPong#Flow_control). There are interpreters in Java and JavaScript.
The following program is an infinite loop."
CLooP,https://esolangs.org/wiki/CLooP,2008,,finite state automata; turing complete,unimplemented,,languages,"CLooP is a C-like language, inspired by Douglas Hofstadter's languages BLooP, 
FLooP and GLooP (used in his book Gödel, Escher, Bach). It was created in 
December 2008 by User:Alksentrs."
Velato,https://esolangs.org/wiki/Velato,2009,,,implemented,,languages,"Velato is an esoteric programming language that uses MIDI files as source code. Programs in Velato are defined by the pitch and order of notes. Velato is intended to allow for flexibility in composition, so functional programs will not necessarily sound like random notes. There is a tendency for Velato programs to have jazz-like harmonies."
Smu,https://esolangs.org/wiki/Smu,2009,,,unimplemented,,languages,"Smu is an esoteric programming language by User:Zzo38 based on Smurf, with some minimalization based on what is written in Talk:Smurf."
DNA-Sharp,https://esolangs.org/wiki/DNA-Sharp,2009,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,DNA# is an esoteric programming language which is based on the schematic structure of the DNA molecule and was invented 2009 by User: Benni++.
RSSB,https://esolangs.org/wiki/RSSB,2009,,turing complete; turing tarpits,implemented,,languages; low-level,RSSB is an esoteric programming language which implements a Turing Complete single instruction computer.
Dot,https://esolangs.org/wiki/Dot,2008,,,,cell-based,languages,Dot is an esoteric programming language created by Simone Baratta and Daniele Dona in 2008 which uses an only symbol (the dot). The basic idea is that every program can be associated with a definite number. The source code of the program will contain exactly that number of dots.
Redcode,https://esolangs.org/wiki/Redcode,,,turing complete,implemented; programming games,,languages; low-level,"Redcode is an esoteric programming language designed by A. K. Dewdney and David Jones in autumn 1983 and first described in the May 1984 issue of Scientific American. The purpose of Redcode is to provide an environment for Core War, in which programs attempt to crash their opponents. Redcode is (almost) Turing Complete in the same sense as C, where any given program must run within finite memory space but may be agnostic to the exact size. In fact, only one of the instructions is required to achieve that: DJN."
RUM,https://esolangs.org/wiki/RUM,2009,,turing complete,implemented,,languages; brainfuck derivatives,"RUM is a dialect of brainfuck written and maintained by User:irskep with a few features added for convenience. RUM stands for ""bRainfUck iMproved."" It is in the public domain and is available on Github."
English,https://esolangs.org/wiki/English,,declarative paradigm,turing complete,unimplemented,,joke languages; high-level; languages,English is a declarative programming language. Many people are familiar with it even if they don't know any other programming language.
BrainClub,https://esolangs.org/wiki/BrainClub,2009,,,implemented,,languages; brainfuck derivatives; high-level,"BrainClub is a program language (invented by User:Zzo38) for compiling to client-brainfuck. The name is based on BrainSub (and a similar ideas) but ""Cl"" instead of ""S"" because it is ""cl""ient-brainfuck."
Puzzlang,https://esolangs.org/wiki/Puzzlang,2009,,turing complete; turing tarpits,implemented,cell-based,languages; low-level; two-dimensional languages; brainfuck derivatives,"Puzzlang is a brainfuck derivative by Daedalus. In Puzzlang, the only symbol, X, tells the interpreter to execute an instruction. The instruction is determined by the state of the three ""neighbor"" characters above the X, and is a direct brainfuck analogue."
Pieces,https://esolangs.org/wiki/Pieces,2009,,turing tarpits,unimplemented,cell-based,low-level; languages; brainfuck derivatives,Pieces is an esoteric language with the same set of commands as brainfuck created by poiuy_qwert. The difference is each command is a puzzle piece. Adding up all the indents and outdents in the puzzle pieces determines which brainfuck command is used.
Self-modifying Puzzlang,https://esolangs.org/wiki/Self-modifying Puzzlang,2009,,,,cell-based,languages,"Self-modifying Puzzlang is a variation on Puzzlang. You could shorten the name to S-m Puzzlang, this variation is invented by User:Zzo38."
Kolmogorov,https://esolangs.org/wiki/Kolmogorov,2009,,turing_complete,implemented,,low-level; languages,Kolmogorov is an esoteric language based on the Kolmogorov machine.
Uncomment,https://esolangs.org/wiki/Uncomment,2009,,,implemented,stack-based,languages,"Uncomment is an esoteric programming language created by user:Okohokonu in 2009. It uses two commands; numbers from 0 to 255 in hexadecimal, and ""x."""
Binary lambda calculus,https://esolangs.org/wiki/Binary lambda calculus,2004,functional paradigm,turing complete,implemented,,languages; low-level; algorithmic information theory,"Binary lambda calculus (BLC) is an extremely small Turing-complete language which can be represented as a series of bits or bytes. Unlike Binary combinatory logic, another binary language with a similar acronym, it is capable of input and output."
AlphaBeta,https://esolangs.org/wiki/AlphaBeta,2009,,,implemented,,languages,AlphaBeta is a language made by User:Voxel which only uses letters as instructions.
Single Four,https://esolangs.org/wiki/Single Four,,,,unusable for programming; implemented,,languages,Single Four is an esoteric programming language created by Starla Insigna. It was designed to be extremely difficult (if not impossible) to program with.
Philosophy Script,https://esolangs.org/wiki/Philosophy Script,2009,,,unimplemented,,languages; thematic,Philosophy Script is a language based on philosophy. It is saved as .PhS (from PhD).
Quylthulg,https://esolangs.org/wiki/Quylthulg,2008,,,implemented,,languages,"Quylthulg is an esoteric programming language designed by Chris Pressey in 2008.  It is a non-recursive pure functional language with a single control mechanism called foreach.  In fact, it does also have a goto statement, but it may only occur inside data structures.  It also features a macro processor (which is also non-recursive and which is intertwined somewhat with the rest of the language.)"
Etcha,https://esolangs.org/wiki/Etcha,2009,,turing complete,no io; implemented,,languages; brainfuck derivatives,"Etcha is an esoteric programming language designed by Chris Pressey sometime in or around February of 2009.  It is a variation on BitChanger, and it also has only four instructions.  Instead of a tape, program state is stored in an unbounded 2-dimensional playfield of bits.  Instead of a tape head, Etcha has a turtle which obeys three commands: move forward one cell, turn right 90 degrees, and toggle pen state (up or down).  The pen is an ""XOR pen"" which, when down, toggles the state of a cell whenever the turtle leaves that cell.  The initial state of the pen is down.  Each time the turtle turns 360 degrees, i.e. every 4th time the command to turn right is executed, the pen state is toggled (from up to down or vice versa.)"
WILSON,https://esolangs.org/wiki/WILSON,2009,declarative_paradigm,,implemented; usability_unknown,,languages,"WILSON is a symbolic logic processing language written by User:john.ohno in 2009. It is based on a simplified subset form of PROLOG syntax, and is non-Turing-complete, instead correlating directly to formal symbolic logic."
Tweak,https://esolangs.org/wiki/Tweak,,,,,,languages,"Tweak is a language by user:Maxsteele2 which starts like BASIC, but commands can be created, edited, or deleted to fit any task needed."
GodScript,https://esolangs.org/wiki/GodScript,,,,,,thematic; languages,God Script is a computer language based on religions created by Digerati. The commands are:
Genome,https://esolangs.org/wiki/Genome,,,,,,languages; thematic,"Genome Code is a language developed by  Digerati. The commands are only: A, T, C, and G."
.box,https://esolangs.org/wiki/.box,2009,,,,,languages,.box (pronounced 'dotbox') is an esoteric programming language created by User:Fr34k and E. Grouse in 2009. It operates using only dots and linefeed.
Qwerty Reverse Polish Notation,https://esolangs.org/wiki/Qwerty Reverse Polish Notation,2009,,turing complete,implemented,stack-based,languages,"Qwerty Reverse Polish Notation is a Reverse Polish notation calculator that is designed to be generally Turing-complete. In Qwerty Reverse Polish Notation (QRPN), almost all opcodes (except literals, references, labels and variables) are as small as 1 keystroke. The opcodes are separated by space ("" "")."
BF Joust,https://esolangs.org/wiki/BF Joust,2009,,,implemented; programming games,cell-based,languages; brainfuck derivatives,"BF Joust (also known as BFJoust and Brainfuck Joust) is a brainfuck-based programming game, originally invented by Kerim Aydin, consisting of two programs in a brainfuck-like language which attempt to modify a shared memory array in a particular way."
MailBox,https://esolangs.org/wiki/MailBox,2009,object-oriented paradigm,turing complete,implemented,,languages; thematic,"MailBox is a language based around e-mail filters.
A program consists of a series of numbered mailboxes.
Each box contains rules. Each rule is associated with a list of actions.
When a message is received in a mailbox, the rules are evaluated and if they evaluate to true, the actions are applied."
MONOD,https://esolangs.org/wiki/MONOD,2009,,unknown computational class,implemented,,languages,"Molecular biology influenced esoteric programming language named after French biologist Jacques Monod. Since I have little better to do, I'll probably start documenting it here now it's in workable shape. If anything passes for an original design document, it's probably this blog post (dead link)."
BitBitJump,https://esolangs.org/wiki/BitBitJump,2009,,turing complete; bounded-storage machine,implemented,,low-level; languages,"BitBitJump is one of the simplest OISC languages. It allows calculations by only bit copying process without using conventional logic operations like AND, OR, XOR, NAND, or NOT. Its instruction is to copy one bit from one address to another and jump."
Intolerant,https://esolangs.org/wiki/Intolerant,,,unknown computational class,no io; unimplemented,stack-based,languages; joke languages,Intolerant is a language that wipes the user's hard drive if an error occurs.
Suxesol,https://esolangs.org/wiki/Suxesol,2009,,,unimplemented,stack-based,languages,Suxesol is a program language invented by User:Zzo38. It is a bit influenced by BlooP.
HELP,https://esolangs.org/wiki/HELP,,,,,,languages,"HELP stands for Hellish & Esoteric Language for PalmOS, by Laurent Duveau.  It is a part of LaFac, aldweb's LAnguage FACtory for Palm."
Poochiewuddledumpling-Boobledarling,https://esolangs.org/wiki/Poochiewuddledumpling-Boobledarling,2009,,,,,languages; low-level,Poochiewuddledumpling-Boobledarling is a programming language loosely based on assembly. It was created by two Finnish coders. The first usable beta version came out in July 2009.
Topline,https://esolangs.org/wiki/Topline,2009,,,unimplemented,,languages,Topline is named after the top line of keys on the main part of a US PC keyboard (the row that ends with Backspace and contains the digits).  It uses these 13 keys and the shift keys to perform all of its functions.
Numeric Topline,https://esolangs.org/wiki/Numeric Topline,2009,,,unimplemented,,languages,"This is an esoteric programming language by User:Zzo38 based on Topline, however Topline also uses the shift (not only the top line), and I could try to make it numeric only, also."
Minimal,https://esolangs.org/wiki/Minimal,2009,,,implemented; unusable for programming; total,cell-based,languages; brainfuck derivatives,"Minimal is an esoteric programming language developed by Alegend on August 10, 2009. User:Madk wrote an interpreter in July of 2010. It only consists of 7 commands."
Minimal-2D,https://esolangs.org/wiki/Minimal-2D,2009,,turing complete,implemented,,brainfuck derivatives; two-dimensional languages; languages,"Minimal-2D is the name of a 2D programming language made by User:Alegend, on August 10, 2009. It only has 11 commands:"
Madness,https://esolangs.org/wiki/Madness,,,,,,languages,"Madness by User:PuzzleHunter84 uses 499 built-in instructions, 1 imaginary instruction that is rarely used, 3 1/2 memory spaces, a count that is limited to numbers that use only straight lines (1,4, and 7) and has its own version of general mathematics, a toggle, a timer, a three-sided polarity, a stack that has a mind of its own, loops that only run backwards, three variables, three wheels which work like those in Whirl and each have seven spaces, a deck of cards with two jokers, poker chips in five different colors (white, red, blue, green, and black), an interactive input, a potential input used only in case of emergency, a predetermined input that is not entirely known to humans, an output for each input, an output for the program, and recognises spaces, tabs, and new-lines as instructions, is case-sensitive, and water-resistant."
Super Stack!,https://esolangs.org/wiki/Super Stack!,2009,,turing complete,implemented,stack-based,languages; high-level,Super Stack! is a stack-based esoteric programming language by User:Orange.
Home Row,https://esolangs.org/wiki/Home Row,2009,,turing complete,implemented,cell-based,languages,"Home Row is a language by User:PuzzleHunter84 that uses only the non-shifted symbols on the home row of a US PC keyboard:
a,s,d,f,j,k,l, and ; to make programs incredibly quick and easy to type.  The symbols perform
functions similar but not identical to bf:"
This=That,https://esolangs.org/wiki/This=That,2009,,turing complete,unimplemented,,languages,"This=That is an esoteric programming language by User:PuzzleHunter84, and is made up entirely of variables.  Each line is just a case-sensitive variable name, followed by =, and then the variable's case-sensitive value."
Higher Subleq,https://esolangs.org/wiki/Higher Subleq,2009,,turing complete,implemented,,languages; high-level,Higher Subleq (HSQ) is a typeless simplified C-like language by Oleg which compiles into Subleq.
Grocery List,https://esolangs.org/wiki/Grocery List,2009,,,implemented,stack-based,languages; thematic,This language by User:PuzzleHunter84 takes the form of a grocery list.  Each food item does a certain function depending on the first letter of the item.
GASOIL,https://esolangs.org/wiki/GASOIL,2009,,,implemented,stack-based,languages; high-level,GASOIL (General Application Stack Oriented Imperative Language) is a postfix notation esoteric programming language invented by User:Morex in 2009.
RinGy,https://esolangs.org/wiki/RinGy,2009,,unknown computational class,implemented; output only,,,"RinGy is an esoteric programming language created by User:FireFly in 2009. The memory is shared between program and data, and the memory could be represented as a circular linked list, where the key of the last element points to the first. Instructions are executed until the program halts.
The standard file extension of a RinGy program is .ry."
PureStack,https://esolangs.org/wiki/PureStack,2009,,,unimplemented,stack-based,languages; high-level,"PureStack is an esoteric, stack-based, mostly higher level programming language created by User:iownpants in 2009.  It is designed with the intention of satisfying two principles: basing the language on only stacks and allowing no pointer or array type manipulation by the basic instructions, as well as maintaining an esoteric style while providing a number of useful, higher-level capabilities for programming.  It is currently not implemented, and some of the specification is unclear.  It requires further revision in order to function properly under all conditions."
StateFlip,https://esolangs.org/wiki/StateFlip,2009,,unknown computational class,no io,,languages; low-level; two-dimensional languages,"StateFlip is a 2-D reversible program language, inspired by BackFlip."
This=That 2.0,https://esolangs.org/wiki/This=That 2.0,2009,,turing complete,unimplemented,,languages,This=That 2.0 is an extension of This=That invented by User:A that adds some other special values including arrays of numbers that a variable takes.  For example:
Flump,https://esolangs.org/wiki/Flump,,,,,,languages,"Flump is a Turing-complete OISC whose memory is an unbounded bitstring, and whose single instruction operates on one bit at a time.  Flump was created by user ""r.e.s."" in 2009."
ReactionCan,https://esolangs.org/wiki/ReactionCan,,,,,,languages,"In ReactionCan by User:Zzo38, there are cans, and subroutines, and macros, and liquid substances to put into the can, some of which are more dense, and some of which can react with others. There is also an accumulator which can store a non-negative integer, and a return stack for returning from subroutine calls."
Wheat,https://esolangs.org/wiki/Wheat,2009,,turing complete,output only; implemented,,low-level; languages,"Wheat is an esolanguage designed by Keymaker in 2009. The language is based on outputting and inputting, only what has been output on a previous cycle can be input on the current one. The buffers last only one cycle; if the data of previous cycle is not read on current cycle, on the next cycle it can not be accessed, it will all be erased, replaced by the output of the current cycle (if any, otherwise the empty string is used). Reading empty buffer returns the empty character/string. (The language can not read external input, and is thus classified output-only.) There are no limits for the program sizes or the output it creates. The program runs endlessly unless terminated with the terminating instruction. By cycle it is meant the lines of the program, from top to bottom, executed once. There are 36 one-character registers, each set to empty string on every cycle. Their content may be modified only by inputting into them."
BFI,https://esolangs.org/wiki/BFI,2009,,turing complete; turing tarpits,implemented,stack-based; cell-based,languages; low-level; brainfuck derivatives,"BFI is a esoteric programming language invented by User:Morex in 2009, and can be defined as a Brainfuck with procedures and recursion but without square brackets.
BFI is the acronym of ""BrainFuck Itself"", as a reference to its recursive nature."
DUP,https://esolangs.org/wiki/DUP,2005,,turing complete,implemented,stack-based,languages; low-level,"Ian Osgood created a FALSE interpreter which he enhanced into a variant called DUP with several changes to make coding somewhat more convenient.  In the spirit of FALSE, the language is named after Ian's favorite Forth stack operator."
Auo,https://esolangs.org/wiki/Auo,2009,,,implemented,stack-based,languages,"Auo by User:XFire35 mixes ideas and changes some conventions, and may be quite logically random in its implementation. It utilises a stack which is symbolised by the '@' sign within the language. It also uses strict typing, so there is no automatic conversion of strings into numbers. Auo strictly uses lines as the ending point of an expression or command, therefore leaking onto another line will result in the new line being evaluated separately from its parent. Auo has three stacks, a normal stack, a variable stack and the jump stack."
Addleq,https://esolangs.org/wiki/Addleq,2009,,turing complete,implemented,,languages,"Addleq is a Turing-complete OISC language invented by Oleg (thank r.e.s.), very similar to Subleq, with the exception that it uses addition operation instead of subtraction. However it is much harder to program in Addleq than in Subleq."
Clue (Keymaker),https://esolangs.org/wiki/Clue (Keymaker),2009,,unknown computational class,no io; implemented,,low-level; languages,"Clue is a simple, cyclic esoteric programming language, created in 2009 by User:Keymaker. The computational class of the language is unknown but the author thinks it is not Turing-complete. A Clue program is a string consisting only of 0s and 1s. There is no separate memory; the program string modifies itself every time an instruction is executed. There is a program pointer that initially starts in the beginning of the string, moving forward after every instruction, returning to the beginning when reaching the end of the string. One executed instruction is one cycle in Clue terminology. The program halts if it becomes the empty string."
P1eq,https://esolangs.org/wiki/P1eq,2009,,,implemented,,languages,P1eq (plus one and branch if equal) by User:Oleg is a Subleq derivative with an instruction
Norfuck,https://esolangs.org/wiki/Norfuck,,,finite state automata,implemented; no io,,languages,"Norfuck is an extremely simple esoteric language created by Jack Eisenmann. His goal was to make a Turing-complete language with the fewest commands; however, the language falls short of being Turing-complete. The main principle of Norfuck is that it uses NOR logic to perform all calculations."
Suffolk,https://esolangs.org/wiki/Suffolk,2009,,turing complete,implemented,,languages,"Suffolk is a simple esoteric programming language created by User:ais523 in 2009, in an attempt to make a Turing-complete language along the same lines as Norfuck."
VD3,https://esolangs.org/wiki/VD3,2009,,turing complete,unusable for programming; implemented,,languages,VD3 is a simple programing language. It has only one command.
Suzy,https://esolangs.org/wiki/Suzy,2009,,turing complete,usability unknown; implemented,multi-dimensional languages,languages; stubs,"Suzy is a 3D esoteric programming language, inspired by Befunge, superseding 3D. Suzy source is compiled to byte-code in the original implementation. Comments are made by directing code flow around them. It includes file I/O as well as STDIN/STDOUT. Every non-control ASCII character is used as an operation or variable name."
QUOTE,https://esolangs.org/wiki/QUOTE,,,,implemented,,languages,"QUOTE (Quite Unusually Odd Text Engine) is a ""language that is built to be wrapped around other languages"". It has a C-like syntax that can be used to generate source code for other languages, but is not Turing complete. It was succeeded by QIRAML."
Grits,https://esolangs.org/wiki/Grits,2009,,,implemented,,languages,Grits (Generally Ridiculous In Terms of Scope) is an interpreted programming language created by Davie Janeway in 2009.
Stacking,https://esolangs.org/wiki/Stacking,2009,,turing complete,implemented,stack-based,languages; low-level,Stacking is a stack based esoteric programming language invented in 2009 by Sondre N. Andersen.
Sammich,https://esolangs.org/wiki/Sammich,,,,,,languages,By User:Maxsteele2.
6ix,https://esolangs.org/wiki/6ix,2009,,unknown computational class,implemented; usability unknown,,languages,6ix is a language with six commands by User:Maxsteele2.
Challenger,https://esolangs.org/wiki/Challenger,2003,,,implemented,,languages; two-dimensional languages,"Challenger is a two-dimensional language by Tomasz Grysztar, inspired by Befunge and x86 architecture."
Fact,https://esolangs.org/wiki/Fact,2009,,turing complete,implemented,,languages,"Fact is a programming language created by User:Javawizard, Schrottplatz and MrDudle for JZBot, an IRC bot. Assuming an interpreter with no memory constraints, Fact is a turing-complete language (proof will come soon in the form of a BF interpreter written in Fact that Javawizard is working on)."
XSM,https://esolangs.org/wiki/XSM,2009,,turing complete,,,languages,"XSM is an XML-based programming language written by User:Javawizard. The name stands for XS Modified, as the language was primarily inspired by XS. XSM, however, has considerably more features than XS."
Proof,https://esolangs.org/wiki/Proof,2019,,,unimplemented,,languages,"Proof stands for Processor of files. It serves a similar purpose to sed, although the language is more powerful. The language was invented by User:revcompgeek."
Brainfuck--,https://esolangs.org/wiki/Brainfuck--,2009,,turing tarpits,implemented,cell-based,languages; low-level; brainfuck derivatives,"Brainfuck-- is a language made by User:Wh1teWolf and is a downgraded version of brainfuck, that uses only five instructions."
Track,https://esolangs.org/wiki/Track,2009,,turing complete; turing tarpits,implemented,cell-based,languages; low-level; brainfuck derivatives; two-dimensional languages,"Track is a two-dimensional  esoteric programming language made by User:Wh1teWolf. It has a two-dimensional instruction area of 30x? instruction cells, and a one-dimensional memory array,"
Minifuck-2D,https://esolangs.org/wiki/Minifuck-2D,2009,,turing complete,,cell-based,languages; low-level; brainfuck derivatives; two-dimensional languages,"Minifuck-2d is a two-dimensional programming language invented by User:Wh1teWolf Dec 2, 2009. It has only four commands and it should be turing-complete. It is inspired by Minimal-2D"
Minifuck,https://esolangs.org/wiki/Minifuck,2009,,turing complete,implemented,cell-based,languages; low-level; brainfuck derivatives,"Minifuck is a very minimalistic version of Brainfuck, made by User:Wh1teWolf. It has only 3 instructions and uses an right-infinite tape of binary bits as storage. It should be turing-complete."
MarioLANG,https://esolangs.org/wiki/MarioLANG,2009,,turing complete,,cell-based,languages; two-dimensional languages,"MarioLANG is a two-dimensional esoteric programming language made by User:Wh1teWolf, based on Super Mario. The source code's layout is similar to a Super Mario world, however the programs written in MarioLANG look like a completely normal application when compiled. It is even Turing-complete! This language was inspired by RubE On Conveyor Belts."
JUMP,https://esolangs.org/wiki/JUMP,2009,,finite state automata,implemented,,languages,"JUMP is a three command programming language by User:EzoLang with binary I/O. Commands are GOTO x, IF x THEN GOTO y ELSE GOTO z and OUTPUT x. If a program jumps to a non-existing destination the program stops."
Parenthesis Hell,https://esolangs.org/wiki/Parenthesis Hell,2009,,,implemented,,languages,"Parenthesis Hell is a Lisp-like language in which the only data types are the cons pair and nil.  As a Lisp-like language, code is data, so the code consists only of nested matched pairs of open and close parentheses.  Characters other than open or close parentheses are ignored."
Bipoint,https://esolangs.org/wiki/Bipoint,2009,,unknown computational class,unimplemented; unusable for programming,stack-based,languages; low-level,"Bipoint is an esoteric programming language created by User:FireFly 2009.
It's an SMM with a very limiting set of operations."
RESOL,https://esolangs.org/wiki/RESOL,2009,,,implemented,queue-based,languages,RESOL (REtro Statement Oriented Language) is a programming language inspired by fixed-format FORTRAN.  It does not do anything backwards.
Gibberish (programming language),https://esolangs.org/wiki/Gibberish (programming language),,,turing complete,,stack-based,languages,"Gibberish is a Turing-complete (proof will come soon in the form of a BF interpreter written in Gibberish), stack-based programming language created by User:Javawizard. It's designed to be confusingly comprehensive. To that end, the instruction set is quite large, but every instruction is a letter, and each letter can mean something different depending on where it appears."
Finite Groups,https://esolangs.org/wiki/Finite Groups,2010,functional paradigm,,implemented,,languages,"Finite Groups is language with a mathematical-looking syntax.  Its data types are lists of elements of finite groups.  The supported groups are cyclic groups, dihedral groups, symmetric groups, alternating groups, dicyclic groups, and cartesian products of groups.  As permutations can be applied, it's also a functional language."
Boat,https://esolangs.org/wiki/Boat,2009,,,unimplemented,,languages; two-dimensional_languages,"This page is formatted terribly. If anyone could help out I'd appreciate it a lot.
Boat is a work-in-progress, C- and Brainfuck-inspired, two-dimensional programming language designed by User:Wareya - feel free to suggest things on the talk page.
If there's an infinite memory strip, it should be Turing complete."
Anemone,https://esolangs.org/wiki/Anemone,2010,functional paradigm,turing complete,implemented,,languages; meta-languages,"Anemone is an implemented (see talk page), Turing-complete (see proof) language by User:Afarnen which builds upon combinatory logic, pattern recognition, algebraic data types, and similar concepts."
Ora,https://esolangs.org/wiki/Ora,2010,,,,,languages; two-dimensional languages,"Ora is a (semi)reversible language created by User:zeotrope, it is influenced heavily by 2D-Reverse."
Sonata,https://esolangs.org/wiki/Sonata,2010,,turing complete; turing tarpits,unimplemented,,languages,Sonata is a string-rewriting language by User:Afarnen.
Enigma-2D,https://esolangs.org/wiki/Enigma-2D,2010,,turing complete,implemented,,languages; two-dimensional languages,"Enigma-2D is the name of a 2D programming language made by User:Alegend, on February 14, 2010. It is a mix of Minimal-2D, and BF. It only has 12 commands:"
Hyper Set Language,https://esolangs.org/wiki/Hyper Set Language,2010,,,unimplemented,,languages,"Hyper Set Language is an esolang idea by User:Zzo38, based somewhat on Set Language, but, it is possible to have multiple answers, or no answers, or even to have a set of all sets that are not members of themself!"
WTFZOMFG,https://esolangs.org/wiki/WTFZOMFG,2010,,turing complete,,cell-based,languages,"WTFZOMFG is a language made by Jay Songdahl loosely based on Brainfuck.
It is short for ""What's That Function? Zen Optimized Malicious File Gophers!"""
Reversible-2D,https://esolangs.org/wiki/Reversible-2D,2010,,unknown computational class,implemented,concurrent programming,two-dimensional_languages; languages; low-level,"Reversible-2D is a 2D programming language which can be reversed. It is unique because it still has variables. The short for Reversible-2D is R2D. For version 1, it is R2D1. When version 2 comes, some ppl will lol. It is made by User:TehZ."
Stlisp,https://esolangs.org/wiki/Stlisp,2010,,,implemented,,languages,Stlisp is a stack-based esoteric programming language with a syntax that looks just like lisp.
Hello++,https://esolangs.org/wiki/Hello++,,,,unusable for programming; output only,,joke languages; languages,"Hello++ or Hello Plus Plus is an improvement to the Hello programming language, created by Propeng on Sunday, the 14th of March, 2010 at about 6 PM GMT."
Fob,https://esolangs.org/wiki/Fob,2010,,,implemented,stack-based,languages,"Fob was created by Tslil Clingman, aka Hiato, in early 2010 and represented the author's wishes for a stack based, modal, argument-less-syntax and slightly obfuscated language. It came about as the product of many proto-esolangs horribly mutilated and then joined together in a haphazard manner."
Madbrain,https://esolangs.org/wiki/Madbrain,2010,,turing complete,implemented,stack-based,languages; low-level; two-dimensional languages,"Madbrain is a stack-based ""2D"" esoteric programming language invented by User:Feuermonster in 2010."
ModanShogi,https://esolangs.org/wiki/ModanShogi,,,,implemented,,languages; cjk,ModanShogi is a program language based on shogi game.
Toi,https://esolangs.org/wiki/Toi,2010,,,output only; implemented,,languages,Toi (the name means nothing) is an esoteric language designed by Oklopol.
Calculon,https://esolangs.org/wiki/Calculon,2010,,unknown computational class,implemented,stack-based,languages,"Calculon is a new, esoteric language written by User:Grulf. It is purely mathematical and only allows input and output of numeric values, currently with only 4 digits after the comma."
96,https://esolangs.org/wiki/96,,,turing complete,implemented,,languages,"In 96, each command consists of only one character, and each printable ASCII character is a command. Printable ASCII characters are those in the range 32-126, plus newline: that's 96 of them (this doesn't make a great name: if you have any idea, please tell me)."
ACIDIC,https://esolangs.org/wiki/ACIDIC,2010,,unknown computational class,implemented,,languages,ACIDIC is an esoteric programming language made by User:iconmaster.
ALAGUF,https://esolangs.org/wiki/ALAGUF,2010,,,implemented,stack-based,languages; two-dimensional languages,ALAGUF is a language made by User:iconmaster.
2DP,https://esolangs.org/wiki/2DP,2009,,bounded-storage machine,unimplemented,concurrent programming; cell-based,languages; two-dimensional languages,"2DP is a language made by User:iconmaster. This language, interestingly enough, was made before the author knew about esoteric programming."
Polynomial,https://esolangs.org/wiki/Polynomial,2010,,unknown computational class,implemented,,languages,"Polynomial is an esoteric language created by User:Maedhros777. It is designed in such a way that each program is simply a polynomial function, where all of the language statements are done by the zeroes of the function. Therefore, Polynomial programs are often very difficult to understand, due to the time-consuming nature of finding the zeroes of a function with high degree."
Mimsy,https://esolangs.org/wiki/Mimsy,,,,implemented,cell-based,languages,"Mimsy is an esoteric programming language invented by Michael Patraw. The language has a lot of similarities to assembly, but there are some differences. For one, branching instructions scan the code space at runtime for branch points. No computation of any kind is done at compile-time."
Codan,https://esolangs.org/wiki/Codan,2010,,turing complete,implemented,,languages,Codan is an esoteric programming language designed specifically to annoy people who cannot figure out how to input Unicode. Most of its syntax is outside basic ASCII.
HaPyLi,https://esolangs.org/wiki/HaPyLi,2009,,,implemented,,languages; high-level,"HaPyLi is a programming language designed to compile to Whitespace, with syntax derived from Haskell, Python, and Lisp."
Hack VM,https://esolangs.org/wiki/Hack VM,,,,,,stubs; languages,Hack VM is an esoteric programming language created by Adam Miller.
Entropy,https://esolangs.org/wiki/Entropy,2010,,,implemented,,languages,"Entropy is a programming language about giving up control. All data decays as the program runs: each value alters slightly every time it's used, becoming less precise. An Entropy programmer needs to abandon the pursuit of precision which most programming demands—often working against years of habit—in order to program effectively. Any output from an Entropy program will be approximate, and the more the data is accessed, the more random it will become. The programmer has, at best, a short window to get his/her idea across before the program corrodes. The program itself is not altered—so the next time it runs, it is restored to its original condition, only to decay again through its next run. Entropy was designed by User:Rottytooth."
RegexPL,https://esolangs.org/wiki/RegexPL,2010,,turing complete,implemented,,languages; high-level,RegexPL is a programming language where computation is based entirely on matching strings against regular expressions. The programming language was designed and implemented by Daniel Korsgård in May 2010.
Grusom Skjebne,https://esolangs.org/wiki/Grusom Skjebne,2010,,,usability unknown; implemented,,languages,Grusom Skjebne (Norwegian: Cruel Fate) is an esoteric programming language written by User:5k17 in July 2010.
What!?,https://esolangs.org/wiki/What!?,2018,,turing complete,unimplemented,cell-based,languages,Content div not found
Grin,https://esolangs.org/wiki/Grin,2010,,turing complete,implemented,cell-based,languages; brainfuck derivatives; languages; low-level,"Grin is an esoteric programming language by User:Madk based on brainfuck and named for the frequent occurrence of smiling emoticons. Its intention is to provide the fun of BrainFuck with more powerful maths. Despite some differences in the language, any BrainFuck program can be converted into a Grin program by replacing the ""+""s with ""}"" and the ""-""s with ""{""."
Emo,https://esolangs.org/wiki/Emo,2010,,,implemented,,brainfuck derivatives; languages,"Emo is simply a programming language that is written in all emoticons.  While not an original idea, it is quite different from other attempts at this.  Emo currently stands for Emoticon Memory Obfuscation and it was inspired by Brainfuck.  Even though Emo is an acronym, it is written in title case and not all upper case to highlight the emotional nature of the language."
Tri,https://esolangs.org/wiki/Tri,2010,,turing complete,implemented,cell-based,languages; low-level,Tri is an esoteric programming language by User:Madk. The language is named for the number of symbols in all its keywords.
Cardinal,https://esolangs.org/wiki/Cardinal,2010,,,implemented,cell-based,languages; two-dimensional languages; low-level,"Cardinal is an esoteric programming language by User:Madk, named for the directions that the instruction pointers can travel. Execution takes place on a 2D grid. For anything significantly complex, many instruction pointers must be operating and communicating simultaneously; each pointer has only 2 bytes of memory."
PointerB,https://esolangs.org/wiki/PointerB,2010,,,implemented,,languages,Pointer B is an esolang created by Ilari in 2010. It is a stack-based one-codepoint per operation language.
ByteByteJump,https://esolangs.org/wiki/ByteByteJump,,,bounded-storage machine,implemented,cell-based,languages; low-level,"ByteByteJump is an extremely simple One Instruction Set Computer (OISC). Its single instruction copies 1 byte from a memory location to another, and then performs an unconditional jump."
Arrow,https://esolangs.org/wiki/Arrow,2010,,,implemented,cell-based,languages; brainfuck derivatives; low-level,Arrow is an open-source language that is written in C#. It was created by User:Fallensn0w.
MISC-x86,https://esolangs.org/wiki/MISC-x86,,,turing complete,,,low-level; languages,N.B: MISC-x86 is not based on MISC by Safalra / Stephen Morley.  Nor is it related to Y86 (formerly known as x86).
Unispace,https://esolangs.org/wiki/Unispace,2010,,,unimplemented,stack-based,languages,"Unispace is an esoteric programming language designed by User:Zzo38 in 2010.  It is based on the idea of Whitespace but it uses Unicode. (And if you print out your program (if it has no comments and page numbers), the paper can be reused, and it won't use up the ink!)"
Noobinary,https://esolangs.org/wiki/Noobinary,,,unknown computational class,implemented,,languages,"Noobinary is an esoteric language designed by user Batmanifestdestiny to resemble Binary, but be easier to learn."
Cufrab,https://esolangs.org/wiki/Cufrab,2010,,,unimplemented,,languages; brainfuck derivatives,"Cufrab is an esoteric programming language designed by User:Zzo38 in 2010.  Based on brainfuck, it uses 256 commands, where 1 byte is normally 8 bits (0-255), and 1 word is the address size. They have 16 tapes."
Unreadable,https://esolangs.org/wiki/Unreadable,2010,,turing tarpits; turing complete,implemented,,languages; joke languages,"Unreadable is an esoteric programming language made by User:TehZ. As the name hints, it is made specifically to be unreadable."
FANJIX,https://esolangs.org/wiki/FANJIX,2010,,,,,languages,"FANJIX computer is a new kind of processor instruction codes, for esoteric programming.  It was designed by User:Zzo38 in 2010."
BytePusher,https://esolangs.org/wiki/BytePusher,2010,,finite state automata,implemented,cell-based,low-level; languages,"BytePusher is a minimalist virtual machine invented by user:Javamannen in 2010. You can think of it as a simplified CHIP-8 with bigger memory, bigger screen with colors, and sampled sound. BytePusher has a ByteByteJump one-instruction CPU. The barebones hardware abstraction layer provides only memory-mapped pixel and audiosample buffers, keystates and a fixed framerate. All higher-level stuff (text, sprites, tiles, scrolling, sound synthesis etc.) will have to be done in software."
Colambda,https://esolangs.org/wiki/Colambda,2010,,,unimplemented,,languages,"Colambda is an esoteric programming language designed by User:Zzo38 in 2010 as a sort of coprocessor for Unlambda programming. When Colambda must be loaded, it must be a program file containing one or more Unlambda programs which can be numbered, and one or more files of arbitrary data, which can be numbered. One main Unlambda file is numbered zero, and is the file when starting the program. You can run multiple threads, and there is a storage of INTERCAL registers shared with all threads. Each thread of Unlambda codes has its own memory and input/output."
Deviating Percolator,https://esolangs.org/wiki/Deviating Percolator,2010,,,implemented,,languages; low-level,"Deviating Percolator or DevPerc is an esoteric interpreted language developed by, and successfully implemented by AJF."
1mpr0mp2,https://esolangs.org/wiki/1mpr0mp2,2010,,linear bounded automata,unimplemented,,languages,"1mpr0mp2 is an event-driven language created by User:Quintopia in 2010 to serve the very small niche of creating one-bit media in hardware.  It shall, perhaps, one day get compiled to arduino assembly language and tested, but it is, for now, only an idea."
Fish,https://esolangs.org/wiki/Fish,2009,,turing complete,implemented,stack-based; cell-based,languages; two-dimensional languages,"><> (pronounced as if it were spelled as “fish”) is a stack-based, reflective, two-dimensional esoteric programming language. It draws inspiration from, among others, Befunge. It was invented by User:Harpyon in 2009."
(),https://esolangs.org/wiki/(),2010,functional paradigm,turing complete; turing tarpits,no io; implemented,,languages,"(), pronounced ""parens"", is a daughter of Iota midwived by User:Dankogai in which source code consists entirely of '(' and ')'."
Gorispace,https://esolangs.org/wiki/Gorispace,,,,,,languages; joke languages,This is the programing language for gorillas based on Whitespace.
Villmark,https://esolangs.org/wiki/Villmark,2010,,,implemented,cell-based,languages; low-level,"Villmark (Norwegian: wilderness) is an esoteric programming language designed from 07/2010 to 10/2010 by User:5k17 for the purpose of having a language which, in contrast to many other esolangs, doesn't mainly have commands that do less than the programmer would normally want them to do, but more, or less predictably; specifically, most commands affect and/or depend on more variables than would be reasonable (which would be two, one or, in some cases, zero)."
Befunge/index.php,https://esolangs.org/wiki/Befunge/index.php,2010,,turing complete,unimplemented,cell-based,languages; two-dimensional languages; low-level,"Befunge/index.php is a language designed by User:ehird in 2010. It is identical to Befunge-93, but with one additional instruction:"
Trite,https://esolangs.org/wiki/Trite,2010,,unknown computational class,usability unknown; unimplemented,,languages,"Trite is a simple, single data string esoteric language. Drawing inspiration from the simple language of BCT, it executes commands altering its own execution string. It has no means of i/o other then its initial state and its final state. The only valid commands are hexadecimal digits. When execution flow is reversed, so are the 'next' and 'previous' commands. Trite was created by User:Hiant, Fading Entity on Wednesday, November 17, 2010."
BAM128,https://esolangs.org/wiki/BAM128,2010,,finite state automata,implemented,cell-based,languages,"BAM128 is an esoteric programming language invented by Simone Russo (User:Eafkuor). It consists of a set of instructions to manage two pointers and a square matrix M of 128x128 elements.
The two pointers (from now on called P1 and P2) contain the row and column, respectively, of the matrix element we are working on.
We can modify just one of these pointers at a time.
Both P1 and P2 and every matrix element can assume values in the range [0, 127]."
ZOWIE,https://esolangs.org/wiki/ZOWIE,2009,,turing complete,implemented,,languages; low-level,ZOWIE is an assembly-like esoteric programming language designed by Chris Pressey between summer and winter of 2009.
@tention!,https://esolangs.org/wiki/@tention!,2010,,turing complete,,queue-based,languages,"Created by User:Hiant, Fading Entity in November of 2010, @tention!, better known as @!, is based around the idea of a language where all data structures are queues. Below are the commands, their internal representations (as queues!) and a brief description. Note: the "" operator is the identity function, and only exists internally."
Memfuck,https://esolangs.org/wiki/Memfuck,2010,,turing complete,unimplemented,,languages; brainfuck derivatives,"Memfuck is a theorized esoteric programming language devised by User:Goosey. Based on brainfuck, Memfuck has many characteristics that resemble brainfuck."
Oozlybub and Murphy,https://esolangs.org/wiki/Oozlybub and Murphy,2010,,unknown computational class,unimplemented,,languages,"Oozlybub and Murphy is an esoteric programming language designed by Chris Pressey.  The first version was released on Dec 1, 2010, but the design incorporates several ideas from earlier years, dating back to at least 2006.  These ideas include multiple interleaved parse streams, infinitely-long variable names, gratuitously strong typing, and only-conjectural Turing completeness."
Gemooy,https://esolangs.org/wiki/Gemooy,2010,,turing complete,no io; implemented,,languages; two-dimensional languages,"Gemooy is an esoteric programming language designed by Chris Pressey on December 2, 2010.  It combines features from 2-ill and Etcha, and adds self-modification.  It came about when the author noticed the tape-related semantics of 2-ill were essentially the same as those of BitChanger.  There are also some passing similarities to LNUSP, but Gemooy's design was not (consciously) influenced by it."
Wikiplia,https://esolangs.org/wiki/Wikiplia,2007,,,,,languages,"Wikiplia was an attempt of Tom Murphy VII (tom7) to create ""The Free Programming Language That Anyone Can Edit"".  While created as a joke for the SIGBOVIK 2007 conference, it was really implemented, but unfortunately the wiki it used is now dead.  However, documentation and the source code remains."
Nhohnhehr,https://esolangs.org/wiki/Nhohnhehr,2010,,unknown computational class,implemented,,languages; two-dimensional languages,"Nhohnhehr is a remotely fungeoid esoteric programming language designed by Chris Pressey between December 4 and December 8, 2010."
Gray Snail,https://esolangs.org/wiki/Gray Snail,2009,,turing complete; turing tarpits,implemented,,languages,"Gray Snail is a Turing-complete esoteric programming language designed by Jack Eisenmann in (probably) 2009. It has four commands: INPUT, OUTPUT, POP, and GOTO."
Kelxquoia,https://esolangs.org/wiki/Kelxquoia,2010,,turing complete,,stack-based,languages,"Kelxquoia is an esoteric programming language
designed by Chris Pressey on December 23, 2010.
It is a self-modifying, in fact self-destroying, language which
combines grid-rewriting with remotely fungeoid playfield traversal."
Stackmill,https://esolangs.org/wiki/Stackmill,2010,,,implemented,stack-based,languages,Stackmill is an esoteric programming language created by User:Asiekierka on 25th December 2010.
Brainfuck/w/index.php?title=Talk:Brainfuck/index.php,https://esolangs.org/wiki/Brainfuck/w/index.php?title=Talk:Brainfuck/index.php,2010,,,implemented; total,cell-based,languages; brainfuck derivatives; low-level,Content div not found
TOD,https://esolangs.org/wiki/TOD,2010,,unknown computational class,,,languages,TOD (Time of Day) is a tape-based language designed by User:null in 2010. What its instructions do when executed change depending on the current time of day. The design goal was to make running Hello world take longer than compiling OpenOffice.org.
Memfractal,https://esolangs.org/wiki/Memfractal,2010,,unknown computational class,implemented,,languages; two-dimensional languages,Memfractal is esoteric programming language invented by User:Zzo38.
Stasis,https://esolangs.org/wiki/Stasis,2011,,,implemented,,languages,"Stasis is a pre-Socratic language first produced in the 5th Century BCE, recently revived by User:Rottytooth"
Clue (oklopol),https://esolangs.org/wiki/Clue (oklopol),2009,declarative paradigm; functional paradigm,turing complete,implemented,,languages,"Clue is a programming language created by User:oklopol based on the example-driven programming paradigm. Programs define functions using 'clues' that either list the possible building block functions that a function can be made from, or provide example input-output pairs for the function in question. These clues are compiled into a function."
Symesol,https://esolangs.org/wiki/Symesol,2011,,turing complete,unimplemented,,languages,"Symesol, short for SYMbol ESOteric Language, is an esoteric programming language by Abraham Karplus. Its most striking feature is using symbols for variable names and letters for operations. It is Turing complete. Symesol is generally easier to program in than to read, particularly if variable names are deliberately chosen to mislead. I am currently working on a Symesol compiler in Python. Symesol files have the extension sye. Compiled (Python) files have the extension syx. All errors are fatal. It is also a fatal error to have any not understood characters (e.g. capital letters or non-ASCII characters)."
ClearBF,https://esolangs.org/wiki/ClearBF,2010,,,implemented,,high-level; brainfuck derivatives; languages; brainfuck,"ClearBF is a programming language which helps writing programs in the most famous esoteric programming language: Brainfuck. After compiling ClearBF sources, then the Brainfuck output programs may easily be compiled in their turn using any BF compiler. The syntax is basically inspired by the Tbf language."
ETAS,https://esolangs.org/wiki/ETAS,2011,,,unimplemented,,languages; low-level,"ETAS, short for etas,teas,sate,eats,east,tase,seat,esta,ates,stae,tesa,esat,aest,saet,taes,etsa,aset,tsae,seta,atse,tsea,aets,stea,aste or, if you prefer, Especially Tiny and Annoying Self-modifier, is a language created in 2011 by User:Quintopia inspired by DNA and at the urging of User:Zzo38 to make a language wherein the same piece of code could be interpreted as two different things by reading it beginning at different places."
SynDev,https://esolangs.org/wiki/SynDev,2011,,,unimplemented,,meta-languages; languages,SynDev is a language created by User:iconmaster whose purpose is to check the syntax of programs in other languages.
TinCan,https://esolangs.org/wiki/TinCan,2011,,,implemented,stack-based,languages; low-level,"TinCan is a stack-based language created by User:Dehodson with only one operator, Subtract and branch if less than or equal to zero, with a few modifications."
RPOS,https://esolangs.org/wiki/RPOS,2011,,,implemented,stack-based,languages,"RPOS is an (arguably) esoteric programming language made by User:iconmaster. It stands for Reverse Polish Operating System (or alternately, Reverse POlish Shell). It is a combination of RPL and DOS, as it has both a filesystem and a stack."
Wunnel,https://esolangs.org/wiki/Wunnel,2011,,,,,languages; two-dimensional languages,"Wunnel is a two-dimensional esoteric programming language designed by Chris Pressey (mostly) on February 13, 2011. It is a turning tarpit which draws from the 1L family of languages.  The name is both a pun on the pronunciation of ""1L"", and a recursive portmanteau of the words Wunnel and tunnel which is used to describe the long sequences of identical instructions (often Nops) used in Wunnel programs to sync up remote parts of the program."
Checkout,https://esolangs.org/wiki/Checkout,2011,,,unimplemented,,languages; low-level,"Checkout is an esoteric programming language created by User:ais523 in 2011. It is designed to be lower-level than assembler or even machine code, by matching the way modern processors work more closely than machine language does (machine code matches the way processors used to work decades ago, rather than the way they work nowadays). Thus, it makes operations like memory transfers (which take up the most time on a modern processor) explicit; this leads to the language's name, as memory needs to be ""checked out"" via copy or move instructions in order to be able to use it. The secondary effect of this is that efficient code tends to be shorter and simpler than inefficient code, although it can sometimes be harder to see how it works."
PREFIX,https://esolangs.org/wiki/PREFIX,2011,,turing complete,unimplemented,,languages,PREFIX is an esolang based entirely on prefix notation and function calling.
Blind,https://esolangs.org/wiki/Blind,2011,,turing complete,implemented,,languages; two-dimensional languages; low-level,"Blind is a two-dimensional pattern-matching based language designed by Keymaker in 2011. The language is based on structures that are matched on an infinite field; the structures hold in themselves the coding/data that is to be matched and instructions to modify the field upon a match. Only one match may happen per cycle (but is not required to happen), and the search (from the first structure to the last) begins again -- on the next cycle -- from the first structure. (The field is searched from left to right, from up to down.) The language is fully deterministic."
Right bracket,https://esolangs.org/wiki/Right bracket,2011,,,no io; implemented,stack-based,languages,"] is an esoteric programming language made by User:iconmaster after a discussion on the IRC channel. Its main pupose is to make a language with nothing but brackets and parentheses that are unmatched. Needless to say, ] does not accept programs that are all matched brackets."
InfiniTUM,https://esolangs.org/wiki/InfiniTUM,2011,,turing complete,implemented,,languages,"InfiniTUM is a language made by User:iconmaster that stands for Infinite TUring Machine. It is a language that describes Turing machines with one twist: there is an infinite tape with infinite values, and the head has an infinite number of states. Rather than rulesets, state and value change is dependant on mathematical expressions."
Cyclic ACIDIC,https://esolangs.org/wiki/Cyclic ACIDIC,2011,,,unimplemented,,languages,"Cyclic ACIDIC is a language made by User:Iconmaster that is a derivitive of the language ACIDIC. It is exactly the same as ACIDIC exept after each cycle, all the characters' codes in both stacks gets incremented by one, with '~' wrapping to ' '. This is done so that ACIDIC commands are mutable, making the possibility for more complex programs and making it much much harder to program in. Output is also easier, as you can possibly print out more than what are in the stacks in the beginning."
ISCOM,https://esolangs.org/wiki/ISCOM,2011,,turing complete,implemented,cell-based,low-level,"ISCOM is an esoteric programming language made by User:iconmaster that stands for Iconmaster's Shameless Clone Of Migol. Needless to say, this language is a close derivative of Migol. Its goal is to be like Migol, but make more dense code."
RNA,https://esolangs.org/wiki/RNA,2008; 2011,,,,,languages,RNA is a totally useless esoteric programming language created in 2008 and implemented in 2011 by Cyrus H..
Funciton,https://esolangs.org/wiki/Funciton,2011,declarative paradigm,turing complete,implemented,,languages; two-dimensional languages,
SyL,https://esolangs.org/wiki/SyL,2011,,turing complete,unimplemented,,languages; high-level,SyL is an esoteric language by Abraham Karplus designed to use no punctuation and pronounceable names. The syllables from which the language gets its name are all of the form CV. The extension .syl is used for SyL program files. Program file names are required to use the syntax for variable names.
Subleq+,https://esolangs.org/wiki/Subleq+,,,turing complete,implemented,cell-based,low-level,Subleq+ is a variation of Subleq which uses negative values for indirect memory access.
Maze,https://esolangs.org/wiki/Maze,,,turing complete,implemented,concurrent programming,languages; two-dimensional languages,Maze is a programming language based on variables that move over instructions. Each Variable is called a Car.  Their passage is guided by walls and other controls.
FileCode,https://esolangs.org/wiki/FileCode,2011,,,unimplemented,,languages,"A weird programming language that explains using files to do the work for the interpreter. (No interpreter yet)
It has weird files on your computer that only FileCode understands the extension of.
You must use & and not a new line to separate commands.
It is for experimenting, and it is created by User:Rdococ."
NetFuck,https://esolangs.org/wiki/NetFuck,2011,,turing complete,implemented,cell-based,languages; brainfuck derivatives,NetFuck (also called NF) is an esoteric programming language and is an extension by Daniel Marschall of brainfuck in 2011.
Wake,https://esolangs.org/wiki/Wake,,,,implemented,,languages,"Wake is a programming language which has the essences of Makefile, regular expressions, and pattern matches of functional programming languages, and is intended to be esolang."
Hatter,https://esolangs.org/wiki/Hatter,2009,functional paradigm,,,stack-based,languages,"Hatter is an esoteric programming language devised by user:huangho
on May 4th, 2009 and finished about nine months later. It
is a hat-oriented language, which means that all computation is
represented as dropping and taking data into/from hats. Hats are objects
consisting of an argument stack and descriptions of data movements (called
'magic') associated with dropping and taking elements into/from it. Hats
can also have other stacks for internal use. Data is generally moved, not
copied. A hat can be called recursively, but all instances of a hat share
the same argument and internal stacks."
Snack,https://esolangs.org/wiki/Snack,2011,,,implemented; unusable for programming,,languages; thematic,Snack is created to eat someone. It was created in 2011 by User:SmallBug
Pirandello,https://esolangs.org/wiki/Pirandello,2011,,turing complete,implemented,cell-based,languages; brainfuck derivatives; two-dimensional languages,"Pirandello is a two-dimensional esoteric programming language by Abraham Karplus, which uses six characters often associated with arithmetic for completely different purposes. Any other characters encountered while running the program are an error. User:Marinus has written an implementation in Python."
Rand.Next(),https://esolangs.org/wiki/Rand.Next(),2011,,unknown computational class,,,languages; brainfuck derivatives,"rand.Next() is an esoteric programming language created by User:Checkmate in 2011. It uses the .NET Pseudo random number generator to generate brainfuck code. The only valid characters are the ASCII space, \n and \r. To maintain some compatibility between Operating Systems, there is no difference between LF and CR. Basically, the interpreter creates an instance of System.Random using the sum of the length of the code and the current day of year as a seed. Therefore, every rand.Next() program will behave differently every day. Then, for every (not empty) line of source code, another instance of System.Random called ""rand"" is created, using the sum of the current line's length and a random number from the previously created generator between 0 and 99. Finally, a single BF character is created based on rand.Next() modulo 8:"
Set,https://esolangs.org/wiki/Set,2016,,turing complete,implemented,,languages,"Set is an esolang with only one command: ""Set"". It also supports conditional statements and variable assignments. Output is ASCII-based. Set's tagline is The Set programming language - only one command, endless possibilities! Set is based off the original specification by Reddit user qwertyu63. Initial development by Matheus Avellar."
Alight,https://esolangs.org/wiki/Alight,2011,,turing complete,unimplemented,,languages; two-dimensional languages; high-level,"Alight is a two-dimensional esoteric programming language by Abraham Karplus, distinguished from countless others by not using single character commands. In fact, the commands for Alight look somewhat like those for a non-esoteric imperative programming language."
Fit,https://esolangs.org/wiki/Fit,2011,,turing complete,implemented,cell-based,languages; low-level,Fit is an esoteric programming language by User:Madk which uses numbers in base 5 (termed 'fits') to compute things. Each fit contains a number from -2 through +2 inclusive.
Staq,https://esolangs.org/wiki/Staq,2011,,turing complete,implemented,stack-based,languages; low-level,"Staq is an esoteric programming language by User:Madk in which operations are done using a stack. It is characterized by its fairly unique take on program flow, which allows intertwined loops and instruction overrides among other oddities. The language has robust access to two separate double-ended stacks, and can be shown to be Turing-complete when using just one."
PoGo,https://esolangs.org/wiki/PoGo,2011,,turing complete,implemented,stack-based; cell-based,languages; joke languages; two-dimensional languages,PoGo is an esoteric programming language designed by User:Madk.
Nandypants,https://esolangs.org/wiki/Nandypants,2011,,turing tarpits,unimplemented,cell-based,languages; brainfuck derivatives; low-level,"Nandypants is a dual-tape bitwise language that ended up, completely accidentally, being extremely similar to brainfuck. It was created by Nathan van Doorn."
Surface,https://esolangs.org/wiki/Surface,2011,,turing complete,implemented,cell-based,languages; two-dimensional languages,Surface is an esoteric programming language designed by User:Madk.
DigFill,https://esolangs.org/wiki/DigFill,2011,,turing complete,implemented,cell-based,languages,"DigFill is an esoteric programming language by Abraham Karplus, based on the idea that memory is only accessible once it has been dug out."
Numberwang,https://esolangs.org/wiki/Numberwang,2011,,,usability unknown; no io; implemented,cell-based,languages; low-level,NB: This language's specifications were changed on the 8th of August 2011.
(()),https://esolangs.org/wiki/(()),,,,implemented,,languages,"(()), also known as Empty Nest, is a string re-writing scheme designed by User:DocHerrings to use only properly nested parenthesis, and to be completely impossible to read. The syntax is very simple. Every program consists of a list of productions, with the last item being the data. The interpreter iterates through the productions, testing them in order for a match within the program (all matches are greedy). If a match is found, the match substring is replaced with the productions replacement substring. If the production was non-terminating, then execution starts from the beginning of the productions and data. Otherwise, execution ends and the data is returned. A production of only one object matches the empty string."
F,https://esolangs.org/wiki/F,,functional paradigm,,implemented,stack-based,languages,"F is an esoteric programming language designed by Stevan Apter. It is described as a ""Functional extension to False""."
KimL,https://esolangs.org/wiki/KimL,2011,,,implemented,,languages,"KimL is an esoteric programming language consisting of invocations on pre-defined pseudo-objects. KimL was created by User:Alexanderdna, who created other languages such as ILYC and TS#."
AnyPL,https://esolangs.org/wiki/AnyPL,2011,,,,stack-based,languages,AnyPL is an esoteric programming language created by Peter Larsen in 2011.
Luigi,https://esolangs.org/wiki/Luigi,2011,,turing tarpits; turing complete,no io; unimplemented,cell-based,languages; low-level,"Luigi is an esoteric programming language invented by Nathan van Doorn, which is based on L-Systems, which are a kind of parallel string rewriting. (That is, they rewrite strings in parallel, not that they rewrite parallel strings.)"
BRB,https://esolangs.org/wiki/BRB,2011,,,implemented,,languages,BRB is an esoteric programming language created by Peter Larsen in 2011. BRB stands for: Be Right BRB.
BiTrax,https://esolangs.org/wiki/BiTrax,2011,,turing_complete,implemented,cell-based,languages; two-dimensional_languages; low-level,BiTrax (standing for bit-tracks) is a two-dimensional esoteric programming language invented by User:$M@ in 2011.
MIBBLLII,https://esolangs.org/wiki/MIBBLLII,2011,functional paradigm,,unimplemented,,languages,"MIBBLLII Isn't brainfuck But Looks Like It Is is a programming language made by Nathan van Doorn. It is based on the wikipedia:B,C,K,W system. It maps input (expressed as a church list of church booleans corresponding to the bits of the input, ending with an infinite stream of church trues) to output (expressed as a similar list, presumably finite)."
Constantinople,https://esolangs.org/wiki/Constantinople,2011,,,implemented,,languages; high-level,"Constantinople is a language created by Nathan van Doorn. It is named as such because he had Istanbul,  not Constantinople stuck in his head."
Binodu,https://esolangs.org/wiki/Binodu,2011,,,implemented,,languages,"binodu is an esoteric programming language created by asiekierka in August 2011. It operates on the concept of very simple nodes, which can do simple logic operations or trigger different nodes."
Tedius,https://esolangs.org/wiki/Tedius,,,turing complete,implemented,,languages; low-level,"Tedius is an esoteric programming language designed to be as tedious as possible. In fact, even the creator of Tedius thinks Tedius is tedious!"
Half-Broken Car in Heavy Traffic,https://esolangs.org/wiki/Half-Broken Car in Heavy Traffic,2011,,turing complete,implemented,cell-based,low-level; languages; two-dimensional languages,"Half-Broken Car in Heavy Traffic is a 2D-grid language with operators also acting
as direction signs, making programming very difficult. It was created by Niels
Serup (User:Nqpz)."
Geom,https://esolangs.org/wiki/Geom,2011,,,,stack-based,languages; low-level,"Geom is a simple esoteric language roughly in the style of Forth. It has a small number of primitive operations, each given by a single character. Geom's unique point (pardon the pun) is that its only datatype are two-dimensional points, and its only operators are Euclidean geometric operations. In other words, the only things that can be done to points is to draw circles and (infinite) lines through them, and find intersections of these."
Brains,https://esolangs.org/wiki/Brains,2011,,turing complete,implemented,cell-based; concurrent programming,languages; brainfuck derivatives; low-level,"The brains language is a concurrent dialect of brainfuck whose specification was first written by Thomas DiModica in 2011. It takes elements from brainfork, Toadskin, L00P, and Weave, in addition to adding its own constructs to better support concurrency."
Brainlove,https://esolangs.org/wiki/Brainlove,,,turing complete,,cell-based,brainfuck derivatives; languages; low-level,Brainlove is another extension of the brainfuck language.
Elog,https://esolangs.org/wiki/Elog,2011,,,implemented; total,stack-based,languages,Elog is a stackbased language that can be used to model logical circuits.
Brook,https://esolangs.org/wiki/Brook,2011,,unknown computational class,implemented,queue-based,languages; low-level,Brook is a language created by Nathan van Doorn in 2011 with the gimmick that the program can produce and immediately execute a potentially infinite length program written in Brook. It is unknown if it is Turing-complete or not.
Ziim,https://esolangs.org/wiki/Ziim,2011,,unknown computational class,implemented,concurrent programming,languages; two-dimensional languages,"Ziim is a two-dimensional esoteric programming language, invented by Timwi in 2011, consisting entirely of the following Unicode arrow characters:"
Sclipting,https://esolangs.org/wiki/Sclipting,2011,,turing complete,implemented; non-interactive io,stack-based,languages; cjk; golfing language,"Sclipting is a stack-based golf language, inspired by GolfScript, that uses Chinese characters for instructions and Hangul syllables for data (strings and integers). The basic idea is that to minimise the number of characters in a program, the language should provide as many single-character instructions as possible. It was invented by Timwi in 2011."
Bruijndejx,https://esolangs.org/wiki/Bruijndejx,2011,,,,,languages,Bruijndejx is esolang based on De Bruijn indexing.
Lenta,https://esolangs.org/wiki/Lenta,2011,,unknown computational class,implemented,cell-based,languages; two-dimensional languages,v0.11 This a work in progress. Written by User:Milcho.
Wordfuck,https://esolangs.org/wiki/Wordfuck,,,turing tarpits; turing complete,implemented,cell-based,joke languages; brainfuck equivalents; brainfuck derivatives; languages; low-level,"Wordfuck (also known as Natural BF-based language with common instructions and syntax of that language, or just NBFBLWCIASTL) is a language created by User:Marcsances identical to Brainfuck, except the way to write statements. That makes of Wordfuck even more difficult than Brainfuck (if you want to write beautiful programs, if not, it's just as easy as Brainfuck, but longer)."
Object (programming language),https://esolangs.org/wiki/Object (programming language),2007,object-oriented paradigm,,unimplemented,,languages,"Object is the real object-oriented programming language, where everything is an Object, even YOU, created in 2007 by User:Pegasus (Erick Atencio)."
Parnassus,https://esolangs.org/wiki/Parnassus,2007,,,unimplemented,,languages,"The Parnassus Programming Language (2007, by User:Pegasus) is a programming language with features that other languages never had before. It is based on the When instruction, that allows to run a procedure in the moment an event happen. It also has a support to multiple strings of OR and AND logical statements, making the program simplier. It will be implemented through Hera Runtime"
Hebe Script,https://esolangs.org/wiki/Hebe Script,,,,,,languages,"Hebe Script is a simple scripting language that allows for the creation of little applets for the Hera Runtime. It has the CommonSystem library preloaded, and it does not have a App object, so it does not need a ""When app.run = True"" main method."
Libertas,https://esolangs.org/wiki/Libertas,2011,,,,,languages,Libertas is the first syntax-error runtime-error free programming language ever. The interpreter will execute the instructions no matter what.
Immi,https://esolangs.org/wiki/Immi,2011,,,,,languages; thematic,"Immi is a concept (possibly joke) esoteric programming language started by User:Star651 on December 10, 2011. ""Immi"" is named for Imogen Heap, a British pop star. The stated goal of the language is to teach people programming while having a little fun. Below is a list of all the commands. In a subsection, there is a list of the origins of the command names."
SQRT,https://esolangs.org/wiki/SQRT,2011,,,,,languages,SQRT is a programming language with the theme of algebra by User:ZirconiumX.
Mineso,https://esolangs.org/wiki/Mineso,2011,,,implemented,cell-based,low-level; languages,"Mineso is a turing-complete[citation needed] I can convert some BF to Mineso, but I don't know enough BF to convert anything programming language made by User:DeadlyFugu. It uses tape memory, which starts at position 0 and, if on a Turing machine, could go on for infinity. However, it'd be impracticle since Mineso uses unary, with the only number it has being '1'. Every operation in Mineso requires a number after it, having no 1's after it would be treated as a zero."
Bloux,https://esolangs.org/wiki/Bloux,2011,,unknown computational class,unimplemented,,languages,Bloux is an esoteric shell/file management system invented by User:iconmaster in December 2011. It implements a basic level of file management through stacking files in rectangular blocks.
AttoASM,https://esolangs.org/wiki/AttoASM,2011,,,implemented,,languages; low-level,"AttoASM is a language designed for the AttoWPU experimental processing unit, as part of the WPU (Weird Processing Unit) concept. AttoASM is the assembly language of the AttoWPU unit and thus corresponds to the basic operation of this architecture. Both AttoWPU and AttoASM use very minimalistic design and support only three elementary instructions that change individual bits on a bus. By a series of these elementary operations, various internal units can be controlled to perform various tasks."
SumaMoito,https://esolangs.org/wiki/SumaMoito,2012,,turing complete,,,languages,SumaMoito is a collection of languages that aims to include minimal Turing-complete languages with a particular style.
Spyrodecimal,https://esolangs.org/wiki/Spyrodecimal,,,,,,languages,"Spyrodecimal is an esoteric programming language created by Spyro543. It was designed to have only numbers as commands, but there are a few letters as commands, too."
J.A.V.A.,https://esolangs.org/wiki/J.A.V.A.,,,,,,languages; joke languages,J.A.V.A. or Just Another Verbose Annoyance is a WIP joke language by Tailcalled. It is an object disoriented language.
Stlang,https://esolangs.org/wiki/Stlang,2012,object-oriented paradigm,turing complete,implemented,stack-based,languages; high-level,"Stlang is a stack-based esoteric programming language invented by User:Feuermonster in 2012. The main idea is to create a stack-based esoteric language with a very sophisticated standard library which outshines other major languages' standard libraries. Also, due to possible use in golfing, often-used function names must have a short, symbolic alias. Stlang supports anonymous functions. But most importantly: The spirit of Stlang is to implement lots of features in very weird and esoteric ways no other language or sane person would implement them with."
Hollow,https://esolangs.org/wiki/Hollow,2012,,turing complete,implemented,stack-based,languages,"Hollow is an esolanguage based on low-level string-manipulation, designed by Keymaker in 2011, but completed and published in 2012. The language is Turing-complete. The memory model is an unbound stack of strings. Below is a nine-line program to showcase the language (the program's execution detailed in a section down the page):"
Basic Input/Output Commands,https://esolangs.org/wiki/Basic Input/Output Commands,,,unknown computational class,unimplemented,,languages; low-level,Basic Input/Output Commands is an esoteric assembly code-like programming language that simply uses device input/output.
Beam,https://esolangs.org/wiki/Beam,2012,,turing complete,implemented,cell-based,languages; two-dimensional languages,Beam is yet another two dimensional language thought of around mid-2010 by User:Feuermonster and implemented and published in 2012.
Fueue,https://esolangs.org/wiki/Fueue,2012,,turing complete,implemented,queue-based,languages; low-level,Fueue is a queue-based esoteric programming language created by Nathan van Doorn in 2012. Everything is stored in a single queue. The source of the program is converted to this queue on execution.
Absurd Brainfuck,https://esolangs.org/wiki/Absurd Brainfuck,2012,,turing complete,,,brainfuck derivatives; languages,"Absurd Brainfuck is a Brainfuck-derivative by User:Tailcalled. It is called 'absurd' because the side effects flow in the opposite direction of the data. In other words, when you change a cell, you change what it *was*, not what it is. This can lead to undecidable or paradoxical scenarios, of course, especially when using the , command."
Real Fast Nora's Hair Salon 3: Shear Disaster Download,https://esolangs.org/wiki/Real Fast Nora's Hair Salon 3: Shear Disaster Download,2012,functional paradigm,turing complete,implemented,,languages,Real Fast Nora's Hair Salon 3: Shear Disaster Download is a functional esoteric programming language created by Nathan van Doorn in 2012. It is based on the lambda calculus.
Nonsense Query List,https://esolangs.org/wiki/Nonsense Query List,2012,,,,,languages,"Nonsense Query Lists are almost the same as Structured Query Lists but very difficult to understand and having a much shorter size (in bytes). The Nonsense Query List language was originally created in 2012, based on the SQLite Structured Query List language, in an attempt to shorten original Structured Query List code as much as possible."
ProgFk,https://esolangs.org/wiki/ProgFk,2012,,unknown computational class,implemented,cell-based; binary,languages; low-level,ProgFk is a language created by User:David.werecat using nibbles as instructions and having theoretically infinite bitwise memory.
DBFV!,https://esolangs.org/wiki/DBFV!,2012,,turing complete,implemented,stack-based,languages,DBFV! is an esoteric programming language by User:David.werecat where each line of code is a separate function.
RunR,https://esolangs.org/wiki/RunR,2011,,unknown computational class,implemented,,languages; two-dimensional languages,"RunR is an esoteric programming language by User:David.werecat that works in a two dimensional space known as ""The Grid""."
SVM,https://esolangs.org/wiki/SVM,2012,,unknown computational class,implemented,,languages,SVM is an esoteric programming language by user:David.werecat that works as a virtual machine with expandable memory.
ELANG,https://esolangs.org/wiki/ELANG,2011,,unknown computational class,implemented,,languages; two-dimensional_languages,ELANG is an esoteric programming language by User:David.werecat which runs in two dimensions and has a two dimensional register matrix and a string register.
BrainFunge2,https://esolangs.org/wiki/BrainFunge2,2012,,,unimplemented,,languages,"BrainFunge2 is an esoteric programming language created by NSQX made of two-character instructions, based on a few commands in Brainfuck, a few commands in Befunge, and NSQX's other thoughts."
EGL,https://esolangs.org/wiki/EGL,2012,,unknown computational class,unimplemented,cell-based,languages; two-dimensional languages; low-level,EGL (Esoteric Gridding Language) is a two-dimensional fungeoid esoteric programming language designed by User:Sato.
2B,https://esolangs.org/wiki/2B,2012,,turing complete,implemented,cell-based,languages; low-level,2B is an esoteric programming language created by user:David.werecat in which memory is stored in a tape where each cell is a separate tape of bytes.
DALIS,https://esolangs.org/wiki/DALIS,2011,,unknown computational class,implemented,,languages; high-level,"DALIS is a cloud based programming language created by David from David's Blog in 2011. The language is still evolving. DALIS programs usually run server-side, but interpreters are also being developed for the .NET Micro Framework and the PC command line."
--C-=C-C--,https://esolangs.org/wiki/--C-=C-C--,2012,,turing complete,unimplemented,,languages,"--C-=C-C-- is a stripped-down version of C (or C--) which would rather look esoteric (but Turing complete). There is no concept of object-oriented programming in --C-=C-C--, and the only type in --C-=C-C-- is ""void"", the only mathematical operations that can be done directly with operators in --C-=C-C-- are addition and subtraction, the only kinds of conditions are (var) (if var is not 0) and (!var) (if var is 0), the only condition operators are || (OR) and && (AND), and only one character can be inputted using getchar() or one character can be outputted using putchar() (stdio.h) at a time. A simple ""Hello World!"" program in --C-=C-C-- would look like this:"
LLL,https://esolangs.org/wiki/LLL,2012,,bounded-storage_machine,implemented,cell-based,languages; two-dimensional languages; low-level,"LLL is an esoteric programming language designed by Lode Vandevenne in 2012. Programs in LLL are made from a circuit of logic components. Special components allow console input and output. A graphical mode where the circuit can be seen in action is also possible. In theory, an existing CPU could be built in this given its logic diagram."
Parenthetic,https://esolangs.org/wiki/Parenthetic,2012,functional paradigm,turing complete,implemented,,languages,The Parenthetic programming language is a functional programming language that (like Parenthesis Hell) uses only parentheses in its code. All other characters are considered comments.
Numeric Batch,https://esolangs.org/wiki/Numeric Batch,,,,implemented,,languages,Numeric Batch is an alternate form of Batch which has been entirely programmed in Batch. Created by User:Shubshub on 27 April 2012 in New Zealand.
!!!Batch,https://esolangs.org/wiki/!!!Batch,2012,,turing complete,implemented,,languages,"!!!Batch is another derivative of the Batch programming language created by Shubshub :D. !!!Batch is an encoding of Batch where each character is in the form of a question mark, followed by some amount of exclamation marks, then an optional marking character, and finally another question mark. Other characters are returned as-is. Since !!!Batch is an encoding of Batch, and Batch is Turing complete, so is !!!Batch."
Lambdastack,https://esolangs.org/wiki/Lambdastack,,,turing complete,implemented,stack-based,languages,Lambdastack is stack based esolang created by User:EzoLang.
Nevermore,https://esolangs.org/wiki/Nevermore,,,,,,brainfuck derivatives; languages,"Nevermore is an esoteric programming language created by User:ajzaff.  The language and syntax rules are designed to be overly obscure, and therefore, make it difficult to program."
URSL,https://esolangs.org/wiki/URSL,2012,,turing complete,implemented,cell-based; stack-based; queue-based,languages,"URSL is an esoteric programming language created by user:David.werecat which has a stack, queue, tape, memory array and ten registers."
Macmac,https://esolangs.org/wiki/Macmac,2012,functional paradigm,turing complete,implemented,stack-based,languages,Macmac is an esoteric programming language created by user:David.werecat in which every command is a function and loops are emulated using macros.
VTL,https://esolangs.org/wiki/VTL,2012,,,implemented,,languages; low-level,VTL is an esoteric programming language created by user:David.werecat which loads code into modifiable memory and an extended section.
Mobius,https://esolangs.org/wiki/Mobius,2012,,finite state automata,implemented; output only; unusable for programming‏‎,cell-based,languages; two-dimensional languages,"Mobius is an esoteric programming language created by user:David.werecat which reads images as program code, executes in two dimensions, and has only audio output.  It stands alongside URSL, Macmac and VTL as languages that were all created on the same day, which was when the author had a streak of insanity and created 4 languages in one day."
~English,https://esolangs.org/wiki/~English,2012,,,implemented,,languages; high-level,"~English (NOT English) is an esoteric attempt at using a natural language as a programming language. It was designed and implemented by user:AnotherTest.
A statement is an English sentence. The language syntax is very loose, it is thus possible to write nonsensical sentences. Keywords always have multiple synonyms.
The are 7 types of statements in ~English:"
123,https://esolangs.org/wiki/123,2012,,turing complete; turing tarpits,implemented,cell-based,languages; low-level; brainfuck derivatives,123 is an esoteric programming language created by user:David.werecat which further minimizes asdf.
Logical,https://esolangs.org/wiki/Logical,2012,,,implemented,,languages,Logical is an esoteric programming language created by user:David.werecat which doesn't do what you think it should.
Monkeys,https://esolangs.org/wiki/Monkeys,2012,object-oriented paradigm,,implemented,,languages; two-dimensional languages; thematic,Monkeys is an Esoteric programming language by user:david.werecat which is based entirely on the interaction of monkeys.
BrainfuckXT,https://esolangs.org/wiki/BrainfuckXT,,,,,,brainfuck_derivatives; languages,"BrainfuckXT is an extension to Brainfuck by User:KryptonX. BrainfuckXT is a compiled language targeting the .NET Framework. Changes have not been made to Brainfuck syntax and functions. Brainfuck code is valid BrainfuckXT code. Both can be used in unison. Features have been added to make the language more powerful, although BrainfuckXT does not make commercial grade software. Nonetheless, useful daily applications can be made. A compiler can be obtained from here and the source from my github."
Headsecks,https://esolangs.org/wiki/Headsecks,2012,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck equivalents; brainfuck derivatives; brainfuck derivatives; low-level,"Headsecks is a brainfuck equivalent in which each character of the source code is interpreted as its ordinal value modulo 8, from which the instruction to execute is determined. It was designed and implemented by User: andkerosine in May 2012."
BSM,https://esolangs.org/wiki/BSM,2012,,turing complete,implemented,stack-based,languages; low-level,BSM is an esoteric programming language created by user:David.werecat which executes instructions based on an 8-bit state machine with a single bit modifier.
Dark,https://esolangs.org/wiki/Dark,2012,object-oriented paradigm,turing complete,implemented,,languages; thematic; high-level,Dark is an Esoteric programming language by user:David.werecat which is designed to be inherently evil.
BFEnet,https://esolangs.org/wiki/BFEnet,,,,,,languages; brainfuck derivatives,BFEnet (Brainfuck Extended for .Net) is an extended Brainfuck translator to C#. This language is focused on advanced console output. Memory size can be changed with command-line parameter. Microsoft .Net 3.5 or 2.0 command line compiler (csc.exe) is required to build translated BFEnet code.
Fuck4,https://esolangs.org/wiki/Fuck4,,,,,,brainfuck_derivatives; languages,"Fuck4 is four command esoteric language.
Fuck4 machine by default has 8 half-bytes 0-127, but this is not strict. In any case memory is finite and looped, this why only one-way pointer shift is required."
DcScript,https://esolangs.org/wiki/DcScript,,,,implemented,,languages,"dcScript is an esoteric language created by Daaloul Chiheb on September 2011.
It is designed to be useful but is minimalistic and is hard to code with it for big projects."
Light Pattern,https://esolangs.org/wiki/Light Pattern,2012,,,implemented,,languages,"In Light Pattern, a series of photos constitutes source code. Changes in exposure and dominant color from one image to the next determine commands – the language has no regard for the content of the images apart from these attributes. Photos sit in a single directory and are read in alphabetical order. Light Pattern programs can be hidden in family photographs or any collection of images, given they are arranged in the right order."
Atom,https://esolangs.org/wiki/Atom,,,turing complete,,,languages,Atom is a Turing-Complete programming language that is designed to obfuscate software. It does this skillfully by allowing line numbers to be mixed and even broken up.
Pit,https://esolangs.org/wiki/Pit,2012,,unknown computational class,implemented,,languages; low-level,Pit is an Esoteric programming language by user:david.werecat which is designed to be extremely low level.
Wittgen,https://esolangs.org/wiki/Wittgen,2012,,,implemented,,languages,"Wittgen is a serious, but as yet esoteric, programming language that has only two instructions: assign and retrieve."
KanjiCode,https://esolangs.org/wiki/KanjiCode,,,turing complete,,,cjk,"KanjiCode (漢字コード) is a language created by ACVC in 7/1/2012. It has similarities to FALSE and Underload. As the very own name suggests, it's a language that aims to use as much Kanji as possible. There are currently no compilers for the language, only one interpreter, written in C#. It is very similar to FALSE in almost all aspects. For example, it's possible to create lambda expressions and store then into user-defined variables. Also, it's stack oriented : just like FALSE."
Eniuq,https://esolangs.org/wiki/Eniuq,2012,,turing complete,implemented,stack-based; queue-based,languages,"Eniuq is a stack- and queue-based esoteric programming language in which it is impossible to write nontrivial quines, but flow control is done by the methods normally used for quines.  It was invented by Edward Cree."
SGMJQFuck,https://esolangs.org/wiki/SGMJQFuck,2012,,turing complete; turing tarpits,implemented,,languages; brainfuck derivatives,"SGMJQFuck is a brainfuck deriviative created in 2012 by User:X0wl. Although it supports all the brainfuck fuctionality and instructions, it has extensions to allow the self-modifying code."
Iris,https://esolangs.org/wiki/Iris,2012,,,,,languages,Interesting Random Instruction Sets (IRIS) is a language authored by User:Montywest in 2012.
Klon,https://esolangs.org/wiki/Klon,2012,,,implemented; total; unusable for programming,cell-based,languages,Klon is a programming language created by User:KlonMac7.
Troupe,https://esolangs.org/wiki/Troupe,2012,,turing complete,unimplemented,,languages,"Troupe is an esoteric programming language designed by Chris Pressey on June 25, 2012, in Winnipeg, Manitoba, Canada."
Yboy,https://esolangs.org/wiki/Yboy,2012,,,,cell-based,languages,Yboy (Your Brain On Yboy) is an esoteric programming language written by David Seaman in 2012.
Nqubl,https://esolangs.org/wiki/Nqubl,2012,,,implemented,queue-based; stack-based,languages,Nqubl is an esoteric programming language created by user:David.werecat where instructions are queued and must be explicitly executed.
Inline,https://esolangs.org/wiki/Inline,2012,,turing complete,implemented,cell-based,languages,Inline is an esoteric programming language created by User:OberoN.
Burlesque,https://esolangs.org/wiki/Burlesque,2012,,turing complete,implemented,stack-based,languages; golfing language,"Burlesque is a concatenative, dynamic typed, lazy programming language by User:Feuermonster, and the successor
of Stlang but less feature bloated. The name means what it means.
The main design goals of Stlang still
apply. Burlesque evolved to be a programming language used for both serious applications and golfing too. For a complete description of the language please refer to the Moonpage."
Bytemap,https://esolangs.org/wiki/Bytemap,2012,,,,,languages; low-level; two-dimensional languages,"Bytemap is a self-modifying language that stores all source and data in the same place and format.
All commands and data are written onto an indefinitely large 2D grid of bytes.
Bytes may be read as instructions, read as data, or written over by other instructions."
RU,https://esolangs.org/wiki/RU,2010,,,implemented,concurrent programming,languages; two-dimensional languages,RU is a multithreaded two dimensional esoteric programming language. It was invented by Adrian Toncean in 2010 and was first featured in the programming game called Robot Unlock!!!.
Doorspace,https://esolangs.org/wiki/Doorspace,2012,object-oriented paradigm; functional paradigm,turing complete,implemented,,languages; thematic; high-level,"Doorspace (or ""Qugord"") is an Esoteric programming language by user:David.werecat where the program is a series of doors and everything is stored in arrays."
Dirst,https://esolangs.org/wiki/Dirst,2012,,turing complete,implemented,,languages; high-level,Dirst is an Esoteric programming language by user:David.werecat where the source code is a directory.
Benul,https://esolangs.org/wiki/Benul,2012,,unknown computational class‏‎,implemented,queue-based,languages; low-level,Benul is an esoteric programming language created by user:David.werecat where the source code is only BEL and NUL characters.
Loose Circular Brainfuck (LCBF),https://esolangs.org/wiki/Loose Circular Brainfuck (LCBF),2012,,turing complete,implemented,cell-based,languages; brainfuck derivatives,Loose Circular Brainfuck (LCBF) is created by Maurice Ling and is a derivative of Brainfuck. It is originally meant as a generic mechanism to test out different varieties of assembly or op-code typed languages.
NucleotideBF (nBF),https://esolangs.org/wiki/NucleotideBF (nBF),2012,,finite state automata,unusable for programming; implemented; total,cell-based,languages; brainfuck derivatives,"NucleotideBF (nBF)  is created by Maurice Ling which is a derivative of Brainfuck based on IUPAC nucleotide code. It uses only 5 of the 8 operations in Brainfuck, and there is no loop operations."
Ragaraja,https://esolangs.org/wiki/Ragaraja,2012,,turing complete,,cell-based,languages; brainfuck derivatives,"Ragaraja is created by Maurice Ling and is a derivative and massive extension of Brainfuck. This work is influenced by a large number of Brainfuck derivatives, other esoteric programming languages, and even assembly languages. Probably the most critical difference between Ragaraja and other Brainfuck derivatives is the large number of commands / instructions - 1000 possible commands / instructions, inspired by Lord Nandi (Lord Shiva's mount) who was supposed to be the first author of Kama Sutra and wrote it in 1000 chapters."
Ser2,https://esolangs.org/wiki/Ser2,2012,,turing complete,,,languages,"ser2 was created between 2009 and 2012. Its name abbreviates ""Search Entity and Replace"", the ""2"" indicates the second attempt. ser2 is inspired by C++ template meta-programming. It is a minimalistic functional language with the initial and final state predefined and built-in i/o."
Cfluviurrh,https://esolangs.org/wiki/Cfluviurrh,2012,,turing complete,,,languages,"Cfluviurrh is an esoteric programming language designed and implemented by Chris Pressey on August 25th and 26th of 2012, in Winnipeg, Manitoba, Canada, based an on idea that occurred to him about a year earlier in Pearson International Airport, Toronto."
X.so,https://esolangs.org/wiki/X.so,2012,,,implemented,stack-based,languages,"X.so is a stack-based, esoteric programming language created by User:AnotherTest.
The X in the name comes from extensible, and the so extension refers the to the shared object files that the X.so interpreter may dynamically load as a form of plugins."
Knight Shuffling Tower,https://esolangs.org/wiki/Knight Shuffling Tower,2012,,unknown computational class,usability unknown; implemented,queue-based,languages,"Knight Shuffling Tower is an esoteric programming language created by User:Koen in 2012. It is based on a special data structure which is almost, but not quite, a queue."
Electric BitFunk,https://esolangs.org/wiki/Electric BitFunk,2012,,unknown computational class,no io; unimplemented,cell-based,languages; two-dimensional languages; brainfuck derivatives; low-level; low-level,"Electric BitFunk is a two-dimensional esoteric programming language created by User:Koen on 2012, september 9. It was inspired mainly by Electric Go, an ""esoteric"" variant of the game of go (see External resources below).
Electric BitFunk operates on a tape of bits, using instructions borrowed from BitChanger. However, those instructions affect the playfield as well, making programming in Electric BitFunk a challenge somewhat similar to Half-Broken Car in Heavy Traffic."
Fackward,https://esolangs.org/wiki/Fackward,2012,,unknown computational class,unimplemented,stack-based,languages; low-level,"Fackward is a stack-based esoteric programming language created by User:Koen in 2012. It is an attempt to make a stack-based, but still Turing-Complete, language similar to Fueue, which is queue-based. In Fackward, there is only one data structure. It is made of two stacks, the forward stack and the backward stack. When execution starts, the source of the program is converted to the forward stack. The backward stack is initially empty."
Jolverine,https://esolangs.org/wiki/Jolverine,2012,,turing complete,implemented,,languages; two-dimensional languages; low-level,"Jolverine is an esoteric programming language designed by Chris Pressey between September 10 and 11, 2012.  It was devised as a conscious attempt to expand the genre of turning tarpit by adding the feature of modifying the instruction wheel during execution.  It is not dissimilar to Wunnel, and was influenced slightly by Half-Broken Car in Heavy Traffic."
ComeFrom,https://esolangs.org/wiki/ComeFrom,2012,,,implemented; usability_unknown,stack-based,languages; low-level,"ComeFrom is a language made by David Roberts. It is also known as the ComeFrom Language, or CFL for short. Its notable feature is that the only flow-control constructs are comefroms and conditional comefroms. (A comefrom is the opposite of a goto.) In addition, the only storage it has is a variable stack which doubles as returned output. However, you may print variables while the program is running. In event of catastrophic failure, the language only tells why it has crashed, not why your program has crashed. It has one error message to help, but due to implementation details this is impossible to trigger."
REVER,https://esolangs.org/wiki/REVER,2012,,,unimplemented,,languages,"REVER is a reversible programming language, which has a lot of things, but not quite everything."
*brainfuck,https://esolangs.org/wiki/*brainfuck,2012,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck_derivatives; low-level,"*brainfuck is a tape-based esoteric programming language designed in september 2012 by User:Koen. It is identical to brainfuck, except that the instructions > and < have been replaced by an extensive use of pointers. The name is read ""pointed brainfuck"" and is inspired by the operator * from the language C."
Kkipple,https://esolangs.org/wiki/Kkipple,2012,,turing complete,,stack-based,languages,"Kkipple is a close derivative of the stack-based language Kipple. The idea of making a derivative came when User:Koen tried to write an interpreter, then realized it was as far from the specifications as was possible to be. The name is pronounced like stuttering the word ""Kipple""."
FiM++,https://esolangs.org/wiki/FiM++,2012,object-oriented paradigm,,,,languages; high-level; thematic,"FiM++ is an object-oriented language made by fans of My Little Pony: Friendship is Magic, which takes its name from the initials of the show's subtitle. Its syntax and structure are inspired by Java and ALGOL. The original idea was published on October 4th, 2012 by Cereal Velocity, one of the bloggers on Equestria Daily and inventor of the language, after being unable to find pre-existing programming language based on My Little Pony. It was then picked up by an team of community programmers and completed within the month."
BCDFuck,https://esolangs.org/wiki/BCDFuck,2012,,,unimplemented,,languages; brainfuck derivatives,"BCDFuck takes a stream of bytes and reads each byte as two BCD-encoded 4-bit words. Like other Brainfuck variants, BCDFuck operates on an array of cells, which in this case are 4 bits wide. The digits 0-9 are entered directly into the cells while the six 'wasted' states of 4-bit BCD encoding are translated into brainfuck-like instructions that act on the aforementioned array. Since any 4-bit word is a valid BCDFuck instruction, it would follow that all cells can be executed (as long as potential problems like unbalanced brackets can be ignored)."
SELECT.,https://esolangs.org/wiki/SELECT.,2012,,turing complete,implemented,graphical output,languages; brainfuck derivatives,"SELECT. is a minimalistic esoteric programming language based on exponentials and logarithms. It is based on brainfuck, but replaces the usual operations of incrementation and decrementation with exponentials and logarithms, and replaces the usual unsigned integers with double-precision complex numbers held on each cell. Also, programming in it is very unlike programming in brainfuck, as the only operations which haven't been changed semantically from brainfuck are LEFT. and RIGHT. (brainfuck's < and >)."
EOOOL,https://esolangs.org/wiki/EOOOL,2012,object-oriented paradigm,,implemented,stack-based,languages,"EOOOL stands for Esoteric Obfuscated Object Oriented Language
(I know it is redundant to say a language is esoteric or obfuscated on this site, but I do not really care.)"
WASD,https://esolangs.org/wiki/WASD,2012,,,implemented,,languages; brainfuck derivatives,Current Version 1.1
ZiziQue,https://esolangs.org/wiki/ZiziQue,,,unknown computational class,usability unknown; unimplemented,,languages,"ZiziQue is a very mysterious esoteric programming language. The only thing known about ZiziQue is that, in it, an implementation of Deadfish might look like this:"
BrainCurses,https://esolangs.org/wiki/BrainCurses,2012,,turing complete,implemented,deque-based,languages; brainfuck_derivatives,"BrainCurses is a language derived from Brainfuck, using a deque instead of a tape for memory. Its name comes from the fact that programs usually resemble censored swearing in cartoons such as #@!*&@^!."
Carriage,https://esolangs.org/wiki/Carriage,2012,,unknown computational class,implemented; no io,stack-based,languages,"Carriage is a concatenative programming language designed by Chris Pressey
in mid-November 2012.  It is the result of trying to devise a ""pure""
concatenative language, i.e. one where the rule ""concatenation = function
composition"" is taken to be strictly literal and universal (with no exceptions
such as allowing nested quoted programs.) It falls short of
that goal somewhat, but it has some mildly unusual properties, so it is presented
here as an esolang."
Expload,https://esolangs.org/wiki/Expload,2012,,unknown computational class; turing tarpits,unimplemented; output only,stack-based,languages; low-level,Expload is an esoteric programming language designed by Chris Pressey at the start of December 2012.  It is an Underload derivative where programs cannot be guaranteed to be executed efficiently because individual instructions are selected for execution based on EXPTIME-complete problem instances.
Radixal!!!!,https://esolangs.org/wiki/Radixal!!!!,2012,,unknown computational class,usability unknown; unimplemented,cell-based,languages,"Radixal!!!! is an esoteric language created collaboratively by the #esoteric IRC channel on 7 December 2012. The details of the spec were mostly worked out by User:ais523. The language revolves around having a numerical representation that can't represent certain numbers, and commands that are specifically designed to be awkward to use, while still quite powerful. Therefore, it can be considered to be in the same family as Malbolge and Dis, although probably rather easier, and without exactly the same purpose."
Mascarpone,https://esolangs.org/wiki/Mascarpone,2007,,turing complete,implemented,stack-based,languages,"Mascarpone is a stack-based, self-redefining programming language designed by Chris Pressey in 2007 as a successor to Emmental.  In Mascarpone, meta-circular interpreters are first-class values; the interpreter currently being used to interpret the program may be pushed onto the stack (""reified"") and manipulated, and an interpreter on the stack may be popped and used as the interpreter for the following part of the program (""deified"")."
YASBL,https://esolangs.org/wiki/YASBL,,,,,stack-based,languages,"YASBL stands for ""Yet Another Stack Based Language"" ."
Quipu,https://esolangs.org/wiki/Quipu,2013,,turing_complete,implemented,,languages; low-level; thematic; two-dimensional languages,"Quipu is an esoteric programming language inspired by Quipus (also known as ""talking knots"") – recording devices historically used by Incas. Quipu was originally designed by Vladimir Kostyukov in Jan 2013."
A0A0,https://esolangs.org/wiki/A0A0,2013,,,implemented,queue-based,languages,"A0A0 is a queue-based, self-modifying programming language created by User:Snowyowl in 2013."
TScript,https://esolangs.org/wiki/TScript,2013,,,implemented; usability unknown,,low-level; languages,"TScript is a language created by User:Iconmaster in 2013. It is a simple descriptive language used to shorten the amount of code in the programming of turtles in the Minecraft mod ComputerCraft. TScript code consists of single-character expressions, each being expressed as a single ComputerCraft function call. It is a very basic language, and relies on the outside interface to compose the correct sequence for any loops. It technically can compile into CC Lua code."
Mornington Crescent,https://esolangs.org/wiki/Mornington Crescent,2013,,unknown computational class,non-interactive io,,languages; thematic,"Mornington Crescent, named after Mornington Crescent tube station in London and invented by Timwi in 2013 as somewhat of a tribute to the game of Mornington Crescent, is an esoteric programming language in which the data pointer moves through the London Underground by traveling by tube from station to station, starting and ending at Mornington Crescent."
Shove,https://esolangs.org/wiki/Shove,2008,,,implemented; output only,stack-based; cell-based,languages; two-dimensional languages; low-level,"Shove is an esoteric programming language created by User:ais523 in 2008, but ais523 forgot to tell anyone about it until 2013. It is based on the idea of shoving strings into a self-modifying, two-dimensional program, pushing other content out of the way."
0815,https://esolangs.org/wiki/0815,2013,,turing complete,implemented,queue-based,languages; low-level,0815 is an esoteric programming language designed and implemented between December 2012 and January 2013 by Paulo Jorente.
Braintrust,https://esolangs.org/wiki/Braintrust,,,,implemented,,brainfuck derivatives; languages,"Braintrust is an esolang by User:Sgeo similar to Brainfuck. It is intended to be compiled, and the compiler, written in Braintrust, itself has no knowledge of the target platform directly. Rather, all such information is part of the primitive command !. The information itself is stored in the resulting target code."
Zucchini,https://esolangs.org/wiki/Zucchini,2013,,,implemented,,languages; low-level,"Zucchini is another minimalist language. In it, everything is a node that sends signals to other nodes."
Triforce,https://esolangs.org/wiki/Triforce,2013,,turing complete,implemented,cell-based,languages; brainfuck_derivatives; low-level,"Triforce is a tape based esoteric programming language designed by Anthony Ma in 2013. Triforce is identical to brainfuck while purely using triangles, and with the addition of an operator that resets a memory cell to 0. Triforce files are stored with the extension .▲ The language and name is inspired by the Triforce of the Legend of Zelda series."
RAGE!!!,https://esolangs.org/wiki/RAGE!!!,2013,,,implemented,,languages,"RAGE!!! is an esoteric programming language created in 2013 by Sean Doyle that is based on Python and is designed to be somewhat functional and useless at the same time.
It involves the use of statements of rage as part of the syntax and uses !!! in the same way ; is used to end the line in Java or C++."
REBEL,https://esolangs.org/wiki/REBEL,2013,,turing complete,implemented,,languages,REBEL stands for Regular Expression Based Esoteric Language. REBEL is a declarative programming language that works by iteratively replacing substrings.
Agony,https://esolangs.org/wiki/Agony,2013,,,programming games; implemented,cell-based,languages; brainfuck_derivatives,Agony is an esoteric programming language devised by Roy van Rijn in March 2013.
Amelia,https://esolangs.org/wiki/Amelia,,,,implemented,,languages,Amelia:
Everett,https://esolangs.org/wiki/Everett,,,,implemented,,languages; high-level; joke languages,
Noodle Soup,https://esolangs.org/wiki/Noodle Soup,2013,,unknown computational class,implemented,cell-based,languages; brainfuck derivatives,"Noodle Soup is a Spoon derivative, which by the transitive property also makes it a brainfuck derivative."
Magic,https://esolangs.org/wiki/Magic,2013,,,implemented,,languages; thematic,"Magic, created by User:GOMADWarrior in 2013, and still in development, is a language where you summon spirits, objects with a list of instructions, to do your bidding. You summon spirits with spells, the recipe of the spirits. It is also meant to be kind of concurrent, as in executing one instruction per time before jumping to the next spirit."
Nothing,https://esolangs.org/wiki/Nothing,,,,implemented; unusable for programming; total,,languages; joke languages,The Nothing is an esoteric programming language designed for bug-free programming.
Nandarin,https://esolangs.org/wiki/Nandarin,,,finite state automata,output only,,languages,"Language by User:Whtspc, based on nand-logic like his earlier language ferNANDo"
Tonoco,https://esolangs.org/wiki/Tonoco,2013,object-oriented paradigm,unknown computational class,implemented,stack-based,languages,Tonoco is an Esoteric programming language by user:David.werecat which forms a network of boxes and has only three instructions.
Derplang,https://esolangs.org/wiki/Derplang,2013,,turing complete,implemented,,languages,"derplang is an esoteric language, created by JesseH in 2013. It is pronounced derp-ling or derpling. The goal was to create a language that is somewhat confusing and hard to remember, and to give Hobbyist Programmers a fresh new way to travel their text editor. This is because a derplang script was intentionally to be all on one line, so that you have to scroll left and right, instead of up and down. However if you absolutely have to, you have divide them among multiple lines."
Lhooq,https://esolangs.org/wiki/Lhooq,,,,,,languages,"lhooq is a language created by user:Xifeng for describing systems like the Digicomp II toy computers. Programs take the form of relational tables, the representation of which is implementation-dependent. For the purpose of writing and discussing lhooq code, csv format is most convenient. The name of the language comes from the header that begins all csv-format lhooq programs, establishing the four fields 'l' (Line), 'h' (Head), oo (Other Option), and 'q' (Q value, from flip-flop terminology)."
Derpcode,https://esolangs.org/wiki/Derpcode,2013,,,implemented,cell-based,languages; brainfuck_derivatives,"derpcode is a tape-based esoteric programming language based on internet slang. derpcode consists of two objects: a one-ended tape of zero-initialized binary values, and a pointer."
WARP,https://esolangs.org/wiki/WARP,2013,object-oriented paradigm,,implemented,,languages,"WARP is an object and stack based language, created by User:Aldous zodiac (talk) in May 2013. All numerics are signed, integral and expressed in hexatridecimal (base 36) notation, unless the radix system is changed within an executing program. WARP is a (weak) recursive acronym, WARP And Run Program - so called because it is expected that interpreters randomize 
the source program after each command is executed."
Binaryfuck,https://esolangs.org/wiki/Binaryfuck,2013,,,implemented,,languages; brainfuck equivalents,"Binaryfuck is a spinoff of the most famous esoteric programming language Brainfuck, created by User:TastyToast."
DL,https://esolangs.org/wiki/DL,2013,,,implemented,,languages; high-level,"DL is an esoteric programming language, created and implemented by User:Disa. DL source files can be compiled to Windows Executable files."
Chicken,https://esolangs.org/wiki/Chicken,2013,,turing complete,implemented; non-interactive io,stack-based,languages,"Chicken is an esoteric programming language by Torbjörn Söderstedt, in which ""chicken"" is the only valid symbol."
KEMURI,https://esolangs.org/wiki/KEMURI,2006,,,implemented; output only; total,stack-based,languages,KEMURI is a stack-based language with just six commands:
Myth,https://esolangs.org/wiki/Myth,2013,,turing complete; turing tarpits,implemented,,languages; low-level,"Myth is a minimalist Turing-complete non-deterministic esoteric programming language based on the string-rewriting paradigm. Its reference implementation was created by User:Plugnburn for 140byt.es contest in JavaScript (ECMAScript 5 standard) on July 30, 2013 and is only 137 bytes long."
Ririsu,https://esolangs.org/wiki/Ririsu,2013,,turing complete,implemented,stack-based,languages,"Ririsu is a small, untyped and stack-based concatenative language
with some more interesting features like dynamic scoping and occasional
purity. The language is under active development, and some features
have not been implemented yet, like concurrency."
Impera,https://esolangs.org/wiki/Impera,2013,,turing complete; turing tarpits,implemented,cell-based,languages; low-level,"Impera is an esoteric programming language that takes the imperative programming to its absolute minimum. It was created by User:Plugnburn on August 5, 2013 for 140byt.es contest with the goal to create an imperative language interpreter as small as possible in JS while keeping it Turing-complete."
Commercial,https://esolangs.org/wiki/Commercial,2013,,,implemented,,languages; thematic; high-level,"This language is based off, as the title implies, TV commercials. This language was created by User:Poolala. It's probably Turing complete, but there's no formal proof."
Brainfact,https://esolangs.org/wiki/Brainfact,2013,,,,cell-based,languages; brainfuck derivatives,"This language is similar to Brainfuck, but with a twist. This language was created by User:Poolala."
STXTRM,https://esolangs.org/wiki/STXTRM,2013,,turing complete; turing tarpits,implemented,stack-based,languages; low-level,"STXTRM (pronounced as ""StackStream"") is a minimalist self-modifying, stack-based esoteric programming language. It was designed as a direct successor to MSM and created by User:Plugnburn on August 9, 2013 along with its reference implementation."
RISBF,https://esolangs.org/wiki/RISBF,2013,,turing complete,implemented,cell-based,languages; brainfuck equivalents; low-level,"RISBF is a brainfuck equivalent with only 4 characters. RISBF stands for Reduced Instruction Set Brain Fuck and was created by Michael Gianfreda,  Aug. 14, 2013. A RISBF variant is tinyBF."
Somnypna,https://esolangs.org/wiki/Somnypna,2013,object-oriented paradigm,,unimplemented,,languages; low-level,"Somnypna is an esoteric programming language created on 2013-8-14 by Peter Berg. He wrote it while he was extremely sleep-deprived and did not remember the act of writing it when he woke up later that day. Somnypna is his first esolang. The name is a combination of the Greek and Latin roots which both mean ""sleep."""
Paintfuck+,https://esolangs.org/wiki/Paintfuck+,2013,,,,cell-based,brainfuck derivatives; languages,"This language is by User:Poolala, and is an extension of the Paintfuck language.
Each cell is represented as an RGB code, and the colors wrap. (FF to 00, 00 to FF)
The cell array is the same as Paintfuck's.
The operations are:"
Bitfuck,https://esolangs.org/wiki/Bitfuck,2013,,turing complete; turing tarpits,implemented,cell-based,languages; low-level; brainfuck derivatives,"Bitfuck is a boolfuck equivalent with only 4 characters. It is similar to RISBF, but operating only on bits."
Triskaidekalogophilia,https://esolangs.org/wiki/Triskaidekalogophilia,2013,,,implemented,,languages,"Triskaidekalogophilia is an esolang with only 9 commands that only allow string manipulation. The commands can add, delete or change characters within a string. The name derives from the words describing the love of the number 13 and the love of words."
StackBeat,https://esolangs.org/wiki/StackBeat,2013,,,implemented,stack-based,languages; low-level,"StackBeat is a specialized stack-based esoteric programming language. It was designed with the goal to combine a compact stack machine implementation with the wonders of raw sound synthesis using the Bytebeat technique. The first working StackBeat implementation was created by User:Plugnburn on August 21, 2013, then it was updated on August 26, 2013 to its current state."
Stackstack,https://esolangs.org/wiki/Stackstack,,,turing complete,implemented,stack-based,languages,"Stackstack is a stack-based programming language made in 2013 by User:T.J.S.1 at 15 years old. It can be described as a Forth-like language. The language began with one main interpreter written in Javascript, but more is being worked on."
Edge,https://esolangs.org/wiki/Edge,2013,,turing complete; turing tarpits,no io; implemented,cell-based,languages; brainfuck derivatives,"Edge is a brainfuck derivative without IO and only 4 symbols, employing two switches in order to compensate for the curtailment of the four cell pointer and cell value modifiers. It was created by Michael Gianfreda,  Aug. 25, 2013."
3switchBF,https://esolangs.org/wiki/3switchBF,2013,,turing complete; turing tarpits,implemented,,languages; brainfuck derivatives,"3switchBF is yet another brainfuck equivalent, in the form of a Turing tarpit, conceived then neglected by User:Bataais in August of 2013. Because of this, information beyond the general idea may not be accurate."
A:;,https://esolangs.org/wiki/A:;,2013,,turing complete,implemented,,languages,A:; is an esoteric programming language created by User:OriginalOldMan. Each A:; program has a series of statements separated by semicolons. Each A:; statement has a series of arguments separated by colons. All A:; programs must be written on one line.
Golunar,https://esolangs.org/wiki/Golunar,2013,,turing tarpits; turing complete,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; low-level; joke languages,"Golunar is a derivative of Unary, which is itself a derivative of Brainfuck. It is thus even further removed from usability.
Golunar was derived by Peter Berg in 2013. The name is a mix of ""Unary"" and ""logarithm."""
Omam,https://esolangs.org/wiki/Omam,2013,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; joke languages; thematic,"Omam is a Brainfuck-equivalent esoteric programming language where all the commands are replaced by lyrics from songs by the indie folk band ""Of Monsters And Men."" It was devised by Peter Berg in 2013, and he admits that it is pretty darn stupid. He got the idea from listening to ""Little Talks"" on the Infinite Jukebox."
Verbose,https://esolangs.org/wiki/Verbose,2013,,turing complete,implemented,stack-based,languages; joke languages,"Verbose is made to be as verbose as possible, and was created by User:Poolala."
Snowflake,https://esolangs.org/wiki/Snowflake,2013,,unknown computational class,unimplemented,concurrent programming; stack-based,languages,"Snowflake is a reversible, self-modifying, data-parallel esoteric programming language created by User:ais523 in 2013. Its most notable unusual feature is that unlike most self-modifying languages, both the program and interpreter modify themselves during execution, and the changes to both the program and interpreter overwrite the original files, permanently changing what will happen the next time that the program runs. As such, a program and interpreter grow together over the course of many executions, becoming more and more specialised to each other; the ultimate goal of a Snowflake programmer is to produce a program that will eventually (given enough time and luck) optimise itself down to a single command, that has the same effect that the original program did."
Daft,https://esolangs.org/wiki/Daft,2013,functional_paradigm; object-oriented_paradigm; declarative_paradigm,,unimplemented,concurrent_programming,languages; meta-languages; high-level,"Daft - multi-paradigm, logical, meta-programming language."
Terse,https://esolangs.org/wiki/Terse,2013,,,implemented,,languages,"Terse is a very small interpreted language whose syntax resembles that of assembly. There are no datatypes, but types are inferred from usage (i.e., during addition integer or float is inferred)"
Fishing,https://esolangs.org/wiki/Fishing,2013,,,implemented,cell-based,languages; two-dimensional languages; thematic,"Fishing is a two dimensional esoteric programming language created by User:OriginalOldMan in 2013. Programs are controlled by a fisherman who walks along a dock, casts, and catches different fish. Commands can be given through the dock that the fisherman walks on and through the fish that the fisherman catches. Fishing's memory is in the form of a tape like BF's memory tape."
Drive-In Window,https://esolangs.org/wiki/Drive-In Window,2013,,finite state automata,implemented,cell-based,languages; thematic; high-level,Drive-In Window is an esoteric programming language created by User:JWinslow23 in 2013. The layout is similar to what someone would order at a restaurant.
Pancake Stack,https://esolangs.org/wiki/Pancake Stack,2013,,turing complete,implemented,stack-based,languages; thematic,This page is a work in progress
Tic Tac Toe,https://esolangs.org/wiki/Tic Tac Toe,2013,,turing complete,implemented,cell-based,languages; brainfuck derivatives; thematic,Tic Tac Toe is an esoteric programming language created by User:JWinslow23 in 2013. This takes the form of Tic-Tac-Toe games.
Switchy,https://esolangs.org/wiki/Switchy,2013,,finite state automata,implemented,stack-based,languages,"Switchy is an esoteric programming language created by User:Poolala, which changes an instruction's operation every program cycle."
Wigner's Fuckbuddy Is A Superposition of Top And Bottom,https://esolangs.org/wiki/Wigner's Fuckbuddy Is A Superposition of Top And Bottom,2013,,turing complete,unimplemented,,languages; brainfuck derivatives; quantum computing,"Wigner's Fuckbuddy Is A (|Top⟩ + |Bottom⟩)/√2 is a Brainfuck derivative created by User:Quintopia in 2013, who, until that time, had managed to make it for seven years in the esolang community without creating a BF derivative. Fortunately, his first such language is unimplementable via current technology and, hopefully, by any technology ever. It is likely possible to simulate a proper implementation, however, with no guarantees as to the running time of any program. It assumes the reality of a quantum theory to which applies Everett's Theory of the Universal Wavefunction (the Many-Worlds Interpretation)."
B-tapemark,https://esolangs.org/wiki/B-tapemark,2013,,,unimplemented,,languages; two-dimensional languages,B-tapemark is an esolang invented by User:Zzo38.
Dogescript,https://esolangs.org/wiki/Dogescript,2013,,,implemented,,languages; thematic,Dogescript is a language created in 2013 by Zach Bruggeman. It is nothing more than a syntax-replacement for Javascript to make it read like the internal monologues of memetic Shiba Inus.
TAPASM,https://esolangs.org/wiki/TAPASM,2013,,,,cell-based,languages; low-level,"TAPASM is an esoteric language by User:Christian Irwan using sticky tape. It resembles assembly code. (Note, it's incomplete, so I want your preferences)"
Symbols,https://esolangs.org/wiki/Symbols,2013,,,,,languages,():;#?! is a small esoteric language created by User:Lucasieks in November of 2013 with only 9 instructions.
Magicard!,https://esolangs.org/wiki/Magicard!,2013,,unknown computational class,unimplemented,deque-based,languages; thematic,"Magicard! is a theme language created by User:Quintopia in 2013 in which programs consist of instructions for performing card tricks. It is rich with means of moving data from place to place, but there is no way of creating numeric literals singly. To get large literals, you must swamp yourself with smaller ones, then wade through the swamp to find the one you wanted. In addition, the only means of storing the result of an arithmetic operation is again, to wade through a swamp of literals looking for an answer that matches the one you wanted."
Pinocchio,https://esolangs.org/wiki/Pinocchio,,,,implemented,,languages; thematic,"Pinocchio is a language by User:that_dude. The language's variable types are noses. In the Pinocchio programming language, you must create different Pinocchio's (similar to functions in real languages, but with differences)."
Rasen,https://esolangs.org/wiki/Rasen,2014,,,implemented; total,,,"Rasen is a register based, esoteric programming language created by Wolgr in early 2014 and inspired by both Assembly code and Brainfuck."
Not The Main Worb,https://esolangs.org/wiki/Not The Main Worb,2014,,,implemented; no io,cell-based; particle automata,languages; two-dimensional languages,"Not The Main Worb is a 2014 cellular automaton derived by User:Quintopia from Chris Pressey's Noit o' mnain worb (nomw) and inspired by User:ais523. It simultaneously enriches and simplifies the original automaton, making wire-crossings and amplifiers possible."
StackFlow,https://esolangs.org/wiki/StackFlow,2014,,turing tarpits; turing complete,output only,stack-based,languages,"StackFlow is an esoteric programming language created by User:ais523 in 2014, which is entirely based on simple stack operations.  The language is intended for the purpose of implementing in other languages in order to prove them Turing complete.  In particular, the motivating example was the card game Magic: the Gathering; although Magic had already been proven Turing-complete, ais523 wanted to find a construction in which none of the players had any ability to interfere with the execution of the program, and in pursuit of that goal, it helped to have a language that was simpler than a Turing machine and worked almost entirely in terms of stacks of small enums, which are the easiest data structure to simulate in Magic.  StackFlow is entirely usable on its own, though, and may be interesting in other contexts."
Cellbrain,https://esolangs.org/wiki/Cellbrain,2007,,turing complete; turing tarpits,implemented,queue-based; concurrent programming,languages; two-dimensional languages; low-level,"Cellbrain, devised by User:Quintopia in 2007, is a grid-based concurrent event-driven language inspired by Biota and Unlambda."
$tonePits,https://esolangs.org/wiki/$tonePits,2014,,unknown computational class,unimplemented,,languages,$tonePits
.mOdMoDwOrM,https://esolangs.org/wiki/.mOdMoDwOrM,2014,,turing complete,unimplemented,,thematic; languages,"Had I never heard of FRACTRAN designed by Conway, I would not have written this."
.m@dpr'a'prozessor,https://esolangs.org/wiki/.m@dpr'a'prozessor,2014,,,unimplemented,,languages,By the way in case you have not read the page about .mOdMoDwOrM I recommend you to do so for understanding better what is now coming.
~-Hash,https://esolangs.org/wiki/~-Hash,,,,,,languages; brainfuck derivatives,"~# (said as tilde-hash) is a language modelled on Brainfuck, with some major modifications - most notably the addition of a memory cell within the pointer itself, which now has read/write capabilities. To keep the number of instructions down, I/O is mapped to r/w on cell 0. Programs must also be explicitly ended, else they loop infinitely."
Manufactoria,https://esolangs.org/wiki/Manufactoria,2014,,turing complete,implemented,queue-based,languages; two-dimensional languages; low-level,"Manufactoria is based on the game, and is basically the same thing. It was made by Quincunx with permission from pleasingfungus."
Circuit Diagram,https://esolangs.org/wiki/Circuit Diagram,2014,,unknown computational class,unimplemented,,languages; low-level; two-dimensional languages,"Circuit Diagram is a programming language created by  Quincunx. It is simply an ASCII ""art"" way of representing and executing a circuit diagram (specifically the type for computers)."
Quiney,https://esolangs.org/wiki/Quiney,2014,,turing complete; turing tarpits,implemented,cell-based,languages; low-level,"Quiney is a tape programming language, like BF (Both in commands and style), whose variable system and commands are stored on the same, one-dimensional, infinitely long (in one direction) array, which can store the numbers 0 through 9. There are two independent cursors on the tape - one for execution, and one for reading/editing data. Its name refers to the ease with which quines may be written in the language. These numbers, for human readability, are actually commands that are commonly written as their representative characters. The commands in Quiney are as follows:"
SPAM/1,https://esolangs.org/wiki/SPAM/1,2014,,,usability unknown,stack-based,low-level,"SPAM/1 is a computer language highly derivative of Ham created by User:Johnnie. There are three versions of SPAM (none currently are implemented): SPAM/1, SPAM/2 and SPAM/3. SPAM/1 and SPAM/2 are the most portable out of the three versions by making use of a very simple User Interface to transmit code to a SPAM server (colloquially known as a SPAM Generator)."
ResPlicate,https://esolangs.org/wiki/ResPlicate,2014,,turing complete; turing tarpits,implemented,queue-based,,ResPlicate is a game/computational model/language/THING imagined by User:Quintopia in 2014. It is inspired by languages like Muriel and Self-BCT and the code-copying premise used by languages like ETAS and MiniMAX.
McCulloch's second machine,https://esolangs.org/wiki/McCulloch's second machine,,,,implemented,,,McCulloch's second machine is a partial function on digit strings defined in Raymond Smullyan's book The Lady or the Tiger? and Other Logical Puzzles (1982).
McCulloch's third machine,https://esolangs.org/wiki/McCulloch's third machine,,,,implemented,,,McCulloch's third machine is a partial function on digit strings defined in Raymond Smullyan's book The Lady or the Tiger? and Other Logical Puzzles (1982).
Sultan's daughter,https://esolangs.org/wiki/Sultan's daughter,1997,,,implemented,,languages,The sultan's daughter is a partial function on digit strings defined in Raymond Smullyan's book The Riddle of Scheherazade (1997).
Fünke,https://esolangs.org/wiki/Fünke,2014,functional paradigm,,unimplemented,,languages,"Fünke, named after Tobias Fünke of Arrested Development, is an esoteric programming language made to be almost entirely function calls.  There are very few basic functions:"
Bantas,https://esolangs.org/wiki/Bantas,,,,,stack-based,languages,Bantas is an esoteric programming language developed by Jon Velasco and inspired by Blank. The word Bantas is a Filipino/Tagalog term for punctuation mark.
Fission,https://esolangs.org/wiki/Fission,2014,,,implemented,,languages; two-dimensional languages,"Fission, the programming language that defies the laws of conservation of mass and energy."
Ashtol,https://esolangs.org/wiki/Ashtol,,,,,,languages,"Ashtol is a programming language created by Gábor on March 11th, 2014. It uses ""encrypted"" directives to operate on numbers, and in the end convert those numbers into characters as output. A prototype Ashtol interpreter written in Java can be found here (run in console). Ashtol was somewhat inspired by Malbolge."
JSFuck,https://esolangs.org/wiki/JSFuck,2012,,turing complete,,,languages,"JSFuck is an esoteric subset of the JavaScript language that uses only six distinct characters in the source code. The characters are +, !, (, ), [, ]."
\BV,https://esolangs.org/wiki/\BV,2013,,,,,languages; icfp contest,\BV is a small domain-specific language with limited power defined in the task of the ICFP programming contest 2013.
Lambda: the Gathering,https://esolangs.org/wiki/Lambda: the Gathering,2011,,,programming games,,icfp contest,Lambda: the Gathering is a two-player competitive game and programming language defined in the task description of the ICFP programming contest 2011.
GML,https://esolangs.org/wiki/GML,2000,functional paradigm,turing complete,output only,stack-based,icfp contest; languages,"GML is the programming language defined for ICFP contest 2000.  The goal of the contest is to implement a ray tracer.  The GML language is thus used to describe a scene as input to the raytracer.  The description of the language is available in HTML, PDF and postscript format."
Indirect,https://esolangs.org/wiki/Indirect,2014,,,implemented,cell-based,languages; brainfuck_derivatives; low-level,"Indirect is a brainfuck derivative inspired by other brainfuck derivatives designed by User:Quojil in 2014. It extends a lot of functionality also. It's primary inspiration is Minifuck, as it is a very small version of brainfuck, but does not have much functionality. Like Minifuck, Indirect has only three instructions, but can do a lot more."
A programming language is a system of notation for writing computer programs.,https://esolangs.org/wiki/A programming language is a system of notation for writing computer programs.,2014,,,unusable for programming; implemented; output only; total,,languages,"A programming language is a system of notation for writing computer programs., formerly known as A programming language is any set of rules that converts strings, or graphical program elements in the case of visual programming languages, to various kinds of machine code output.,  formerly known as A programming language is a formal language comprising a set of strings that produce various kinds of machine code output., formerly known as A programming language is a formal language comprising a set of strings that produce various kinds of output., formerly known as A programming language is a formal language comprising a set of instructions that produce various kinds of output., formerly known as A programming language is a formal language, which comprises a set of instructions that produce various kinds of output., formerly known as A programming language is a formal language, which comprises a set of instructions used to produce various kinds of output., formerly known as A programming language is a formal language that specifies a set of instructions that can be used to produce various kinds of output., formerly known as A programming language is a formal computer language designed to communicate instructions to a machine, particularly a computer., formerly known as A programming language is a formal constructed language designed to communicate instructions to a machine, particularly a computer., formerly known as A programming language is an artificial language designed to communicate instructions to a machine, particularly a computer., was created by User:Rottytooth in early 2014."
Nock,https://esolangs.org/wiki/Nock,,,turing tarpits,implemented,,languages,"Nock is a low level typeless esoteric functional programming language.  It is created to host a slightly higher level typeless functional esoteric language called Hoon, which compiles to Nock."
Boxy,https://esolangs.org/wiki/Boxy,2014,functional_paradigm,turing_complete,unimplemented,,languages,"Boxy is a Smartboxes derivative by User:Zerk, mainly differing by slightly simpler syntax.
For lack of solid grasp on semantics or any sort of implementation, this page is going to be a speculative idiom dumping ground until the former enables the latter. The more it is refined, the more it becomes a bizarre mix of Ax, Forth, LiveScript, Glass, and possibly Smalltalk, so this may take a while."
Ax,https://esolangs.org/wiki/Ax,,,,,,languages,"Ax is a Nock derivative by mnemnion aimed for nondeterminism, a more æsthetic operator order, and sane big O."
Keya,https://esolangs.org/wiki/Keya,2014,,turing complete,implemented,cell-based,languages; brainfuck_derivatives,"Keya is a language based on the idea of Brainfuck invented by Krishna Sudhakar. it is like Brainfuck, but with a 2-D memory grid instead of an array."
NRSRSSOMN,https://esolangs.org/wiki/NRSRSSOMN,2014,,,unimplemented,,,NRSRSSOMN (Nameless Random String-Rewriting Systems Scribbled On Math Notebook) are a collection of string-rewriting systems created by User:EzoLang. They are presented here in a loose time/feature order.
Aeon,https://esolangs.org/wiki/Aeon,2014,,,,,brainfuck derivatives; languages,Aeon is a Turing-complete more-flexible esoteric language designed by User:Cptx032 in April of 2014. It is based on FALSE and brainfuck.
ArnoldC,https://esolangs.org/wiki/ArnoldC,2013,,,,,languages; thematic,"ArnoldC is an esoteric programming language created with Scala by Lauri Hartikka. The source is available here, along with tutorials and example programs."
Powerlist,https://esolangs.org/wiki/Powerlist,2014,object-oriented_paradigm; functional_paradigm,turing_complete,unimplemented,deque-based,high-level; languages,"Powerlist is an esoteric programming language created by User:CodingBat in April 2014. Designed to compute high level arithmetic operations (such as powers or logs) while keeping the syntax minimalistic.
It uses a single data structure type, but provides an extensive number of overridable operators."
Forobj,https://esolangs.org/wiki/Forobj,,object-oriented_paradigm,turing_complete,,stack-based,languages,Forobj is an object oriented programming language created by User:Fergusq. It is designed to be easily extendable and almost impossible to parse without interpreting.
@text,https://esolangs.org/wiki/@text,,,,total; implemented; unusable for programming; output only,,languages; joke languages,"@text is an esoteric programming language created by User:Icepy, and is related to !!!Batch, but has its own way of interpreting. You don't tell it what to do to get to a certain output, you tell it what to output, and it will do just that."
PHL 1.0,https://esolangs.org/wiki/PHL 1.0,2012,,unknown computational class,implemented,,languages,Proceed High Language 1.0 (also known as PROCEED) is a mildly esoteric programming language created by User:Fergusq in 2012.
0(nop^),https://esolangs.org/wiki/0(nop^),,,,implemented,,languages,"0(nop^) is an esoteric programming language with numeric function names that are evaluated with the "" ^ "" command.  This is the only form of flow control."
Goldfish,https://esolangs.org/wiki/Goldfish,2014,,turing complete,implemented,,languages,Goldfish is an esoteric programming language by User:Fergusq inspired by Deadfish i. Only way to store data is creating functions and static variables inside them.
5command,https://esolangs.org/wiki/5command,2014,,,total; unusable for programming; implemented,cell-based,languages,"5command is an esoteric programming language created by User:Icepy in 2014. 5command has a very small command set of only 5 commands. 5command is a tape based language which has an infinite amount of slots. It has a debug mode that can be set to true or false in a interpreter. debug mode is automatically false. Also, anything that is not valid syntax, is a comment. 5command was built to print out very large numbers, in a small amount of time and space."
1+,https://esolangs.org/wiki/1+,2014,,turing complete,implemented,stack-based,languages; low-level,"1+, initially conceived by Jeremy Tan (User:Parcly Taxel) in 2012 (but with the final specification and interpreter written in 2014), is an esoteric programming language where 1 is the only literal. It is mostly inspired by FALSE, Piet and Wang's B-machine."
Twocode,https://esolangs.org/wiki/Twocode,2014,,turing complete,,,languages; two-dimensional languages; low-level,"Twocode is a one-dimensional esoteric language with two-dimensional control structures. It was created by User:Fergusq in 2014. Language belongs to the category of visual programming languages and was designed to offer an alternative, visual GOTO statement."
BANCStar,https://esolangs.org/wiki/BANCStar,,,,,,languages,"BANCStar is a language that was used in production in finance in the 1990s, even though it looks like an esoteric language.   BANCStar was not originally intended to be written by humans, but only by a compiler, the so-called screen generator.  The syntax of BANCStar is very bare because of that.  However, programmers found the power of the screen generator lacking, so they started to modify BANCStar programs by hand."
Lii,https://esolangs.org/wiki/Lii,2014,object-oriented paradigm; declarative paradigm,turing complete,output only,,languages,"Lii is a declarative object-oriented mildly esoteric language created by User:Fergusq in 2014. It is named after the fictional 31st century tea company Lii Tea (from a Sci-Fi book, I forgot the name). The language is a mix of functional and object-oriented programming."
Pluso,https://esolangs.org/wiki/Pluso,2020,,,unusable for programming; implemented; output only; total,,languages; joke languages,"Pluso is an esoteric programming language created by User:Icepy in 2014. This programming language is called pluso because it has two commands: plus and output. The o standing for output, of course. The only data structure in pluso is an accumulator."
Smilefuck,https://esolangs.org/wiki/Smilefuck,2014,,unknown computational class,,,languages,"Smilefuck is an esoteric programming language similar to brainfuck. It was created on June 6th, 2014 by User:Sacchan."
SYCPOL,https://esolangs.org/wiki/SYCPOL,2014,,,implemented,,languages,"SYCPOL (System card programming language, pronounced /'sɪkpɔl/) is a mildly esoteric programming language created by User:Fergusq in 2014 inspired by COBOL (not Card Orientations Based Object Language). The program is a set of system cards which are interpreted by a ""system card machine""."
Pyth,https://esolangs.org/wiki/Pyth,2014,,,implemented,stack-based,golfing language; languages,"Pyth is a procedural programming language which is designed to be compiled into Python. It is created by isaacg in 2014. Its primary purpose is conciseness, without sacrificing clarity. It is primarily used for code-golfing."
Ligature Machine,https://esolangs.org/wiki/Ligature Machine,,,,,,languages,Ligature Machine invented by User:Zzo38 is a system consisting of:
X++,https://esolangs.org/wiki/X++,2008,,,implemented,,languages,X++ has just a bool and a stream to store values. X++ was invented in April 2008 by User:Feuermonster.
Befunk,https://esolangs.org/wiki/Befunk,2014,,turing complete,implemented,,languages; two-dimensional languages,Befunk is a Fungeoid created by User:TieSoul in 2014.
Replacefuck,https://esolangs.org/wiki/Replacefuck,2014,,turing complete,implemented,cell-based,brainfuck derivatives; languages; low-level,Replacefuck is a Brainfuck derivative based around pre-processing made by User:TieSoul in 2014.
Topsy Turvy,https://esolangs.org/wiki/Topsy Turvy,,,,unimplemented,cell-based,languages; brainfuck derivatives; low-level,"Topsy Turvy operates on an array of cells, each initially set to an undefined value. A data pointer initially points to the cell in the centre of the array."
VIOLET,https://esolangs.org/wiki/VIOLET,2014,,,implemented,,languages; high-level; thematic,"VIOLET (Verbose Interactive Operating Language for Educational Terminals) is an interpreted programming language alleged to have been the custom onboard language developed for a 1980s educational computer, the Buttech CAI-1."
CJam,https://esolangs.org/wiki/CJam,2014,,turing complete,implemented,stack-based,golfing language; languages,CJam is a stack-based programming language inspired by GolfScript. It was created by aditsu in 2014. The official interpreter is written in Java.
Cork,https://esolangs.org/wiki/Cork,2014,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck_derivatives; low-level,"Cork is a programming language written by User:Imaginer1 drawing inspiration from Brainfuck and the Wang B-machine.
Example programs include the adder ,>,<->>+<<!4>->+<!12>. and the multiplier ,>,<->->+>+<<!6>>-<<+>>!16<<<!4>>."
Fortob,https://esolangs.org/wiki/Fortob,2014,,unknown computational class,,stack-based,languages,"Fortob is the second language of the For series, first being Forobj. It shares many aspects of its predecessor. The main difference is its lexical structure, as it is based on tokens and not characters. The name is a play of ""forobj"" and ""token""."
Simplefunge,https://esolangs.org/wiki/Simplefunge,2014,,turing complete,implemented,stack-based,two-dimensional_languages; languages,Simplefunge is an esoteric 2d language created by User:CrazyM4n in 2014.
Bitoven,https://esolangs.org/wiki/Bitoven,2014,,,,cell-based,languages; low-level,"Bitoven (derived from Beethoven) is a programming language by User:Imaginer1 in early September 2014, with the goal of making a musical programming language focusing more on free expression in its musical format and ability to play readily rather than exact and definitive notes (that is, a single program can have many different musical representations.) He currently welcomes anyone's recommendations about the language- If you have questions or recommendations please put them in the talk page! The current EOF convention should probably be 0."
Clem,https://esolangs.org/wiki/Clem,,,turing complete,,,,"Clem (pronounced klem) is a stack based programming language with first-class functions created by
User:Orby in 2014. The best  way to learn Clem is to run the `clem` interpreter in
interactive mode, allowing you to play with the available commands. A reference
interpreter written in C is available here (from the Wayback Machine; retrieved on 21 March 2016).
To run the example programs which come with the reference interpreter, type
`clem example.clm` where example is the name of the program. This brief tutorial
should be enough to get you started."
Rotary,https://esolangs.org/wiki/Rotary,2014,,unknown computational class,implemented,cell-based; stack-based,languages; brainfuck_derivatives; low-level; two-dimensional languages,"Rotary is an esoteric programming language created by User:InputUsername in September 2014. Rotary was made to be confusing, not usable. It was loosely based on BrainFuck, sharing some of its features like a data tape
and single-character instructions. However, there are many more interesting differences than similarities."
Jasp,https://esolangs.org/wiki/Jasp,,,,implemented,,languages,"Everyone[citation needed] knows that object-oriented programming is superior to the list-oriented programming of the Lisp family, and that JSON is superior to S-Expressions. Introducing Jasp, a language that lets you program in a Scheme-like dialect using nothing but JSON!"
PZAB,https://esolangs.org/wiki/PZAB,2013,,bounded-storage_machine,implemented,cell-based,languages; low-level,"PZAB is a programming language created by Zac Herd in 2013. The idea was to create a language that forced the programmer to manipulate memory and registers on a binary level. PZAB, like all good esoteric languages, was designed to be essentially unreadable."
Musical notes,https://esolangs.org/wiki/Musical notes,2014,,finite state automata,unimplemented,,languages; brainfuck derivatives,"Musical notes is an esoteric programming language that uses notes as symbols. It was inspired by Velato, another music-based esolang, and brainfuck. Musical notes was invented by Tom Price-Nicholson in 2014. It is possible to create programs in Musical notes; however, more complex programs may take up a large amount of space."
Strato,https://esolangs.org/wiki/Strato,2014,,,,,languages,"Strato is a language without reserved words. The meanings reserved words normally have, are replaced by sequences of one or more punctuation marks or the relative position of language elements. For example, an expression that evaluates to a boolean, followed by two statements or code blocks, is interpreted as an if-then-else clause."
FakeASM,https://esolangs.org/wiki/FakeASM,2012; 2014,,,,,languages,"FakeASM (Fake Assembly) is an esoteric programming language in the past by User:CosmoConsole (in fact, so past that the original interpreter source is now thought to be lost). Made to resemble assembly languages of various processors, like the 65c816, code written with FakeASM may look like an assembly language at first. The original command-line interpreter was created in 2012 with VB.net."
StackStacks,https://esolangs.org/wiki/StackStacks,2014,,turing complete,implemented,stack-based,languages,"StackStacks is an esoteric programming language
designed and implemented by User:Oj742 in 2014, taking inspiration from Forth. It doesn't store any data (excluding two flags);
instead, all stacks contain stacks within themselves, so that a theoretically unlimited level of recursion can be reached."
Element,https://esolangs.org/wiki/Element,2012,,,implemented,stack-based,languages; golfing language,"Element is a simple language by PhiNotPi. It is supposedly designed as ""very compact and human-readable"". Each instruction is one character long and performs a single function."
Ante,https://esolangs.org/wiki/Ante,2013,,unknown computational class,implemented; usability unknown,,languages; thematic,"Ante is an esoteric programming language where all you've got is a deck of playing cards. The language was created by Michael Dvorkin in 2013. Original Ante interpreter was developed in Ruby, versions in Go, Rust, and Swift are also available."
Dimensions,https://esolangs.org/wiki/Dimensions,2014,,,unimplemented,multi-dimensional languages,languages; brainfuck derivatives,"Dimensions is an esoteric programming language invented by Tom Price-Nicholson in 2014. It was inspired by a class of esolangs called fungeoids (although it may not be a fungeoid) and, of all things, string theory. Dimensions behaves as if it has an array of cells where data can be stored and a pointer that can move through the array. The catch is this: the array has 52 dimensions. Each dimension is infinite. Dimensions was designed to appeal to string theorists, sci-fi fans, and anybody else who likes the idea of multiple dimensions."
MNNBFSL,https://esolangs.org/wiki/MNNBFSL,2014,,turing complete,implemented,stack-based,brainfuck derivatives; languages; low-level,"MNNBFSL (an acronym of Mada Namae no Nai (""still unnamed"") BrainFuck Fuu (""Style"") Stack Language, in original Japanese まだ名前のないBrainfuck風スタック言語) - is an esoteric programming language somewhat inspired by Brainfuck and Forth. Despite the similarities to BF, MNNBFSL is stack based, while BF is cell based."
Quantum Dimensions,https://esolangs.org/wiki/Quantum Dimensions,2014,,,unimplemented,multi-dimensional languages,languages; quantum computing,"Quantum Dimensions is an adaptation of Dimensions, where the program operates on qubits instead of numbers. Quantum Dimensions was invented in 2014 by Tom Price-Nicholson. There are several differences between Dimensions and Quantum Dimensions, including the removal of pointer velocity and the introduction of a def function that allows you to define your own quantum transformations. It is theoretically possible to implement Shor's algorithm in Quantum Dimensions, but it (probably) won't run in polynomial time. Quantum teleportation is possible, and a program is included below."
ATZ,https://esolangs.org/wiki/ATZ,,,turing complete,unimplemented,,languages,"The ATZ programming language is an esoteric programming language designed by Arvin Zadeh in 2014. It has yet to be implemented and no interpreters have yet been made. Since its development it has been proven to be Turing-complete due to its wide variety of capabilities. On November 12th, 2014, the ATZ programming language was officially proven to be Turing-complete when programmers created a Minsky machine with ATZ code."
Inca,https://esolangs.org/wiki/Inca,2014,functional paradigm,,implemented,multi-dimensional languages,languages,Inca is a language based on APL mapped to the ASCII character set.
My Unreliable Past,https://esolangs.org/wiki/My Unreliable Past,2014,,unknown computational class,unimplemented,,languages; low-level,"My Unreliable Past is an esoteric programming language created by User:ais523 in 2014. It explores philosophical questions about the nature of program startup and termination. Other than that, it is quite similar to (but not identical to) Fractran."
Scrip7,https://esolangs.org/wiki/Scrip7,2014,,,implemented,,languages,"Scrip7 is a language created by Oren Watson on 2014 November 22. It can be described as a low-level scripting language. It was originally designed for creating and manipulating data structures inside a C program. It is quite good at doing this, so long as the programmer is very good at pointer arithmetic. The reference implementation for the first version was finished November 24. The interpreter and language are still in primary development. The interpreter is written as a function which can be called to operate at any point in a C program, but the source also includes a ""main"" function for a standalone interpreter."
GridScript,https://esolangs.org/wiki/GridScript,2014,,,unimplemented,,languages; two-dimensional languages,GridScript is an esoteric programming language designed by user SuperJedi224. It is not yet implemented.
Mmmm(),https://esolangs.org/wiki/Mmmm(),2014,,,implemented,,languages,"Mmmm() is an esoteric ""microlanguage"" by SuperJedi224, inspired in part by Brainf***."
K-on Fuck,https://esolangs.org/wiki/K-on Fuck,,,,,,brainfuck equivalents,K-on Fuck (けいおんfuck) is an esoteric programming language believed to be created by Yuichi Nishiwaki.  It is a programming language where all input is done via the Japanese sounds うん(un) and たん(tan). It is derived from the anime K-ON or Ho-kago Tea Time which is about the every day lives of the members of the Light Music club.
قلب,https://esolangs.org/wiki/قلب,2012,functional paradigm,turing complete,implemented,,languages; high-level,"قلب is a programming language by Ramsey Nasser. The name means Heart and is a recursive acronym for قلب: لغة برمجة meaning Heart: A Programming Language. Acronyms in Arabic are uncommon and difficult to pull off, and the author states that this is the first recursive one he has seen. It was created as an art installation."
RingCode,https://esolangs.org/wiki/RingCode,2014,,,,,two-dimensional languages,"RingCode is an esoteric programming language invented by Tom Price-Nicholson in 2014. RingCode is based on the Tengwar alphabet from Lord of the Rings. The Tengwar are described in this article rather than pictured, but a full entry (including pictures) is available on Wikipedia. RingCode behaves as if it has a 2 dimensional array, with a pointer that can move through the array. Each cell of the array can hold either an int or a char but not a string or a float. To begin with, each cell has the entry 0 and the pointer is at the cell (0,0). WARNING: the letters represented by the Tengwar in this programming language are NOT their official translations. For the official translations, please see the Wikipedia page on Tengwar (click here)."
StaPLe,https://esolangs.org/wiki/StaPLe,2014,,,implemented,stack-based,low-level; languages,"StaPLe (Stack Processing Language) is a stack-based programming language created by User:BCompton in 2014 influenced by Lisp and Joy, among others."
BS,https://esolangs.org/wiki/BS,2014,,,,,languages,BS is a joke language invented by Mark Rendle to be as cruel and painful to use as possible. It tries to take the worst bits of many languages.
Folders,https://esolangs.org/wiki/Folders,2015,,,implemented,,languages,Folders is a language where the program is encoded into a directory structure. All files within are ignored.
Vigil,https://esolangs.org/wiki/Vigil,2013,,,,,languages‏‎,"Vigil is an esoteric programming language similar to Python, created by Bob Nystrom, aka munificent in 2013."
Iexp,https://esolangs.org/wiki/Iexp,2015,declarative paradigm,,output only; unimplemented,,languages,Iexp or IEXP (pronounced /'jeksp/) is an infix expression based programming language.
XRF,https://esolangs.org/wiki/XRF,2015,,,implemented,stack-based,languages,XRF is a stack-based esoteric programming language designed by User:Scoppini in 2015.
QFL,https://esolangs.org/wiki/QFL,,functional paradigm,turing tarpits,implemented,,languages,QFL is a Turing tarpit inspired by Iota and Jot. Basically it's a Iota with IO.
Taktentus,https://esolangs.org/wiki/Taktentus,2015,,,implemented,,languages,Taktentus is an simple language with equal. Author is Jacek Szewczyk. Language was created in 2015.
KlingonCode,https://esolangs.org/wiki/KlingonCode,2015,,,,,,"KlingonCode is an esoteric programming language invented by Tom Price-Nicholson in 2015. It is based on the Klingon language from Star Trek. Instructions, inputs, outputs and error warnings are all given in the Klingon language, using the Klingon alphabet."
Mice in a maze,https://esolangs.org/wiki/Mice in a maze,2015,,,implemented,concurrent programming,brainfuck derivatives; languages; two-dimensional languages,"Mice in a maze is another brainfuck derivative. It was invented in 2015 by an anonymous user. Mice in a maze was inspired by items called Cellular Automata, especially Conway's Game of Life and Langton's Ant."
Semi-quantum,https://esolangs.org/wiki/Semi-quantum,2015,,,unimplemented,,languages; quantum computing,"Semi-quantum is an esoteric programming language invented in 2015 by an anonymous user. It allows the user to chose between ""classical"" programming, in a similar manner to brainfuck, and quantum programming, similar to Quantum Dimensions. The idea was derived from languages that allow both imperative and object-oriented programming, only in this case it is classical and quantum programming."
HeartForth,https://esolangs.org/wiki/HeartForth,2015,,,,stack-based,languages,"HeartForth is a language released on Valentine's Day (February 14) of 2015 by User:NeilK. It is an Emoji stack language, which source-translates to a JavaScript implementation of Forth."
Clip,https://esolangs.org/wiki/Clip,2015,functional paradigm,turing complete,implemented,,languages,"Clip is a functional language designed for both elegance and brevity. It was inspired by CJam, Lisp, Iota, and Pyth, in that order."
Integral,https://esolangs.org/wiki/Integral,2015,,,,,languages; brainfuck equivalents,"Integral is an esoteric programming language created by User:OriginalOldMan on March 1, 2015. Programs consist of a polynomial whose integral is taken to determine how the program will run."
GOTO 10,https://esolangs.org/wiki/GOTO 10,2015,,unknown computational class,implemented,,languages,"GOTO 10 is a programming language with only GOTO statements.
Execution starts on the line(s) with the line number 10."
Turing Script,https://esolangs.org/wiki/Turing Script,2015,,turing complete,unimplemented,,languages,"Turing Script is an esoteric programming language by User:SuperJedi224. Execution is built around a single universal Turing machine that has been augmented with additional input capabilities. A program consists of a main script and a collection of turing machine programs and predefined data tapes, each in a separate file located in the same directory. (Data tapes and turing machine programs may be placed in subdirectories of the main directory, but in that case, the main script must specifically import those subdirectories before they can be used)"
~ATH,https://esolangs.org/wiki/~ATH,,,,unusable for programming; unimplemented,concurrent programming,languages,[WARNING: Spoiler alert for all you Homestuck readers.]
Wordy,https://esolangs.org/wiki/Wordy,2015,,turing complete,implemented,,languages,Wordy is a wip esoteric programming language inspired by .Gertrude and designed at 3am the week before finals.
Duck Duck Goose,https://esolangs.org/wiki/Duck Duck Goose,2015,,turing complete,implemented,queue-based,languages; thematic,"Duck Duck Goose is an esoteric programming language created by User:Vriskanon (inspired by a joke made by Connor Lawman), with function inspired, in part, by Chicken and brainfuck. The only input commands are 'Duck', 'Goose' and '\n'. The code is made up of integer variables called 'duck's, a pointer called the 'goose' and an integer variable that is outside of the circle of ducks called the 'teacher'."
Time Out,https://esolangs.org/wiki/Time Out,2015,,,implemented,stack-based,languages,Time Out is a language by User:Rottytooth where every meaningful action occurs between the lines of code. It tries to do for the Web what Folders did for Windows.
Hexadecimal Stacking Pseudo-Assembly Language,https://esolangs.org/wiki/Hexadecimal Stacking Pseudo-Assembly Language,2015,,turing complete,implemented,stack-based,languages,"The Hexadecimal Stacking Pseudo-Assembly Language (HSPAL) is a programming language by User:SuperJedi224 in which a program is represented by a list of six-digit hexidecimal numbers seperated by line breaks (or not at all, the line breaks are optional and, in fact, all other whitespace is forbidden)."
EncryptFuck,https://esolangs.org/wiki/EncryptFuck,2015,,,implemented,,languages; brainfuck derivatives,EncryptFuck is an encrypted version of a similar brainfuck code created by FreedomSka on 2015
Folder,https://esolangs.org/wiki/Folder,,,finite state automata,implemented,,languages,"The Folder programming language is an esoteric programming language by User:Rdococ with a variety of interpreters, compilers and intermediary formats."
Gibberish/JavaScript,https://esolangs.org/wiki/Gibberish/JavaScript,2015,,,,,languages; markup languages,Gibberish/JavaScript is a Gibberish derivative.
4,https://esolangs.org/wiki/4,2015,,turing complete,implemented,cell-based,thematic; languages,"4 (read four, /fɔː/), named after the last digit of pi (a joke from the webcomic Homestuck), is a thematic esoteric programming language with a small set of operations created by User:Vriskanon."
AFTL,https://esolangs.org/wiki/AFTL,2015,,,implemented,stack-based,languages,"AFTL (short for Another Fucking Time Loop) is a stack based esoteric programming language designed by User:Vriskanon. It almost uniquely manipulates its own source code in order to create new code, which is also run."
Alphabetti spaghetti,https://esolangs.org/wiki/Alphabetti spaghetti,2015,,,implemented,,languages,"Alphabetti spaghetti is an esoteric programming language invented in 2015 by an anonymous user. Programs in alphabetti spaghetti consist of a string of alphabetic characters (letters), hence the name. However, alphabetti spaghetti can only input and output integers. If you wish to output characters, assign each character an integer and transcribe the input and output. Alphabetti spaghetti consists of a pointer on a two dimensional grid of cells. the pointer starts at (0,0) and each cell is initially 0."
CalScript,https://esolangs.org/wiki/CalScript,2015,,,implemented,cell-based; stack-based,languages,"CalScript is an esoteric programming language created by User:Vriskanon. It has a stack and tape memory model and has an alphabet of only the tokens ""HAA"", ""HEE"" and ""HOO""."
Microscript,https://esolangs.org/wiki/Microscript,2015,,turing complete,implemented,stack-based,languages; golfing language,Microscript is an experimental code golfing language  designed by User:SuperJedi224. Data is stored as 64-bit signed integers in two registers (both initially 0) and a pair of stacks (both initially empty).
Fringespeak,https://esolangs.org/wiki/Fringespeak,2014,,,implemented,,languages,"Fringespeak is an interpreted scripting language, whose original interpreter was implemented using YoyoGames' GameMaker Language (GML).  It is created for the Fringes of the Empire game produced by Indie game developer Lost Astronaut.  One of two languages developed by the company.  Fringespeak has rudimentary objects, implicit structures like lists, objects and properties, and global variables.  It lets you develop a 2D space shooter game by inserting plot and even making simple on-screen animations by using lookup tables to select from pre-loaded graphics and sound."
Alacrity,https://esolangs.org/wiki/Alacrity,2014,,,implemented,,languages,"Alacrity is an interpreted scripting language developed as a middle layer API for Lost Astronaut Studio's Game Creation Framework.  Alacrity is an object-based language which has a primary programmatic feature of instantiation.  All objects are instantiated by defining their characteristics.  The underlying language, C++, is used to define the programmatic interface for each object based on a simple structured string data specification called HData."
Churro,https://esolangs.org/wiki/Churro,2014,,,implemented,stack-based,languages; thematic,"Churro is a stack-based interpreted programming language in which the code is entirely made up of churros. It was designed by Elliot Colp in 2014, who also wrote its interpreter. A compiler, Chlang, was written by Caian Benedicto in the same year."
Fourfuck,https://esolangs.org/wiki/Fourfuck,2015,,unknown computational class,unimplemented,cell-based,languages; brainfuck derivatives; low-level,"Fourfuck is an incomplete language created by Lesidhetree that was originally intended to be very loosely based on Brainfuck. Its name comes from the fact that its core commands (originally all commands) that, including the arguments, are four characters. Interestingly, the word most often said aloud by the author shares a spelling with the last four letters of the language's name."
Table,https://esolangs.org/wiki/Table,2015,,turing complete,unimplemented,,languages,The Table programming language is a programming language by User:Rdococ. It is a basic data description language extended with some minimal set of features required to make it Turing-complete.
And,https://esolangs.org/wiki/And,2015,,turing complete,implemented,,languages,The And programming language is a very peculiar esoteric language by User:Rdococ.
Goto,https://esolangs.org/wiki/Goto,,,finite state automata,implemented,,languages,"The Goto programming language is an esoteric language by User:Rdococ in which there are only goto statements, and goto statements can have multiple line numbers, which then the user specifies which one to go to."
ABCs,https://esolangs.org/wiki/ABCs,,,,implemented,,languages,ABCs is an esoteric programming language created by User:paul2520 in 2015. It uses the letters of the alphabet as commands.
Marbelous,https://esolangs.org/wiki/Marbelous,2014,,linear bounded automata,implemented,,languages; two-dimensional languages,Marbelous is a two-dimensional esoteric programming language based on numbered marbles falling down a Rube-Goldberg-like board full of devices that move and manipulate the marbles.
Darmok,https://esolangs.org/wiki/Darmok,,,,,,languages; thematic,"Darmok is a programming language based off of the episode of Star Trek by the same name. It is based entirely on metaphor and references to folklore and mythology. The syntax is yet to be defined, but will likely be very vague, with many ways to write the same thing (reflecting the variety of myths that could be referenced)."
Cod,https://esolangs.org/wiki/Cod,,,,implemented; total; unusable for programming; output only,,languages,Cod is an esolang created by User:Phase. It was inspired by Deadfish and builds upon it with new (and weird) commands.
Unc,https://esolangs.org/wiki/Unc,,,turing complete,implemented,,languages; low-level,"unc is an esoteric version of C with various keywords and characters swapped around to make programs difficult to write and read. For instance, this is a Hello, world! program in unc:"
Noisett,https://esolangs.org/wiki/Noisett,2015,,turing complete,,,languages,"Noisett is a minimalistic multi-agent middleware, where agents are tiny pattern-triggered peers. These agents are named ""Nuts"". When they receive a message, they can send other messages, if they're so inclined."
Owk,https://esolangs.org/wiki/Owk,,,,,,languages,"Owk is a compiled, esoteric, golfing, register-based programming language. created by User:Phase. that runs on the FVM. It is compiled into FVM bytecode, which can be put through the FVM for results."
Lamb,https://esolangs.org/wiki/Lamb,,functional paradigm,turing complete,implemented,,languages,Lamb is a interpreted language made by User:Phase that revolves around Lambda Calculus.
Generic 2D Brainfuck,https://esolangs.org/wiki/Generic 2D Brainfuck,2015,,turing complete; turing tarpits,implemented,cell-based,brainfuck derivatives; two-dimensional languages; languages; low-level,"Generic 2D Brainfuck is a language created in 2015 by User:Hppavilion1. It is, as the name suggests, a generic 2-Dimensional brainfuck-based language. It operates on both a 2-Dimensional variant of Brainfuck's tape as well as using a 2-Dimensional program."
Refract,https://esolangs.org/wiki/Refract,2015,,turing complete,implemented,stack-based,languages; two-dimensional languages,"refract is a 2D, stack-based, esoteric language based off ><>, GolfScript, Portal, and a bunch of other languages. It was created by User:Phase in June 2015."
J--,https://esolangs.org/wiki/J--,,,turing complete,implemented,,languages,"J-- is basically a non-OOP version of Java. It is compiled into Java code and is run like a normal Java program, though you can not create new classes. There are plenty of classes available for you to use, including integers, strings, and every other Java class. J-- automatically imports: java.lang.*, java.util.*, java.math.*. It was made in July, 2015, by User:Phase."
Cood,https://esolangs.org/wiki/Cood,,,,implemented,,languages; thematic,Cood (code and food) is an interpreted stack-based esoteric programming language based on the phrases you usually will say in a restaurant.
Langar.io,https://esolangs.org/wiki/Langar.io,2015,,,,cell-based; stack-based,languages; two-dimensional languages,"Langar.io is a two-dimensional, stack-based esoteric programming language made by User:InputUsername in 2015. It is inspired by and loosely based on the (in)famous web game Agar.io. In Agar.io, the player controls a blob of mass and must gain mass by eating other blobs."
"Ultimate Programming Language to Take Over a Prison, Then He World","https://esolangs.org/wiki/Ultimate Programming Language to Take Over a Prison, Then He World",2015,,,implemented,,languages; thematic,"Ultimate Programming Language to Take Over a Prison, Then He World is an esoteric programming language created by User:iisu, based on the Ultimate plan to take over a prison, then he world (originally a Reddit post)."
Retina,https://esolangs.org/wiki/Retina,2015,,turing complete,implemented,,languages,"Retina is a regex-based programming language developed by user:Martin Ender. The main design goal of Retina is to be able to use regular expressions with as little boilerplate code as possible. It runs on the .NET regex engine, meaning that both .NET and ECMAScript flavors are available. It is primarily used for code-golfing."
MagiStack,https://esolangs.org/wiki/MagiStack,2015,,,implemented,stack-based,languages,MagiStack is a stack-based esoteric programming language created by Katrina Scialdone. It is based loosely on Unefunge (a one-dimensional offshoot of Befunge) and uses some similar or identical commands. It is no longer in development as of version 1.2.
???,https://esolangs.org/wiki/???,2015,,turing complete,implemented,,languages; brainfuck equivalents,"This wiki is dedicated to the fostering and documentation of programming languages designed to be unique, difficult to program in, or just plain weird."
Niblet,https://esolangs.org/wiki/Niblet,2015,,unknown computational class,implemented,cell-based; stack-based,languages,niblet is an esoteric programming language where nibbles are used to store data.
Snowman,https://esolangs.org/wiki/Snowman,2015,,,implemented,,languages,Snowman is an esoteric programming language created by Stack Exchange user Doorknob.
Fourier,https://esolangs.org/wiki/Fourier,,,,implemented,,languages; golfing language,"Fourier is a golfing language created by Stack Exchange user Beta Decay, with similarities to Brainfuck, but more advanced. It is still undergoing development as of August 2015."
Labyrinth,https://esolangs.org/wiki/Labyrinth,2015,,turing complete,implemented,stack-based‏,languages; two-dimensional languages,Labyrinth is a two-dimensional stack-based programming language developed by user:Martin Ender. The source code resembles a maze which is traversed by the instruction pointer. Labyrinth has two main features setting it apart from most other languages: a) there are no control flow operators - control flow is determined solely by the layout of the maze - and b) the source code can be modified at runtime via cyclic shifts of rows and columns. The latter mechanic was inspired by the German board game Das verrückte Labyrinth.
WUUI,https://esolangs.org/wiki/WUUI,2015,,unknown computational class,output only; unimplemented,,languages; low-level,WUUI is a nondeterministic esoteric programming language designed in 2015 by User:ais523.
J-why,https://esolangs.org/wiki/J-why,2015,functional paradigm,,unimplemented,,languages,"J-why, orginated from sentence Just why, is an esoteric functional program idea which is meant to be as stupid, hard and annoying to program as possible, yet still keeping possibility of actually doing programs with it, first concepted by user:Jabutosama. Due to many stupid rules and limitations, it is pleasant to finish actual working code."
Slim,https://esolangs.org/wiki/Slim,2015,,,implemented,stack-based,languages,Slim is a minimalistic stack-based esoteric programming language designed by User:Scoppini in 2015.
Roadrunner,https://esolangs.org/wiki/Roadrunner,2015,,,,,languages; brainfuck equivalents,"Roadrunner is a Brainfuck clone language created by Katrina Scialdone. It is based off of the popular Looney Tunes character Roadrunner, who, as is fairly well known, pretty much only ever says 'Meep meep!'."
Symball,https://esolangs.org/wiki/Symball,,,,,,languages,"Symball is a procedural programming language composed of single-character commands, variables, and values.
Because everything is single-character, this allows for concise, pregolfed code with pre-determined line length."
Nopfunge,https://esolangs.org/wiki/Nopfunge,2015,,turing complete; turing tarpits,implemented; no io,,low-level; languages; two-dimensional languages,"Nopfunge is a fungeoid designed by Hubert Lamontagne in 2015. It is a two-dimensional esoteric programming language based on a severely restricted subset of the well known Befunge language. Its goal is to show that having access to a sufficiently flexible program geometry is indeed the only thing that is needed to achieve Turing completeness. It is an example of extreme Turing tarpit, and very severely sacrifices usability in order to achieve a high degree of theoretical elegance. In other words, it manages to have an amazingly high number of NON-features."
Hexagony,https://esolangs.org/wiki/Hexagony,2015,,turing complete,implemented,cell-based‏,languages; two-dimensional languages,"Hexagony is a two-dimensional programming language developed by user:Martin Ender. To the best of the author's knowledge it's the first ever 2D language where the instruction pointer moves on a hexagonal grid. Furthermore, the memory layout also resembles a (separate) hexagonal grid. The name is a portmanteau of ""hexagon"" and ""agony"", because I expect programming in it to be quite painful."
7Basic,https://esolangs.org/wiki/7Basic,2015,,,implemented,,languages,7Basic is an ambitious project aimed at creating a cross-platform BASIC compiler that generates native Win32 and i386 ELF executables.
Ajsone,https://esolangs.org/wiki/Ajsone,2014,,,implemented,,languages,"Abusing JSON Esolang (Ajsone) is an esoteric programming language created by Alok Menghrajani. The language abuses JSON by using the JSON data format to represent everything: functions, variables, values, etc."
HALT,https://esolangs.org/wiki/HALT,,,,,,languages,HALT is a language designed for string processing which is currently under development.
Nyarlathotep,https://esolangs.org/wiki/Nyarlathotep,2015,,finite state automata,usability unknown; implemented,cell-based,languages,"Nyarlathotep (named after a deity in the Cthulhu Mythos) is a esoteric language created by User:CosmoConsole in 2015, and has received a large amount of inspiration from Malbolge. Similarly to the aforementioned language, it is designed to be as difficult to program in as possible."
Espro,https://esolangs.org/wiki/Espro,2015,object-oriented paradigm,turing complete,unimplemented,,languages; high-level,"Arrays can be formed by using the -ar- particle: entjeraro (int[]), ĉenaro (string[])."
90,https://esolangs.org/wiki/90,2015,,unknown computational class,usability unknown; unimplemented,,languages,"90 is an esoteric programming language created by User:ais523 in 2015 (in a few minutes, after being inspired by some comments by hppavilion[1] on IRC). Unlike most programming languages, a 90 program does not run code, but rather destroys the code of other programs. The name is in hexadecimal, but is nonetheless pronounced ""ninety""."
G*,https://esolangs.org/wiki/G*,2015,,,,,languages; golfing language,G* is an esoteric programming language made by User:M654z in 2015. G* was originally designed for code golfing.
CompressedFuck,https://esolangs.org/wiki/CompressedFuck,2015,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents,"CompressedFuck, made by User:LegionMammal978 in 2015, is yet another compression scheme for brainfuck, designed to be at most half the size of the original program for sufficiently large programs."
C+,https://esolangs.org/wiki/C+,2015,,,unimplemented,,languages; joke languages,"C+ is C++ but all functions are subtracted by 1 character and all numbers are subtracted by one. (It means, iostream is iostrea, 0 is -1.)"
Infinite Vector,https://esolangs.org/wiki/Infinite Vector,2015,,turing complete,unimplemented,,languages; high-level,"Infinite Vector is an esoteric programming language created by User:ais523 in 2015. It is based heavily around the concept of vectors. Contrary to its name, the vectors are not infinite; the ""Infinite"" in the name is merely to sound cool."
EGSHEL,https://esolangs.org/wiki/EGSHEL,2015,,,unimplemented,,languages; golfing language,"EGSHEL (the Extensible Golfing Scripting High Efficiency Language) is a highly extensible pseudoesoteric stack-aware object-oriented scripting language in development by User:Catb0t intended partially for golfing, but which can also be implemented in more useful circumstances as a 'real' scripting language, and which can be built upon and used for almost anything."
Unicat,https://esolangs.org/wiki/Unicat,2015,,,implemented,,languages,Unicat is an esoteric programming language created in 2015 by User:Gemdude46.
MATL,https://esolangs.org/wiki/MATL,2015,,turing complete,implemented,stack-based; graphical output,languages; golfing language,MATL /'mæt.ˌl/ is a programming language based on MATLAB/Octave and suitable for code golf.
AIV,https://esolangs.org/wiki/AIV,2015,,,unimplemented,,languages,AIV is an interpreted weirdlang that uses french quotes instead of brackets.
CASTLE,https://esolangs.org/wiki/CASTLE,2014,declarative paradigm,,unimplemented,cellular automata,languages; meta-languages,"CASTLE, which stands for ""Cellular Automaton Specification by Transforming Lists of Examples"", is a 2014 experimental language by User:Quintopia. Inspired by example-driven languages like Clue (oklopol) and CA specification languages, particularly the .rule file format for Golly. The goal was to create a method for specifying CAs in which nearly arbitrary transformations can be specified, even those with non-traditional neighborhood shapes and sizes and those with neighborhoods that change over time, in a human-readable format."
Brian & Chuck,https://esolangs.org/wiki/Brian & Chuck,2015,,turing complete,implemented,cell-based‏,languages; brainfuck derivatives; low-level,Brian & Chuck is an esoteric programming language with two mutually modifying Brainfuck-like programs developed by user:Martin Ender. The language was remotely inspired by RubE on Conveyor Belts and Self-modifying Brainfuck.
DStack,https://esolangs.org/wiki/DStack,2015,,turing complete,implemented,stack-based,languages,"DStack is a stack-based esoteric language created by User:-Dark-Phantom- on November, 2015. The language uses two stacks, a cursor and a register, the four begin with the value zero. It has only one data type: unsigned integers of at least 8 bits. The cursor marks the position in the code of the instruction to be executed. There is also a dictionary which maps numbers to string literals."
SPLEMIT21,https://esolangs.org/wiki/SPLEMIT21,,,,unusable for programming,,languages; joke languages,SPLEMIT21 (short for Shortest Programming Language Ever Made In The 21st [Century]) is a joke language developed by Maximilian Krause aka fucketh1cs. SPLEMIT21 was solely made to cheat on several tasks like quines.
Three Star Programmer,https://esolangs.org/wiki/Three Star Programmer,2015,,unknown computational class,usability unknown; output only; implemented,cell-based,languages; low-level,"Three Star Programmer is an esoteric programming language created by User:ais523 in 2015. It was created when, while working on another esolang, ais523 decided to add an ""increment pointed-to address"" command, then had problems finding a way to read from memory, and started to wonder whether one was necessary at all or whether an instruction similar to this is sufficient by itself."
Brackit,https://esolangs.org/wiki/Brackit,2015,,,unimplemented,stack-based,languages; golfing language,"Brackit is a predominately stack-based esoteric programming language with characteristics of object oriented design. Brackit was created by Blake Lockley in 2015, designed mainly for code golfing challenges. The language is still currently in development but alpha versions for testing can be downloaded here."
Amycus,https://esolangs.org/wiki/Amycus,2015,functional paradigm,turing complete,no io; unimplemented,,languages,"Amycus is a simple Turing-complete functional programming language created by a misunderstanding from a language Amicus defined by David Madore in his 2015-11-16 blog article “Qu'est-ce qu'une machine hyperarithmétique ?”.  Just like David's older language Unlambda or Backus's FP language, Amycus has no variables, yet lambda calculus style code with variables can be translated to Amycus easily by abstraction elimination, because the necessary combinators for composition are provided."
Hyperamicus,https://esolangs.org/wiki/Hyperamicus,2015,functional paradigm,,no io; unimplemented,,languages,Hyperamicus is a functional programming language defined by David Madore in his 2015-11-16 blog article “Qu'est-ce qu'une machine hyperarithmétique ?” which is non-computable and strictly more powerful than Turing machines.
Amycus Severus,https://esolangs.org/wiki/Amycus Severus,2015,functional paradigm,turing complete,no io; implemented,,languages,Amycus Severus is a Turing-complete functional programming language that is a restricted variant of Amycus.  Amycus is an esoteric programming language that was born from a misunderstanding by User:b_jonas over an esoteric programming language Amicus by David Madore.
UberGenes,https://esolangs.org/wiki/UberGenes,2015,,turing complete,implemented,,languages; low-level,"UberGenes is a mostly backwards-compatible extension to Aubergine created by User:Quintopia in 2015. It was designed with the goals of removing some of the arbitrary restrictions in Aubergine, increasing functionality, and being able to produce a tiny code footprint when Aubergine source code length is summed with the length of the interpreter."
Purple,https://esolangs.org/wiki/Purple,2015,,turing tarpits,implemented,cell-based,low-level; languages,"Purple is a self-modifying tarpit intended as a minimization of Aubergine created by User:Quintopia in 2015, as a program of repeatedly staying up late at night to create Aubergine derivatives. It was created after noticing that Aubergine's conditional jump was unnecessary for Turing-completeness, and that the functionality of the remaining instructions could be captured in a single instruction with one additional argument, and that said instruction would no longer require an identifying character, so that each instruction would continue to occupy three bytes."
Seriously,https://esolangs.org/wiki/Seriously,2015,,,implemented,stack-based,languages; golfing language,Seriously is a golfing language created by Mego in 2015 and still under development. It is a stack-based language with overloaded single-byte command names. In addition to the stack it has 2 named registers and an indexable permanent array. Its creation was inspired by this thread on PPCG and is being developed to be used in code golf challenges on PPCG.
Last ReSort,https://esolangs.org/wiki/Last ReSort,2015,,,no io; unimplemented,,languages; low-level,"Last ReSort is an esoteric programming language created by User:ais523 in 2015. It was originally discovered while trying to design an extremely short language main loop, along the lines of MiniMAX but even simpler. The particular approach taken here was a consequence of trying to optimize a Three Star Programmer implementation, thinking ""wouldn't it be nice if this were a ZISC"", and then trying to find the simplest possible reduction of Three Star Programmer into ZISC form that wasn't obviously Turing incomplete; the particular construction used was also distantly inspired by Malbolge (specifically, in the fact that ""commands"" change when run). The resulting ZISC turned out to implement a pretty elegant language; both the language and the ZISC itself are described here."
The Amnesiac From Minsk,https://esolangs.org/wiki/The Amnesiac From Minsk,2015,,turing complete,output only; implemented,cell-based,languages; low-level,"The Amnesiac From Minsk is a series of esoteric programming languages designed by User:ais523 towards the end of 2015. They are arranged as a sequence of ""difficulty levels""; higher-level languages are intended to be harder to program in (and lower-level languages can be seen as wimpmodes for the higher-level languages). Minsky machines can be seen as a ""level 0"", or a wimpmode for the language as a whole, as they have a strict superset of its functionality."
Portable Minsky Machine Notation,https://esolangs.org/wiki/Portable Minsky Machine Notation,2015,,turing complete,,,languages; low-level,"Portable Minsky Machine Notation (PMMN) is a syntax for Minsky machines that was created by User:ais523 in 2015. Like Bitwise Cyclic Tag, it is equivalent (when seen as an esoteric programming language) to a mathematical formalization that has existed for a long time, but has the advantage that it has a concrete syntax, and thus it is possible to write compilers to and from it and interpreters for it."
Kangaroo,https://esolangs.org/wiki/Kangaroo,2015,,turing complete,implemented; no io,,languages; low-level,"Kangaroo is an esoteric programming language created by User:ais523 in 2015, in which the only thing instructions can do is temporarily disable other instructions. (This technically makes it an OISC, because it only has one sort of instruction, but it does not behave in a very similar way to other OISCs, because that instruction takes a multiset as an argument.)"
Beeswax,https://esolangs.org/wiki/Beeswax,2015,,turing complete,implemented,stack-based; cell-based‏,languages; two-dimensional languages; low-level,"beeswax is a stack-based 2 dimensional esoteric programming language developed by user:Albedo (Manuel Lohmann). Beeswax draws inspiration from bees moving around on a honeycomb, and is partly inspired by languages like Cardinal etc. and the abstract board game Hive which uses hexagonal game pieces.
The instruction pointers (bees) move around on a 2D hexagonal grid (the honeycomb). beeswax programs can manipulate their own source code, change the program size, and can read and write files."
ROOP,https://esolangs.org/wiki/ROOP,2015,,turing complete,implemented,,languages; two-dimensional languages,"ROOP (Real Object-Oriented Paradigm) is a two-dimensional language created by User:-Dark-Phantom- on December, 2015. The language uses a rectangular grid of objects represented as characters in the source code. Some objects are static and others can move."
Your Minsky May Vary,https://esolangs.org/wiki/Your Minsky May Vary,2015,,unknown computational class,usability unknown; unimplemented,,languages,"Your Minsky May Vary is an esoteric programming language created by User:ais523 in 2015. The name came first, and then the esolang was designed around it."
Takeover,https://esolangs.org/wiki/Takeover,2016,,unknown computational class,implemented,,languages,"Takeover is an esoteric programming language created by User:ais523 in 2016. The original idea that inspired the language was to create a language in which standard input was appended to the program before it started to execute (thus making the null program a self-interpreter), and the rest of the language was designed around this concept. The resulting language has some similarities to Splinter, and some similarities to the non-esoteric language Forth."
TrumpScript,https://esolangs.org/wiki/TrumpScript,2016,,,implemented,,joke languages; languages,"From the Github repository: ""TrumpScript is a language based on the illustrious Donald Trump. As the undeniably best presidential candidate in the 2016 language, we found that the current field of programming languages does not include any that Trump's glorious golden combover would approve of."
Tome,https://esolangs.org/wiki/Tome,,,,implemented,,languages,Tome is a tanspiled language that aims to use syntax as close to natural English as possible. It transpiles into Javascript and is typically run via a web browser.
FISHQ9+,https://esolangs.org/wiki/FISHQ9+,2016,,,unusable for programming; output only; implemented,,languages; joke languages; high-level,FISHQ9+ is a simple interpreted language created by combining the functionality of Deadfish and HQ9+.
M×N-Dimensional Brainfuck,https://esolangs.org/wiki/M×N-Dimensional Brainfuck,2016,,,,cell-based; multi-dimensional languages,languages; low-level; brainfuck derivatives,M×N-Dimensional Brainfuck is a brainfuck derivative with an M-dimensional tape and an N-dimensional program.
AnnieFlow,https://esolangs.org/wiki/AnnieFlow,2016,,turing complete; turing tarpits,implemented,,languages,"AnnieFlow is a StackFlow derivative that has mostly the same behavior, except for the following:"
Viktor's amazing 4-bit processor,https://esolangs.org/wiki/Viktor's amazing 4-bit processor,1999,,finite state automata,implemented,,low-level; languages,"Viktor's amazing 4-bit processor is an esoteric computer hardware designed and soldered by the physicist Viktor T. Toth in 1999.  The goal of the computer was for the creator to learn about electronics, specifically creating circuits from TTL logic chips.  The computer executes a very simple custom machine language."
Armok,https://esolangs.org/wiki/Armok,2016,,,implemented,,languages; thematic,Armok
Humo,https://esolangs.org/wiki/Humo,,,turing complete; turing tarpits,implemented,,languages,Humo is a programming language with a tiny interpreter implementation and the smallest set of operations for an imperative programming language.
Q,https://esolangs.org/wiki/Q,2016,,turing complete,implemented,,languages,"The Qabalah language (Q) is not only an esoteric programming language, but it is also an occult programming language. The first version of the language was conceived while in bed with my mobile device and a C compiler app, and the program was a fully functional interpreter in 112 lines - with only a very narrow set of operators, and a brainfuck type of variable selection. The code was then transferred to my computer, and the language started developing into what it is today."
!!!,https://esolangs.org/wiki/!!!,,,,unimplemented,,languages,"!!! is a language based off of the (really awesome) language !!!Batch, but with some extra goodies in the box."
Vitsy,https://esolangs.org/wiki/Vitsy,,,,implemented,,languages,"Vitsy is an esoteric programming language designed by the PPCG user VTCAKAVSMoACE. It's control structure is largely linear and stores data in a stack of stacks of arbitrarily large decimals, or, more simply, a two-dimensional stack of arbitrarily large decimals. Its most common interpreters are written in Java and may be found in this GitHub repository. The Java interpreters began development in mid-October 2015 and will continue to be developed for probably all of time. More interpreters (specifically in JavaScript) based on the language (but not identical in behavior) are coming to existence thanks to PPCG users Cᴏɴᴏʀ O'Bʀɪᴇɴ, LegionMammal978, Maltysen, and RikerW."
Japt,https://esolangs.org/wiki/Japt,2015,,turing complete,implemented,,golfing language; languages,Japt is a language designed for code-golfing.
Libra,https://esolangs.org/wiki/Libra,,,turing complete,implemented,,languages; high-level,"Libra is a language that provides no real features, so the programmer must rely entirely upon libraries to do anything. These standard libraries use extremely esoteric techniques to provide basic functionality."
Gbagbo,https://esolangs.org/wiki/Gbagbo,2016,,,implemented,,languages,"The Gbagbo programming language expresses calculations on bags.  It is
named after the former Ivory Coast President Laurent Gbagbo."
Hoon,https://esolangs.org/wiki/Hoon,2011,functional paradigm,turing complete,implemented,,languages,Hoon is a typeless esoteric functional programming language.  It compiles to a small lower level typeless functional esoteric language called Nock.
S.I.L.O.S,https://esolangs.org/wiki/S.I.L.O.S,,,,,,languages,"S.I.L.O.S or SIL is designed for a nostalgic view of the past. It is simple and minimalistic, but remains capable of universal computation.
Feel free to | try this language online! The interpreter is hosted by Dennis Mitchell."
SBN,https://esolangs.org/wiki/SBN,2004,,turing complete,,,low-level,"SBN (Subtract and Branch if Negative) is an OISC low level language.  It is described by Fotis Georgatos in ""Coffee Making HOWTO"", chapter 5.1 ""An adequate assembly language"". To be more exact, the SBN described in the Coffee Making HOWTO is for humorous effect chosen to be SBN2, which is an esoteric way to program a subtracting machine, to the point of distraction."
Y (Conor O'Brien),https://esolangs.org/wiki/Y (Conor O'Brien),,,,implemented,stack-based,languages,Y is a programming language designed to be good with interacting with itself when tiled/chained. It has a stack-based memory model. One can find an interpreter here.
Daoyu,https://esolangs.org/wiki/Daoyu,2016,,unknown computational class,implemented,cell-based,languages; low-level,"Dàoyǔ (道语), or DaoLanguage, is an esoteric, homoiconic programming language made by User:Kaynato in 2016, modeled after about two or so tenets of Daoist philosophy. It is inspired by other elegant and minimal programming languages such as Iota, Jot and FALSE, though the actual functionality bears little resemblance to that of those."
COMPLEX,https://esolangs.org/wiki/COMPLEX,2016,,,output only; implemented,,languages; two-dimensional languages,"COMPLEX is an esoteric programming language created by Nathan van Doorn in 2016. It is designed to resemble a stripped-down BASIC, except with line numbers ranging over the Gaussian integers."
Fuun DNA,https://esolangs.org/wiki/Fuun DNA,2007,,turing complete,,,languages; icfp contest,Fuun DNA is a self-modifying string-rewriting language.  It was defined for the task of the ICFP contest 2007 (“Morph Endo”).
Fuun RNA,https://esolangs.org/wiki/Fuun RNA,2007,,,,,languages; icfp contest,Fuun RNA is a graphic description language.  It was defined for the task of the ICFP contest 2007 (“Morph Endo”).
Юᓂ곧⎔,https://esolangs.org/wiki/Юᓂ곧⎔,2004,,,unimplemented,,languages; cjk,Юᓂ곧⎔ is an unfinished plan for a programming language by David Madore in the blog post A Unicode-obfuscated programming language proposal.
AssemblerFuck,https://esolangs.org/wiki/AssemblerFuck,2016,,turing complete,implemented,cell-based,languages; brainfuck derivatives,AssemblerFuck is a language made by User:Sesshomariu and is a version of brainfuck that uses assembler-like words instead of symbols.
Scotty,https://esolangs.org/wiki/Scotty,2016,,,educational; implemented,,languages,"Scotty is an educational esoteric language created in the Spring of 2016 for a course on programming languages.  It is an imperative language with a syntax that is incredibly easy to tokenize, making it relatively easy to implement language features without needing to perform any lexical analysis of the input."
GPRX 3000,https://esolangs.org/wiki/GPRX 3000,2016,,turing complete,implemented,,languages; low-level,GPRX 3000 is an esoteric programming language invented by xfix in 2016 implemented on non-existent GPRX 3000 CPU with three arbitrary precision registers and no external memory support.
Confusion,https://esolangs.org/wiki/Confusion,2016,,finite state automata,implemented,,languages,"Confusion is a registries-based language created by Alessandro Morina. The structure of code is pretty similar to a c-like language, but as an esoteric programming language should be, there are some rules that can confuse you."
Laconic,https://esolangs.org/wiki/Laconic,2016,,turing complete,implemented,,languages,Laconic is a programming language that compiles to a one-tape two-symbol Turing machine.  The goal for its creation was to create two-symbol Turing machines with very few states (a golfed Turing machine) that does something interesting when started on a blank tape.  Laconic is a strongly-typed language that supports recursive functions.
Obfuscated Tiny C,https://esolangs.org/wiki/Obfuscated Tiny C,2001; 1996,,,implemented,,languages,"Obfuscated Tiny C is a small subset of the C programming language created by Fabrice Bellard, published in 2001.  The goal is to be able to compile the language with a small self-hosting compiler (the Obfuscated Tiny C Compiler, OTCC) written in Obfuscated Tiny C, so small that Bellard could submit it to the International Obfuscated C Contest (IOCCC) and win."
Goruby,https://esolangs.org/wiki/Goruby,,,,implemented,,languages,"goruby is a modification of the ruby programming language to make it somewhat more suitable to code golf.  It is implemented by the files goruby.c and golf_prelude.c which are distributed with the ruby source code.  The most important changes to ruby are that it allows you to use abbreviated method names and finds the matching method automatically, puts Array's methods (such as join) to Enumerable, and makes integers Enumerable."
Gopher,https://esolangs.org/wiki/Gopher,2016,,,implemented,,languages,Gopher is an esoteric language created to be similar in some ways to brainfuck but at the same time being its own thing.
Tellurium,https://esolangs.org/wiki/Tellurium,2016,,turing complete,implemented,cell-based,languages; brainfuck derivatives,"Tellurium is an esoteric, tape-based programming language invented in 2016 by User:M654 with code-golf challenges in mind."
ListLang,https://esolangs.org/wiki/ListLang,2016,,,implemented; implemented,stack-based,languages,ListLang is an esoteric programming language that finds its inspiration in Befunge. It is a stack-based language with arithmetic and logical capabilities.
Chance,https://esolangs.org/wiki/Chance,2016,,,implemented; total; unusable for programming,,languages,"Chance is an esoteric programming language made in 2016 by User:M654 with the goal of being as hard as possible to write programs in. Chance is heavily based on chance. In fact, there is a 14% chance that a cat program written in Chance will work."
ANItka,https://esolangs.org/wiki/ANItka,2016,,,implemented,cell-based,languages,ANItka lang is an esoteric programming language designed by Radek. It was developed on the spur of the moment for author's girlfriend Anita.
Z,https://esolangs.org/wiki/Z,2016,,,implemented,,languages,"Z is a programming language developed by User:Challenger5 in April - May 2016, which uses only lowercase and capital Z, space, and newline. It is essentially assembly code with several modifications. It is based on ""words"" of up to 3 of the letter Z. Each word has sub-words separated by spaces, which combine to create a statement. Statements are separated by newlines. However, statements can also be separated by double spaces, and are treated as one line by the ""zzz"" and ""zzZ"" commands. Note that the case of the Z matters.
It uses a preparing number system to make it easy to interpret because the author was lazy. The system works using several commands that ""prepare"" a number, and other commands use the prepared number as input. It was partially inspired by brainfuck for the idea of a number table with cells. However, the language is much easier than it."
Anguish,https://esolangs.org/wiki/Anguish,,,,implemented,,brainfuck equivalents; languages,"Anguish is a programming language that consists of invisible unicode characters, thus being easy to hide in other programs. The language is essentially brainfuck, with all operators swapped out to invisible characters."
++brainfuck++,https://esolangs.org/wiki/++brainfuck++,2016,,,,,languages; brainfuck derivatives,"++brainfuck++ - joke language, written by User:Maximngy 27.05.2016.
That is an updated version of Brainfuck."
BF+BF,https://esolangs.org/wiki/BF+BF,2016,,,implemented,,languages; two-dimensional languages; brainfuck derivatives,BF+BF is an esoteric programming language invented by the user (User:IAM) as a combination of Befunge and Brainfuck Extended Type I.
Fumble,https://esolangs.org/wiki/Fumble,,,,unimplemented,stack-based,languages,Fumble is a self modifying stack based esolang designed by Moon_
Stack Cats,https://esolangs.org/wiki/Stack Cats,2016,,turing complete,implemented,stack-based‏,languages,"Stack Cats (abbreviated as SKS) is a stack-based, reversible programming language developed by user:Martin Ender and user:Sp3000. It was originally conceived of for a language-design challenge on Code Golf Stack Exchange, but later designed and developed independently of that."
Stack Up,https://esolangs.org/wiki/Stack Up,2016,,turing complete,implemented,stack-based,languages,"Stack Up is a stack-based programming language. Stack Up uses two LIFO data stacks for storing and processing data. Each stack has no maximum depth beyond that which is imposed by hardware and holds 8-bit integers ranging 0 to 255. One stack is known as the Main Stack; the other is the Extra Stack. Except as noted, all commands effect only the Main Stack."
Subtractpocalypse,https://esolangs.org/wiki/Subtractpocalypse,2016,,turing complete,output only; implemented,,languages,Subtractpocalypse is an esoteric programming language created by User:ais523 in 2016.
Symbolic Brainfuck,https://esolangs.org/wiki/Symbolic Brainfuck,2016,,,implemented,cell-based,low-level; languages; brainfuck; brainfuck derivatives,"Symbolic Brainfuck is a brainfuck derivative that adds ""symbolic references"" to 8 named registers, as well as adding ""reference"" and ""dereference"" operators that allow cells to store pointer values. Since the references are symbolic, all Symbolic Brainfuck operands are PC characters (all of which are also available in Unicode) that can not be immediately typed on a standard US keyboard."
PokéBattle,https://esolangs.org/wiki/PokéBattle,2016,,,implemented,,languages; thematic,PokeBattle is a programming language designed so that the program looks like the transcript of a Pokemon battle.
Emoji-gramming,https://esolangs.org/wiki/Emoji-gramming,2017,,turing complete,implemented,,languages,Emoji-gramming (proper name 💻) is a simple emoji-based esolang.
Calcutape,https://esolangs.org/wiki/Calcutape,2016,,,implemented,stack-based,languages,"Calcutape is a programming language designed to calculate mathematical expressions on a tape, designed (along with the interpreter) by User:Darkrifts. It is interpreted, with no compiler made as of yet. The interpreter can be found here, and has been tested on Windows with .NET 4.0."
FOSCode,https://esolangs.org/wiki/FOSCode,,,,,stack-based; queue-based,languages,"This language and its specification is still being developed by Darkrifts (talk), suggestions are welcome and appreciated. The language is ""compiled"" into an obfuscated set of characters and ""decompiled"" into regular text before being interpreted as plaintext (running as if used in the FOS shell command line), along with an alternate option of simply interpreting a file that hasn't been pseudocompiled yet. [NOTE: A DR (""Direct Run"") app has LESS functionality than a pseudocompiled one, as only pseudocompiled programs have access to the if statements]
FOSC has an interesting way of passing command line arguments. As you cannot pass arguments when running a program, you have to get memory in there somehow for interesting programs, which is where the interesting properties of the stack and queue come into play (more on this lower down)."
Gaot++,https://esolangs.org/wiki/Gaot++,2016,,,implemented,stack-based,languages; thematic,Gaot++ is a stack-based programming language with 2 types of commands: baas and bleets.
Brain-Flak,https://esolangs.org/wiki/Brain-Flak,2016,,turing complete,implemented,stack-based‏,languages,"Brain-Flak is a stack-based esoteric language designed by Programming Puzzles and Code-Golf user, DJMcMayhem. The name is a cross between ""brainfuck"", which was a big inspiration for the language, and ""flak-overstow"", since the language is confusing and stack-based."
HashHell,https://esolangs.org/wiki/HashHell,2016,,turing complete,implemented,,languages,"#hell is a minimalist subset of Lua designed by Iconmaster in August of 2016. It is designed to force the programmer to use Lua tables (essentially hash maps) for all computation, proving that all you need for Turing completeness is the hash map and some control flow. All #hell programs therefore are valid Lua programs."
MiniStringFuck,https://esolangs.org/wiki/MiniStringFuck,2000,,,implemented,,brainfuck_derivatives; joke_languages; languages,"MiniStringFuck (or MSF-) is an esoteric programming language with only two commands, operating on one cell."
W-INTERCAL,https://esolangs.org/wiki/W-INTERCAL,2016,,,implemented,,languages,"W-INTERCAL is a version of INTERCAL made by Kiwitrader (talk) 03:31, 13 August 2016 (UTC)"
Unfuck,https://esolangs.org/wiki/Unfuck,,,,,,languages; brainfuck derivatives,"Unfuck is an esoteric programming language designed by User:Andrew_Melrose in 2015. The language is based on Urban Müller's Brainfuck language, but it takes a different spin on how control flow works. It has an infinite tape with 8 bit wrapping cells."
CSL,https://esolangs.org/wiki/CSL,2016,,,implemented,stack-based,languages; two-dimensional_languages,"Command Stack Language (CSL for short, CSLAAI2D* for long) is a 2D, stack-based programming language by User:Actuallyallama."
Subterra,https://esolangs.org/wiki/Subterra,2016,,turing complete,implemented,stack-based,languages,Subterra is a tarpit-style language created by Katrina Scialdone that attempts to get as close to being a proper imperative programming language as possible within the following restrictions:
Logicode,https://esolangs.org/wiki/Logicode,,,,implemented,,languages,"Logicode is a minimalistic language designed by user:Qwerp-Derp on August 31, 2016. It is heavily inspired by Logisim."
MiniPig,https://esolangs.org/wiki/MiniPig,2016,,unknown computational class,implemented,stack-based,languages,"Minipig, or MP, is an esoteric programming language created by User:Challenger5. It is a minimalistic stack-based language that was pretty much designed in under two hours.
Its only literal is 1, and its only operation is subtraction. However, it can still represent, albeit in an extremely verbose manner, any integer.
Gotos in this language have two quirks:"
Refunge,https://esolangs.org/wiki/Refunge,2016,,,implemented,,two-dimensional_languages; languages,Refunge is a Befunge derivative esoteric programming language created by User:Happa that aims to be similar to Befunge-93 while allowing potentially more readable code and optional 1-dimensional style programming in lines. It is only partially compatible with Befunge-93 programs.
Cubix,https://esolangs.org/wiki/Cubix,2016,,,implemented,stack-based,languages; two-dimensional languages,Cubix is a stack-based 2-dimensional language where the code is wrapped around a cube.
Bug Computer,https://esolangs.org/wiki/Bug Computer,2012,,,educational; implemented,,languages; low-level,"The Bug Computer is a simple, educational computer architecture invented by User:Function call without parameters in 2012."
NOR,https://esolangs.org/wiki/NOR,,,,implemented,,languages,NOR is an esoteric language created by Dylan Turner to replicate how a processor interprets data on a physical transistor level.
Ouroboros,https://esolangs.org/wiki/Ouroboros,2015,,,implemented,stack-based,languages; two-dimensional_languages; thematic,Ouroboros is an esoteric programming language wherein the code is a bunch of snakes eating their own tails.
Brain,https://esolangs.org/wiki/Brain,,,turing complete,implemented,,languages; brainfuck derivatives,An esoteric programming language based on Brainfuck.
Kinetosis,https://esolangs.org/wiki/Kinetosis,,,,,,languages,Kinetosis is an esoteric programming language descended from SICKBAY.
MiLambda,https://esolangs.org/wiki/MiLambda,2015,,turing complete,implemented,cell-based,languages; two-dimensional languages,"MiLambda(μλ), is esoteric two dimensional turing-complete programming language.
In this languages all instructions are letters of Greek alphabet."
Factory,https://esolangs.org/wiki/Factory,2016,,turing complete,implemented,stack-based,languages,"In this language you control a claw in the byte factory, moving 1's and 0's around.
Here is a map of the factory on program start:"
PPAP++,https://esolangs.org/wiki/PPAP++,,,,implemented,,languages; brainfuck equivalents; thematic,PPAP++ is a trivial brainfuck substitution with Run Length Encoding by User:Sesshomariu referencing to the popular PPAP meme. The repository on GitHub can be found here.
OOLANG,https://esolangs.org/wiki/OOLANG,2015,,turing complete,implemented,stack-based,languages,"OOLANG(Object Oriented LANGuage), simple stack based esoteric programming language, but with object oriented syntax."
ObCode,https://esolangs.org/wiki/ObCode,2016,,turing_tarpits; turing complete,implemented,stack-based,languages,"ObCode is a stack-based, Turing complete esoteric programming language created by User:Challenger5. It can be considered a Turing Tarpit."
Shuffle,https://esolangs.org/wiki/Shuffle,2016,,unknown computational class,unusable for programming; implemented,cell-based,languages; two-dimensional languages; thematic,"Shuffle was created by User:Enoua5 in November of 2016. It reads instructions from a ""deck of cards"" by playing the card game War. An updated 2.0 version adding a couple new features was created in June of 2021."
EntropyAssembler,https://esolangs.org/wiki/EntropyAssembler,2016,,,implemented,,languages,"EntropyAssembler, is an esoteric programming language with syntax like assembler, but datas in registers decays while programm runs(like in Entropy)."
Incident,https://esolangs.org/wiki/Incident,2016,,turing tarpits; turing complete,implemented,stack-based,languages; low-level,"Incident is a language created by User:ais523 for the CALESYTA 2016 contest. The goals of the language were to make an interesting puzzle for programmers (trying to figure out how to write anything at all in the language is decidedly nontrivial, although once you know the tricks the language is viably possible to write by hand); and to create a language which would allow programs to obey almost arbitrary restrictions on what can appear in the source (e.g. bans on certain characters, polyglotting with some other language, valid as an image / executable / save file for some other program, and the like)."
OneFuck,https://esolangs.org/wiki/OneFuck,2016,,,unusable_for_programming; implemented,,languages; brainfuck,"OneFuck, is an esoteric programming language clones brainfuck, buts here only one cell."
Kitanai,https://esolangs.org/wiki/Kitanai,2016,,,implemented,,languages,"(By the way, Kitanai means ""dirty"" in Japanese (Obviously refering to the language's syntax))"
Alex,https://esolangs.org/wiki/Alex,2016,,turing complete,implemented,stack-based,languages,"Alex is an esoteric programming language with stack-based memory like in brainfuck, but it has strange syntax, and all command must end with: "" - Alex."". This language was invented by Ronald Houkens."
Stackish,https://esolangs.org/wiki/Stackish,2016,,turing complete,,stack-based,languages,"Stackish was a venture into stack-based programming by ender_scythe in November, 2016."
DBR,https://esolangs.org/wiki/DBR,2016,,,implemented,,languages; brainfuck,"DBR(Drawing BRainfuck), it's brainfuck like language, where instead of text files are the images and text commands instead of colored pixels."
DROL,https://esolangs.org/wiki/DROL,2016,,,implemented,,languages,"DROL (Double Register Optimization Language) is a simple single-character compiled language created by Bradley Sadowsky (User:BradleySadowsky). The compiler was released under the MIT License and written in Python 2.7.12. Everything in DROL is done by manipulating two virtual registers, Register One and Register Two (somewhat similar to Deadfish). Each register has its own distinct set of commands. A key feature of DROL is its inability to handle errors: it simply ignores them (unless they pertain to loops or subroutines). DROL is currently on version 3.0.0."
ABCR,https://esolangs.org/wiki/ABCR,2016,,,implemented,queue-based,languages,"ABCR is a queue-based programming language created by Steven Hewitt.[1]  It uses three FIFO queues known as A, B, and C that store unbounded integer values, as well as a single register R that stores the result of the last operation.  Most of the commands have a different symbol for each of the three queues, and each queue serves a slightly different function."
STOD,https://esolangs.org/wiki/STOD,2016,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; low-level,"STOD (STringmODifier) is an esoteric programming language, like brainfuck, but based on string modifying."
Calculator,https://esolangs.org/wiki/Calculator,2016,,turing complete,implemented,stack-based,languages,"Calculator, is an esoteric programming language, where we are doing operations on numbers. Idea of this language was invented by Ivan Homenko."
OIL,https://esolangs.org/wiki/OIL,2016,,turing complete,implemented,cell-based,low-level; languages,"OIL is an esoteric programming language made by MDFL User:L3viathan that stands for Overly Introspective Language. It is Turing machine-like, but with random access and a couple of high-level quirks."
LAMPA,https://esolangs.org/wiki/LAMPA,2016,,,implemented,,languages,"LAMPA(A Low Level AutoMation Programming LAnguage), is an esoteric programming language with no strings, only numbers, and basic operands."
7,https://esolangs.org/wiki/7,2016,,turing complete,implemented,,languages; low-level,"7 is an esoteric programming language created by User:ais523 towards the end of 2016. It's heavily inspired by Underload, but has much more powerful input/output capabilities and a different set of commands. One major difference is that it's based entirely on combinators; unlike Underload, it doesn't have literals (although they can be simulated fairly easily)."
Starfish,https://esolangs.org/wiki/Starfish,2016,,turing complete,implemented,stack-based; cell-based,languages; two-dimensional languages,"*><> (pronounced as ""starfish"") is a stack-based, reflective, two-dimensional esoteric programming language based directly off of ><>. It was created by User:redstarcoder in 2016."
A Pear Tree,https://esolangs.org/wiki/A Pear Tree,2016,,turing complete,implemented,,languages; high-level,"A Pear Tree is a trivial derivative of Perl created by User:ais523 in 2016, mostly as a joke. It aims to mildly modify the language to make it more suitable for writing polyglots (i.e. programs that run correctly in more than one language), particularly with Python 3."
BrainInt,https://esolangs.org/wiki/BrainInt,,,,implemented,,languages; brainfuck derivatives,BrainInt is a language invented by NoOneIsHere from Programming Puzzles & Code Golf.
Voclex,https://esolangs.org/wiki/Voclex,2016,functional paradigm,unknown computational class,implemented,,languages,"Voclex is esoteric, very functional based language. Here is all is functions."
CodeFuck,https://esolangs.org/wiki/CodeFuck,,,,,,brainfuck derivatives,"CodeFuck is a variant of BrainFuck.
It avoids repetitions and adds new operators"
Cheers,https://esolangs.org/wiki/Cheers,2017,,unknown computational class,unusable for programming; implemented,stack-based,languages; thematic,Cheers is an esoteric programming language aimed at beverage-oriented programming.
Blablafuck,https://esolangs.org/wiki/Blablafuck,,,turing complete,implemented,,languages; brainfuck derivatives,"Blablafuck is an esoteric language based on Extended Brainfuck, in which commands are most used english words."
Cool,https://esolangs.org/wiki/Cool,2017,,,,,languages,"Cool (Character Object Oriented Language) is esoteric programming language made by User:IQBigBang on 3rd January 2017. 
Almost every character in this language represents some action."
ALL,https://esolangs.org/wiki/ALL,2017,,,,cell-based,languages,ALL is esoteric programming language by User:IQBigBang. It's Assembly Like Language (ALL). It's based on a lot of instructions with hexadecimal and readable value.
QaSaC,https://esolangs.org/wiki/QaSaC,2017,,unknown computational class,unimplemented,stack-based,languages,"QaSaC (""Queues and Stacks and Combinators"", the elements from which the language is built) is a cross between a stack-based concatenative language like Forth and Joy, and a graphical dataflow language like PureData."
Chaincode,https://esolangs.org/wiki/Chaincode,2017,,,implemented,,languages,Chaincode is a esoteric language by User:RomanGraef.
V (DJMcMayhem),https://esolangs.org/wiki/V (DJMcMayhem),2016,,,implemented,,golfing language; languages,"V is a 2D string-based golfing language designed by User:DJMcMayhem. It is an extension of the Vim text editor that provides many mappings to common vim-golf idioms, as well as providing new features not implemented in vim, such as compressed regular expressions, extended recording/macro abilities, new operators, and more convenient ways of taking input/output and running programs."
V (FMota),https://esolangs.org/wiki/V (FMota),2007,,turing complete,implemented,,languages; brainfuck derivatives,V is an esoteric programming language made by Francisco Mota circa 2007. It is called V after the sequence of instructions \/.
MiniBitMove,https://esolangs.org/wiki/MiniBitMove,2017,,,implemented; unusable for programming,cell-based,languages,"MiniBitMove is an language with only two-commands. It takes two inputs, the code and the data tape. Both consist of ones and zeros."
Tick,https://esolangs.org/wiki/Tick,2017,,,implemented,cell-based,languages,Tick is a esolang created in 2017. It has only 4 commands and an infinite memory tape. It is made to also ignore non-command characters. It is an incomplete TrivialBrainfuckSubstitution.
InfiniTick,https://esolangs.org/wiki/InfiniTick,2017,,,implemented,cell-based,languages,"InfiniTick is an esolang created in 2017. It is a descendant of the Tick language. It twist is that the program runs in an infinite loop, making it hard to stop. It runs on an infinite memory of tape cells."
Campfire,https://esolangs.org/wiki/Campfire,2017,,unknown computational class,,stack-based,languages; low-level,"Campfire: an esoteric programming language which is just a heap of branches
- and you'll want to set them on fire."
Silberjoder,https://esolangs.org/wiki/Silberjoder,2016,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,"Silberjoder is a language created by User:Quintopia for the CALESYTA 2016 contest. The design metagoals were to simultaneously satisfying User:Boily's desires for another Aubergine derivative while outraging everyone else (including, possibly, the contest prize selection committee) with another Brainfuck derivative. The design goals were to mesh, as seamlessly as possible, the feature set, syntax, and semantics of Self-modifying Brainfuck with those of Aubergine. Most importantly, all extant programs in either language should also be valid Silberjoder programs with the same behavior."
Brainfuck+3,https://esolangs.org/wiki/Brainfuck+3,2017,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,Brainfuck+3 is like brainfuck but it has a bidimensional space and it has 3 more commands.
( ͡° ͜ʖ ͡°)fuck,https://esolangs.org/wiki/( ͡° ͜ʖ ͡°)fuck,2017,,turing complete; turing tarpits,implemented,,languages; brainfuck derivatives,( ͡° ͜ʖ ͡°)fuck is a derivate of Brainfuck+3 but with lenny faces.
Y86,https://esolangs.org/wiki/Y86,,,,implemented,cell-based,languages; low-level,Y86 is a toy RISC CPU instruction set for education purpose.  It was invented before 1996 as a companion for the book The Art of Assembly Language to illustrate the basic principles of how a CPU works and how you can write programs for it.
Drift,https://esolangs.org/wiki/Drift,2017,,,implemented,stack-based,languages; high-level,"Drift is a procedural, ""stack-based"" programming language created by Harald Sorenson in 2017. The main premise of the language is where every variable is a stack (filo) or queue (fifo) of positive integers."
MMIX,https://esolangs.org/wiki/MMIX,2004,,,implemented,cell-based,languages; low-level,"MMIX is a computer architecture designed by Donald Knuth.  Knuth is writing a grand monography The Art of Computer Programming, and presents example subroutines and programs in this architecture."
BitCycle,https://esolangs.org/wiki/BitCycle,2017,,turing_complete,implemented,queue-based,languages; two-dimensional_languages; low-level,"BitCycle is a two-dimensional Turing-complete language that works by moving bits around a playfield, inspired by ><> and Bitwise Cyclic Tag."
SUL,https://esolangs.org/wiki/SUL,,functional paradigm,,,,languages,The SUL (simple unified language) programming language consists of a very uniform syntax while still offering a good amount of features. It was created by User:Douira.
Nairb,https://esolangs.org/wiki/Nairb,2017,,,works-in-progress,,languages; brainfuck derivatives,Nairb is a brainfuck derivative by User:Ivancr72.
Fluffle Puff,https://esolangs.org/wiki/Fluffle Puff,2014,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck equivalents; thematic,Fluffle Puff (also known as BrainPuff or FluffleFuck) is an esoteric programming language created by juju2143 in January 2014. It is a simple Brainfuck variant designed to be similar to the speech of My Little Pony: Friendship is Magic fan character Fluffle Puff.
Nors,https://esolangs.org/wiki/Nors,2017,,turing complete,implemented; output only,,languages,"Nors is a Zero Instruction Set Computer created by Calvin Games on February 14, 2017. It is Turing complete because it is equivalent to a 2-tag system."
Graphical Brainfuck,https://esolangs.org/wiki/Graphical Brainfuck,2017,,turing complete; turing tarpits,implemented,cell-based; multi-dimensional languages; graphical output,languages; brainfuck derivatives,Graphical Brainfuck (GBF) is a esoteric programming language created by juju2143 in Febuary 2017. It is a multi-dimensional extension of Brainfuck that maps each triad of cells to a graphical screen.
Aya,https://esolangs.org/wiki/Aya,,,,,stack-based,languages; golfing language,"Aya is a stack based programming language originally intended for code golf and programming puzzles. Unlike other stack-based programming languages, it supports user-defined types, macro-like function definitions, key-value pair dictionaries, and natural variable scoping rules allowing for more complex programs and data structures."
Implieses,https://esolangs.org/wiki/Implieses,2017,,turing complete,implemented; output only,,languages,"Implieses is a Zero Instruction Set Computer created by Calvin Games and rdococ on February 16, 2017. It is Turing complete because it is equivalent to a 2-tag system."
Mostawesomeprogramminglanguage,https://esolangs.org/wiki/Mostawesomeprogramminglanguage,2017,,turing complete,unimplemented,stack-based,languages,"Mostawesomeprogramminglanguage is an esoteric programming language created by Matthew Dittloff in 2017, as an alternative to the popular language Chicken.  Inspired by the massive popularity of that language, he created an improvement to the language."
Rain,https://esolangs.org/wiki/Rain,2017,,turing complete,implemented,,two-dimensional languages; languages,Rain is a two-dimensional fungeoidal esoteric programming language invented in 2017 by dok with the goal of being difficult to write while remaining possible to compile.
Trajedy,https://esolangs.org/wiki/Trajedy,2017,,turing complete,implemented,,languages; two-dimensional languages,"Trajedy is a 2-dimensional language that involves a pointer moving through a square grid. Instructions in the grid may change the direction of the pointer or perform input/output. It is similar to Befunge in this way, except that the pointer moves continuously and non-orthogonal directions are possible. The instruction symbols ,./\ are similar to their counterparts in PATH."
Chaingate,https://esolangs.org/wiki/Chaingate,2017,,unknown computational class,usability unknown; no io; implemented,cell-based,languages; low-level,"Chaingate is a family of esoteric programming languages created by User:ais523 in 2017. The main inspirations were Incident and Malbolge, although the language is somewhat more elegant than either. The language also fits into ZISC form; however, its single command is based on primitives that exist in many high-level languages but not typical assembly languages, so although it admits short implementations, it does not make for as small an executable as most ZISCs do. :≠ is also relevant as an influence; programming in :≠ and in Chaingate is fairly similar, because both languages have reversible data storage and a method of defining functions that can be turned on and off, but not recursed into."
A-gram,https://esolangs.org/wiki/A-gram,,,,,,languages,"a-gram is an esoteric programming language that only accepts Unicode characters with ""gram"" in their name as valid characters."
ChuckScript,https://esolangs.org/wiki/ChuckScript,2016,,,implemented,,joke languages; languages,"ChuckScript is an esoteric programming language designed by Andrés Ortiz based on the concepts of Unary, where all the code is written using only zeroes. The language was designed as a joke on how Chuck Norris code."
Oracle,https://esolangs.org/wiki/Oracle,2017,,,,,,"Oracle is an esoteric language by User:Rdococ. It's like any other language, except it has a halting oracle which takes in a function and returns whether the function will halt or not. While it is super-turing complete in the sense that it can solve the halting problem for both Turing complete programs and Oracle programs, I honestly didn't find it to be that particularly useful, except for maybe optimizing boolean-returning functions."
QWOP,https://esolangs.org/wiki/QWOP,2017,,,,,,"QWOP is an esolang by User:Rdococ. As the name suggests, it uses four characters: Q, W, O and P. All others are ignored....well, except when following the letters W and P."
Poohbear,https://esolangs.org/wiki/Poohbear,2017,,turing complete,implemented,cell-based,languages,"Poohbear is a cell-based language largely inspired by brainfuck. It has a maximum integer value of 255, and 30,000 cells. The original intention of Poohbear was to be able to send messages that would, to most, be completely indecipherable."
LINR,https://esolangs.org/wiki/LINR,,,,usability unknown; output only; implemented,,languages; low-level,LINR is an interpreted language invented by Sam Lord in March 2017. The name alludes to the unconventional order in which the written code may be run.
WysiScript,https://esolangs.org/wiki/WysiScript,2017,,turing complete,implemented,,languages,"WysiScript is a programming language in which programs are formatted (rich) text, and that completely ignores the characters in the input, caring only about their formatting.  The language was created for the April Fool conference SIGBOVIK 2017."
Aceto,https://esolangs.org/wiki/Aceto,2017,,turing complete,implemented,cell-based; stack-based,low-level; two-dimensional languages; languages,"Aceto is an esoteric programming language made by L3viathan, designed according to the wishes of @sarnthil. The name has no meaning other than being a reference to OIL. It is a stack-based language where the pointer moves on a simulated Hilbert curve."
Brainfuck Substitutor,https://esolangs.org/wiki/Brainfuck Substitutor,2017,,turing complete; turing tarpits,implemented,,languages; brainfuck derivatives,Brainfuck Substitutor (also known as BF Substitutor or BFS) is an extension of Brainfuck that allows you to substitute parts of the code for variables.
But Is It Art?,https://esolangs.org/wiki/But Is It Art?,2017,declarative paradigm,turing complete; turing tarpits,implemented,,languages; two-dimensional languages,Content div not found
Hanoiing,https://esolangs.org/wiki/Hanoiing,,,,,,languages,A language made by User:Beefster based on the Towers of Hanoi puzzle.
Braingolf,https://esolangs.org/wiki/Braingolf,2017,,,implemented,stack-based,languages; golfing language,"Braingolf is a stack-based esoteric language designed by Programming Puzzles and Code-Golf user, Mayube. The name originates from brainfuck, as it was the original inspiration for the language, however the language differs greatly to brainfuck and is more comparable to Fish, despite not being a two-dimensional language."
Hopscotch,https://esolangs.org/wiki/Hopscotch,2017,,,,,languages,Hopscotch is a simple esoteric programming language made by User:Asa-z.
TEWELSWAC,https://esolangs.org/wiki/TEWELSWAC,,,,implemented,,languages; high-level,"Pronounced tools-whack, TEWELSWAC is an idea for a programming language by User:Timtomtoaster. As you can see, I'm not great at naming things (look at eWagon). The name stands for The Esolang Where Every Line Starts With A Colon. I will likely implement it in the future, but you can make an interpreter/compiler too!"
Klein,https://esolangs.org/wiki/Klein,2017,,,implemented,stack-based‏,languages; two-dimensional languages,Klein is a 2D esoteric language with flexible topology designed by Stack Exchange user Wheat wizard.
Decimal,https://esolangs.org/wiki/Decimal,,,,,stack-based,languages,"Decimal, also called 09D, is an esoteric stack-based programming language that uses the characters 0 through 9 and D. Whitespace is ignored. Any other characters in the source code are simply printed."
Micro,https://esolangs.org/wiki/Micro,2017,functional paradigm,,,stack-based,languages; low-level,This language was created by user:Raddish0 as an attempt to make a code golfing language that is easier to understand than Golfscript.
VTFF,https://esolangs.org/wiki/VTFF,,,turing complete,,,languages,"VTFF is an esoteric programming language created by User:Programmer5000. It uses only 2 characters, 0x0b and 0x0c, which are Vertical Tab, and Form Feed respectively."
Footsteps,https://esolangs.org/wiki/Footsteps,2017,,,usability unknown; no io; implemented,queue-based,languages,"Footsteps is an esoteric programming language created by User:ais523 in 2017. The aim was to create a ZISC that, rather than being very low-level (and thus easy to implement in machine code), makes use of more advanced data structures (such as lists) in order to be able to make the language's rule even simpler. The language is something of a cross between SMITH, ResPlicate, and a tag system."
Conedy,https://esolangs.org/wiki/Conedy,2017,,unknown computational class,implemented,,languages; two-dimensional languages,"Conedy is a simplification / tarpitification of Trajedy, created in 2017 by User:ais523. It's a two-dimensional language in which movement of the instruction pointer is the only data storage within the program; despite the bounded playfield, infinite storage is achievable by the fact that the instruction pointer can take on rational, rather than merely integral, coordinates."
Theoretica,https://esolangs.org/wiki/Theoretica,,,,,stack-based,languages,"Theoretica is a theoretical language. No accurate-to-spec implementation of Theoretica can be produced on a physical machine, as an implementation would require not only infinite memory, but also infinite runtime."
Integ,https://esolangs.org/wiki/Integ,2017,,turing complete,implemented,cell-based,languages; low-level,Integ is a tape-based esoteric programming language designed by User:kerbal in 2017. The current version is 1.3.
FFM/FFB,https://esolangs.org/wiki/FFM/FFB,2017,declarative paradigm,finite state automata,implemented,cell-based,languages,"Foxrabbit's Finite-state Map and its compiled form, Foxrabbit's Finite-state Binary, are mappings for a finite-state automaton. They define the rules and relationships for each state.see below"
PNID,https://esolangs.org/wiki/PNID,2017,,turing tarpits,implemented,cell-based,low-level; languages; brainfuck,"PNID means ""Previous, Next, Increment, Decrement"" and is a superset of Brainfuck."
Turing Tumble,https://esolangs.org/wiki/Turing Tumble,2017,,turing complete,implemented,cell-based,languages; two-dimensional languages; low-level,"Turing Tumble is a mechanical computer created by Paul Boswell in 2017, operated by marbles. It is targeted for education, but with a big enough board could allow to build any contraption and is Turing Complete."
Number Factory,https://esolangs.org/wiki/Number Factory,2017,,,implemented,stack-based; queue-based,languages; thematic,"Number Factory:
You've been called upon to program a robot to work at the Number Factory. You'll need to direct the bot to move from one room to another to create the correct numbers as desired by... you, I guess; the Number Factory hasn't had any customers in years. To write a program for the robot, you write the sequence of commands for the robot to follow. The rooms operate themselves as the robot moves numbers around the factory. While programming, you need to keep track of the robot's location and what numbers each room contains."
Triple Threat,https://esolangs.org/wiki/Triple Threat,2017,,turing complete,implemented,stack-based,languages,"Triple Threat (hereafter TT) is a stack-based esolang. Every command modifies and juggles the numbers in one or two of three stacks. Each stack is capable of different actions, so juggling values around the circle is critical to getting anything done."
Magic-1,https://esolangs.org/wiki/Magic-1,2005,,,implemented,,languages; low-level,"Magic-1 is a unique home-built microcomputer with a custom CPU.  It was designed and developped mainly by Bill Buzbee.  The hardware was built between 2005 and 2006, the software mostly between 2005 and 2009."
Hardfuck,https://esolangs.org/wiki/Hardfuck,2017,,turing complete; turing tarpits,,cell-based,languages; brainfuck_derivatives; low-level,Hardfuck is a Brainfuck derivative created by User:Zayne (why am I not surprised) and as the name suggests it is supposed to be harder than Brainfuck.
MIX (Knuth),https://esolangs.org/wiki/MIX (Knuth),,,,implemented,,languages; low-level,"MIX is a computer architecture created by Donald Knuth.  Knuth is writing a grand monography The Art of Computer Programming, and in older editions of that book, he used to present example subroutines and programs in this architecture."
@,https://esolangs.org/wiki/@,2017,,,implemented,,golfing language; languages,"@ is a golfing language created and maintained by User:Gemdude46. It is still in its very early stages. An interpreter, vague documentation and some examples are available at its GitHub repo."
Comefrom0x10,https://esolangs.org/wiki/Comefrom0x10,2016,,turing complete,,,languages; high-level,"Comefrom0x10 (pronounced ""come from sixteen"", often abbreviated Cf0x10) is a language based on having only one flow control control statement, the comefrom statement."
Glava,https://esolangs.org/wiki/Glava,2017,,turing complete,implemented,,languages,"Glava is an esoteric programming language, built on top of a Java base, that is designed to be effective in code golf competitions. It was designed and implemented by ZekNikZ in 2017."
Ly,https://esolangs.org/wiki/Ly,2017,,,implemented,stack-based,languages,Ly is a stack-based esoteric programming language inspired by ><> created by User:LyricLy in 2017.
The Great Spell,https://esolangs.org/wiki/The Great Spell,2017,,,unimplemented,deque-based,languages; thematic,"The Great Spell is an esolang in which you must create a powerful magic spell to create the effect you desire. To do this, you can create smaller spells with simpler effects to build up to your Great Spell."
SMATIMU,https://esolangs.org/wiki/SMATIMU,2017,,turing complete,output only,,languages,"SMATIMU, or the Self-Modifying Application That Is Mildly Useful, is an extension to the SMATINY language with the intention of making it slightly more useful for programming in. It was created in 2017 by User:Scoppini."
Dependently Typed Binary Lambda Calculus,https://esolangs.org/wiki/Dependently Typed Binary Lambda Calculus,2017,functional paradigm,turing complete,implemented,,languages,"Dependently Typed Binary Lambda Calculus is a modification of Binary Lambda Calculus which adds type dependency, as well as features useful for code reuse."
Vowels (2017),https://esolangs.org/wiki/Vowels (2017),2017,,turing complete,implemented,stack-based,languages; thematic,Not to be confused with vowels (2011).
Explode,https://esolangs.org/wiki/Explode,,,unknown computational class,works-in-progress,cell-based,languages,"Explode is a tape-based esoalng created by Stephen S. Its Turing-completeness is currently unproven. It is still a WIP language. For more information, see the Github link."
Typespam,https://esolangs.org/wiki/Typespam,2017,,unknown computational class,implemented,cell-based,languages,"Typespam is a language created by TheZipCreator. 
It's a cell-based language similar to Brainfuck but it has some important changes."
(P™TM™)™,https://esolangs.org/wiki/(P™TM™)™,,,turing complete,implemented,,languages,"(P™TM™)™ or (PowerPoint™ Turing Machine™)™ is an esoteric programming language created by Tom Wildenhain, which runs completely in Microsoft PowerPoint. It uses punch cards for the programming and requires manual clicking of the mouse to step trough the program. It is basically infinitely expandable, and seems to be fully Turing-complete, as it can basically be run as binary, and could support every program that can be created on a traditional binary computer. Expanding the interpreter can be hard, as it requires expanding every aspect of the punch card, which run over a tape, which can also be expanded infinitely."
MashedPotatoes,https://esolangs.org/wiki/MashedPotatoes,2017,,unknown computational class,implemented,,languages,MashedPotatoes is a register-based esoteric programming language written by User:Mercerenies that is designed to look like other languages at a glance. It borrows many syntactic constructs from other languages but uses them for unusual purposes.
AsciiDots,https://esolangs.org/wiki/AsciiDots,2017,,turing complete,,,languages; two-dimensional languages,By Aaron Janse
TheSingularity,https://esolangs.org/wiki/TheSingularity,2017,,,,,languages,"TheSingularity is an esoteric programming language created by User:SoundOfScripting that only gives the programmer one constant, called ""TheSingularity"", to work with."
InSpace,https://esolangs.org/wiki/InSpace,2017,,,unimplemented,,languages,InSpace is a programming language that was made by Zayne for a Code Golf contest (that failed horribly).
(0),https://esolangs.org/wiki/(0),2017,,,no io; unimplemented,,languages,(0) is a family of programming languages by David Madore defined in the 2017-08 blog entry Un peu de programmation transfinie.
B1nary,https://esolangs.org/wiki/B1nary,,,turing complete,,,languages,"B1nary is a language developed while UtilityHotbar was attempting to create a tally/prediction machine for use as an example introduction to programming. A combination with a desire to see what only two data values could make, a love of complex looking strings of 0s and 1s and a rudimentary attempt at ""entanglement"" (the state of the first program affects the state of every other program until the interpreter is restarted) led to several other features and the creation of B1nary."
Skastic,https://esolangs.org/wiki/Skastic,2017,functional paradigm,turing complete,implemented,,languages; two-dimensional languages,"Skastic is a visual, functional programming language where source code is contained in image files (.png). Skastic programs contain nodes and edges representing an abstract syntax tree."
Maybe Later,https://esolangs.org/wiki/Maybe Later,2017,,turing complete,implemented,,languages; high-level,"Maybe Later is a high level esoteric programming language that revolves around events, rather than a more traditional flow of control, developed by user:TehFlaminTaco. It's syntax is strongly inspired by both Lua and Javascript."
TEWNLSWAC,https://esolangs.org/wiki/TEWNLSWAC,,,,implemented,,languages; high-level,"Pronounced toons-whack, TEWNLSWAC is an idea for a programming language by User:Zseri. It's inspired by TEWELSWAC, but uses a very different syntax.
The name stands for: The Esolang Where No Line Starts With A Colon."
Javagrid,https://esolangs.org/wiki/Javagrid,,,,implemented,,languages; two-dimensional languages,Javagrid is a two dimensional language about programming in a grid.
Rev,https://esolangs.org/wiki/Rev,2017,,,,stack-based,languages,"Rev is a small, stack-based language based on Mouse."
WCDA,https://esolangs.org/wiki/WCDA,,,,,,languages,"WCDA (acronym removed) is a golfing esoteric programming language made by User:SoundOfScripting. The specifics of the language are constantly changing, so it is hard to have an accurate description of all of its abilities. WCDA is built on the idea that it is community based; people can add whatever they want to it.
WCDA's command list is stored on User:SoundOfScripting's google drive at this page. The command list currently only supports the official Node.js interpreter (which has not been released yet)."
XTW,https://esolangs.org/wiki/XTW,2017,object-oriented_paradigm,,implemented,,languages; high-level,"Pronounced eks-too-whack, XTW is the successor of TEWNLSWAC."
Minim,https://esolangs.org/wiki/Minim,2017,imperative paradigm,turing complete; bounded-storage_machine,implemented,,languages; low-level,"Minim is a minimal, low-level, interpreted programming language designed by KakkoiiChris (formerly TheNewComposer). It was inspired by the minimal nature of other esolangs, with a memory access syntax inspired by python's index and slice notation, while retaining many of the standard operators that languages like C have, in order to be somewhat useful. While there is a bit of syntactical sugar here and there to make writing programs more developer friendly, the goal was always to have just barely enough language features so that it was still a reasonable challenge to do so."
Countdown,https://esolangs.org/wiki/Countdown,,,finite state automata,implemented; output only; unusable for programming,,languages,"Countdown is a Esoteric programming language.
Countdown was made to Mix rhymes, random numbers and abbreviations into commands.
Made in 15 minutes, the OCT is the REAL countdown. 
The code is here:"
Fetlang,https://esolangs.org/wiki/Fetlang,,,turing complete,implemented,,languages; joke languages; thematic,"Fetlang is a statically typed, procedural, esoteric programming language and reference implementation. It is designed such that source code looks like poorly written fetish erotica."
Focus,https://esolangs.org/wiki/Focus,,,,,,languages,"Focus is the temporary name for a work in progress esoteric programming language made by User:SoundOfScripting. In Focus, memory can only be accessed from the correct program location and with the correct shift."
TwoFiftyFive,https://esolangs.org/wiki/TwoFiftyFive,2017,,push-down automata,,,languages,TwoFiftyFive is an esoteric programming language by User:SoundOfScripting with only two instructions and limited memory.
Tables,https://esolangs.org/wiki/Tables,,,,works-in-progress,,stubs; languages,No description available
Countercall,https://esolangs.org/wiki/Countercall,2017,,unknown computational class,usability unknown; no io; unimplemented,stack-based,languages; low-level,"Countercall is an esoteric programming language created by User:ais523 in 2017. The only data storage is formed of one (global) counter, and the procedure call stack."
DGOL,https://esolangs.org/wiki/DGOL,2017,,,implemented,,languages,DGOL (Directed Graph Oriented Language) is an imperative programming language in which all values are pointers to nodes within directed graphs.
Olvasható,https://esolangs.org/wiki/Olvasható,2006,,turing complete,implemented,,languages,"Olvasható (also sometimes called Olvashato) is a general purpose toy language created by User:b_jonas.  The olvasható source is compiled to a Prolog program and a Standard ML program, the two behaving identically."
Lost,https://esolangs.org/wiki/Lost,2017,,,implemented,stack-based‏,languages; two-dimensional languages,"Lost is a 2-Dimensional language where the instruction pointer starts at a random location, moving in a random direction.  Despite this, Lost is still capable of creating completely deterministic programs.  Lost was designed by Programming Puzzles and Code-Golf user WheatWizard"
Geo,https://esolangs.org/wiki/Geo,2003,,turing complete,output only; implemented,,languages,"Geo is a simple interpreted toy programming language.  I, User:b_jonas created it in 2003 for a programming course that required implementing a parser using yacc and lex.  I published it to the world around 2006."
Scan,https://esolangs.org/wiki/Scan,2003,,push-down automata,output only; implemented,,languages,"Scan is a toy programming language.  I, User:b_jonas created it in 2003.  I published it to the world around 2006."
Crement,https://esolangs.org/wiki/Crement,2017,,turing complete,no io; unimplemented,,languages,Crement is a programming language invented by User:Zzo38 and named by User:Ais523.
Basicfuck,https://esolangs.org/wiki/Basicfuck,,,turing complete,implemented,,languages; low-level,"Basicfuck is an esoteric programming language by User:Rdococ. Contrary to what its name might suggest, it is not a brainfuck derivative - rather, it is designed to be compiled into brainfuck fairly easily while hiding as many temporary variables from the program as possible."
Extensible Crement,https://esolangs.org/wiki/Extensible Crement,2017,,,,,languages,"Extensible Crement is an programming language based upon Crement, invented by User:Zseri."
Bauberqueue,https://esolangs.org/wiki/Bauberqueue,2017,,turing complete,implemented,queue-based,languages; low-level,Bauberqueue is a queue-based language created by User:Quintopia in 2017. It takes the data storage and syntax principles of Aubergine but replaces the single tape with a list of queues. It replaces Aubergine's conditional jump with a Resplicate-like subqueue duplication command.
Alice,https://esolangs.org/wiki/Alice,2017,,turing complete,implemented,stack-based‏,languages; two-dimensional languages,"Alice is a two-dimensional, stack-based programming language developed by user:Martin Ender with a lot of help from user:Sp3000. It was designed as a feature-rich Fungeoid with a novel twist on how mirrors affect control flow."
BuzzFizz,https://esolangs.org/wiki/BuzzFizz,2017,,linear bounded automata,implemented,,low-level; languages,"BuzzFizz is an esoteric programming language created by User:ais523 in 2017. It's a typical imperative programming language that aims to be low-level enough to implement easily, powerful enough for it to be fairly clear how to implement most popular problems, and yet not powerful enough to be Turing-complete – although in theory it has an infinite amount of storage, it can only retrieve a finite subset of it."
Tableaux,https://esolangs.org/wiki/Tableaux,2017,declarative paradigm,,unimplemented,cell-based,languages; high-level,"Tableaux is an esoteric programming language created by User:ais523 in 2017. It aims to be the equivalent of a ""Turing tarpit"" for a very high-level model of programming. In particular, it aims to make it possible to write very succinct/simple programs for what are fundamentally very difficult problems, despite having only three commands. Unfortunately, this comes at the cost of incredibly abstract semantics which is hard to implement."
Neg,https://esolangs.org/wiki/Neg,,,turing complete,,,languages,"Neg is a esoteric programming language made by User:SoundOfScripting that requires the programmer to go against mathematics in order for it to be turing complete.
Neg uses prefix notation and a variety of ""well-crafted"" built in functions, carefully made to force one to break mathematics to do anything useful (hopefully). Whitespace can be used to separate things for clarity.
Values in Neg are (usually) integers."
PL/MIX,https://esolangs.org/wiki/PL/MIX,,,,,,languages,"PL/MIX would have been a programming language that runs on the MIX computer.  Donald Knuth would have described and implemented PL/MIX in The Art of Computer Programming volume 5 (chapter 10: Parsing), in the future of the alternate universe where he would have written volume 4 and 5 so quickly that they appeared before the MIX computer became obsolete."
Tampio,https://esolangs.org/wiki/Tampio,2017,,,implemented,,languages,Tampio is a programming language whose syntax tries to resemble the Finnish language.
Wordless,https://esolangs.org/wiki/Wordless,2018,,,unimplemented,,languages; high-level,"Wordless is a high-level language created by User:DominoPivot, in which identifiers cannot contain word characters."
Metatape,https://esolangs.org/wiki/Metatape,2017,,turing complete,implemented,cell-based; multi-dimensional languages,languages; low-level,"Metatape is an imperative esoteric programming language with just two data types: null and tape. A pointer moves along an infinite tape, which is initialized to null values. The pointer can then ""enter"" a cell, replacing the null value with a new tape, which is also initialized to null values. While many esoteric programming languages feature a minimalist instruction set while allowing such high-level abstractions as integers or strings, Metatape only allows data to be encoded in the structure of nested tapes."
TaiDoKu,https://esolangs.org/wiki/TaiDoKu,2018,,,implemented,cell-based,languages; two-dimensional languages; low-level,"TaiDoKu is a Esoteric programming language project since 2018.  It looks extremely normal at first glance, but is actually super tedious to interpret, totally insane to compile, and almost impossible (but cool, of course) to program."
Grawlix,https://esolangs.org/wiki/Grawlix,2017,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,"This is the horrible Grawlix Programming Language - created by User:DMC with the intent of introducing enhancements to brainfuck that still uphold it's spirit.

grawlix – Cartoonist's term for random symbols and punctuation used to represent swearing."
Triangularity,https://esolangs.org/wiki/Triangularity,2018,functional paradigm,,implemented,,languages,Triangularity is a stack-based esoteric programming language created in early 2018 by PPCG user Mr. Xcoder.
The Waterfall Model,https://esolangs.org/wiki/The Waterfall Model,2018,,turing complete,output only; implemented,,languages; low-level,"The Waterfall Model is an esoteric programming language (or possibly a computational model) created by User:ais523 in 2018. It can be seen as a simplification of counter machines along different lines from The Amnesiac From Minsk; however, similarly to that language, it's intended as a source language for proving the Turing-completeness of other languages by compiling The Waterfall Model into them. Historically, though, it was originally created as a derivative of Kangaroo (and the first informal proof of its Turing-completeness was by analogy with the proof for Kangaroo, although there are simpler and more rigorous proofs available)."
NoRAL,https://esolangs.org/wiki/NoRAL,2017,,,implemented,,languages; low-level,"No-Register Assembly Language
- A simple assembly-style language based on a hypothetical processor that has no internal registers. Created by User:DMC"
Bitter,https://esolangs.org/wiki/Bitter,2017,,turing complete,implemented; no io,cell-based,languages; brainfuck derivatives; low-level,"Like Brainfuck - only much, much, worse.The blame rests solely with User:DMC."
Wumpus,https://esolangs.org/wiki/Wumpus,2018,,turing complete,implemented,stack-based‏,languages; two-dimensional languages,"Wumpus is a recreational, two-dimensional programming language, where the instruction pointer moves on a triangular grid (and to the best of the author's knowledge, the first such language). It's a language of the Fungeoid variety, in that it is primarily stack-based, allows the source code to be modified at runtime and takes several inspirations from Fungeoids that came before it, primarily Befunge itself and ><>. However, Wumpus also brings a number of new features to the table (in addition to the triangular grid), such as 20 registers which are arranged around the faces of an icosahedron."
Uyjhmn n,https://esolangs.org/wiki/Uyjhmn n,2018,,turing complete,implemented,,languages; high-level,Uyjhmn n is a programming language that was written in Visual J# 2005 by User:Truttle1. (Why Visual J#? Well... why not?) Uyjhmn n was designed to annoy the user by combining verbose syntax with a terrible looking IDE that rushes the user. It was named after the gibberish that gets typed when you bang your head on the keyboard out of frustration.
Ende,https://esolangs.org/wiki/Ende,2018,object-oriented paradigm,,implemented,queue-based,languages,Ende is an esoteric programming language. It is a modern object-oriented language inspired by Glass and JavaScript that has a rich prototype-based object model and (un)intuitive queue-based semantics. Some of its concepts are also borrowed from the Sve programming language.
Backpackr,https://esolangs.org/wiki/Backpackr,,,unknown computational class,implemented,stack-based,languages,"backpackr is a stack-based themed language that uses a two-dimensional plane of stacks to store information. The backpacker is a pointer with a bag (an additional stack) that can move around in the two dimensional stack space, placing and picking up integers."
Pepe,https://esolangs.org/wiki/Pepe,2017,,turing_complete,implemented,stack-based,languages; low-level; thematic,Pepe is a programming language inspired by the Pepe meme made by PPCG user Soaku.
IOTA-C0,https://esolangs.org/wiki/IOTA-C0,2018,,turing complete,implemented,cell-based,languages,"IOTA-C0 is a processor specification created by User:Enoua5 in 2018. It was meant to work entirely off of computational RAM, its only native instruction being to copy the value in one memory address into another memory address. There were a few decisions in the creation of this specification that would make the IOTA-C0 very impractical to build, though it does make the programming a little easier."
RTFM,https://esolangs.org/wiki/RTFM,,,,,,languages,RTFM (also known as F^3) is an esoteric programming language made by User:TeslaX93. The assumption of this language was the desire to encourage the programmer to frequently use the documentation.
Cixl,https://esolangs.org/wiki/Cixl,2017,,turing complete,implemented,stack-based,languages,"Cixl is a minimal, decently typed scripting language for embedding in and extending from C. Cixl shares many ideas with C, Forth, Common Lisp, Perl and Lua; as well as the hacker mindset that unites them. The language is implemented as a straight forward 3-stage (parse/compile/eval) interpreter that is designed to be as fast as possible without compromising on simplicity, transparency and flexibility; combined with a C code generator for compiling native executables."
Alphabet Stew,https://esolangs.org/wiki/Alphabet Stew,2018,,turing complete,implemented,,languages; brainfuck derivatives; low-level,Brainfuck derivative using only letters (a – z) Created by User:DMC
RAM0,https://esolangs.org/wiki/RAM0,,,turing tarpits,no io; implemented,cell-based,languages; low-level,"RAM0 is a computational model, created by Schönhage in 1990. It's notable for consisting of just a few basic commands that always do the same thing and take no parameters, plus flow control, as is used in many esoteric programming languages. However, its memory storage is based on an addressable RAM, rather than a tape (as is used by many imperative tarpits, such as P'')."
I/D machine,https://esolangs.org/wiki/I/D machine,2018,,turing tarpits,no io; implemented,cell-based,languages; low-level,"The I/D machine is a Turing-complete esoteric programming language and computational model created by User:ais523 in 2018, inspired by RAM0 and Three Star Programmer. It can be viewed as either a Turing tarpit with just two commands (neither of which takes arguments), thus being simpler than all known BF instruction minimalizations (although it does not support I/O); or as a particular OISC, with one command that takes an argument."
Hatemath,https://esolangs.org/wiki/Hatemath,2018,,,implemented; output only; total; unusable for programming,,languages,"hatemath is an esoteric programming language that was created by Saketh Suresh in 2018. The language uses 8 commands, 1 for printing, 3 for telling the type of variable and the other 4 for manipulating the variable."
TLOWScript,https://esolangs.org/wiki/TLOWScript,2018,,,output only; implemented,,languages,TLOWScript is a programming language designed to meet the following criteria:
`LML,https://esolangs.org/wiki/`LML,,,,implemented,,languages; brainfuck derivatives,"`LML, pronounced as “elemel”, is an esoteric programming language made by Saketh Suresh (User:sane_theinsane) in 2018. The language uses 8 commands. `LML works with a list called LI and a variable called X having a default value of 0. Out of the 8 commands, 2 are for modifying X, 3 for adding elements to LI, 1 for input, 1 for reseting X and the last one for printing the elements in LI."
ZTOALC L,https://esolangs.org/wiki/ZTOALC L,2018,,,implemented,,languages,"A ZTOALC L program starts with a line containing a positive integer, followed by a number of lines containing instructions. There is an instruction pointer (IP), which is initially the number at the first line of the program. Until the IP becomes 1, the following is repeated: The instruction at line IP is executed (if this instruction exists), and consecutively IP is either divided by 2 if it is even, or it is multiplied by 3 and increased by 1 if it is odd."
Advanced Brainfuck,https://esolangs.org/wiki/Advanced Brainfuck,2018,,,,,brainfuck derivatives; languages,"The Advanced Brainfuck is an extension of the brainfuck programming language. It adds the ability to switch to ""file mode""."
RANDo,https://esolangs.org/wiki/RANDo,,,,total; unusable for programming; implemented,,languages,Language RANDo was created User:Kamish.
Ases,https://esolangs.org/wiki/Ases,2018,,finite state automata,implemented,,languages; low-level,"Ases (Assembly esotérico, or in English ""esoteric Assembly"") is an esoteric programming language developed by a Brazilian called Luiz Felipe.
The objective of the esolang is to be as functional as possible in order for it to be possible to develop more complex algorithms but with limitations in order to turn it into a challenge."
Cookie Cutter,https://esolangs.org/wiki/Cookie Cutter,2018,,unknown computational class,unimplemented; usability unknown,,languages; two-dimensional languages,Cookie Cutter is a two-dimensional analog programming language.
CopyPasta Language,https://esolangs.org/wiki/CopyPasta Language,2018,,turing complete,implemented,,languages; thematic,CopyPasta Language is an esoteric programming language created by User:Rerednaw in 2018. This programming language refers to the CopyPasta meme. The purpose of this programming language is to facilitate the practice of CopyPasta.
YEOOIIOOIOA,https://esolangs.org/wiki/YEOOIIOOIOA,2018,functional paradigm,turing complete,unimplemented,,languages,"YEOOIIOOIOA is an esolang based on μ-recursive functions and binary strings, invented in April 7, 2015 and revamped in April 27, 2018 by User:Arseniiv."
OM,https://esolangs.org/wiki/OM,2018,,turing complete,implemented,,languages; high-level,"OM stands for ""Only Macros"". Everything that happens in OM happens because of a macro being evaluated. Because of this, there is no distinction between code and data in OM. OM was inspired by LISP and Wolfram and is similar to ///."
Procedural Footnote Language,https://esolangs.org/wiki/Procedural Footnote Language,,,turing complete,implemented,,languages,"Procedural Footnote Language (PFL) is a system of adding structured footnote objects to a text file. Through a system of tags/delimiters and footnote definitions, complex logic can be created, generating either a static document or using user input. The original language specification was created by Daniel Myers."
Schmuu,https://esolangs.org/wiki/Schmuu,2018,,,unimplemented,,languages,Schmuu is language created originally by User:Schmuui and User:Galaxtone.
Surtic,https://esolangs.org/wiki/Surtic,2018,,turing complete,unimplemented,cell-based,languages; high-level,"Surtic (""Sir Chick"") is an esoteric programming language created by User:Digital Hunter with help from User:Galaxtone.  ""Surtic"" is ""citrus"" spelled backwards, with some artistic liberty taken in its pronunciation."
Andromeda,https://esolangs.org/wiki/Andromeda,2018,,turing complete,implemented; no io,queue-based,languages; two-dimensional languages,"Andromeda is a two-dimensional, queue-based programming language in which, apart from the usual direction-changing arrows (which also serve additional purposes), there is only one additional command. The language was created and implemented in 2018 by User:ZM."
Along and Across,https://esolangs.org/wiki/Along and Across,2018,,,no io; implemented,,languages; meta-languages; low-level,"Along and Across is a family of esoteric programming languages created by User:ais523 in 2018. (Alternatively, it can be seen as a single metalanguage which takes two languages as input and produces a language as output.) The idea behind the language is to explore the definition of Turing-completeness, especially in the case of ""across"" languages that require an infinitely long input to run."
Boolet,https://esolangs.org/wiki/Boolet,,,turing complete; turing tarpits,,stack-based,languages,Boolet is a stack-based esolang created by User:joshop.
Perpetuum Mobile,https://esolangs.org/wiki/Perpetuum Mobile,,,turing complete,,,languages; two-dimensional languages,Perpetuum Mobile: Rube Goldberg style esolang
Seeker,https://esolangs.org/wiki/Seeker,2018,,turing_complete,unimplemented,,high-level; languages,"Seeker is an esoteric programming language created by User:Saka (User:Galaxtone helped a little) that employs ""seekers"" and ""blocks"", pointers that can be accessed via the special functions."
TPPL,https://esolangs.org/wiki/TPPL,2018,,,implemented,stack-based,languages,"The Toilet Paper Programming Language, or TPPL for short, is an esoteric language created by User:Saka. It is based on toilet paper but is not truly toilet paper."
Qwertypy,https://esolangs.org/wiki/Qwertypy,2018,,turing_complete,implemented,,languages,Qwertypy is an esoteric Python clone created by User:Saka where every letter or number is turned into a number.
Between,https://esolangs.org/wiki/Between,2018,,,unimplemented,,languages,"Between is an esoteric programming language created by User:Saka.
Between has functions which are positioned between arguments, hence the name."
LOLZ,https://esolangs.org/wiki/LOLZ,,,,implemented,,languages,"LOLZ is a language that ignores everything except the letters 'l', 'o,' and 'z'. Its main goal is to let users write any program in one line. It is an error-free language, therefore it does not have any run-time or syntax errors. It was written by Cevat Barış Yılmaz."
Equipage,https://esolangs.org/wiki/Equipage,2018,,turing complete,implemented; no io,stack-based,languages,"Equipage is a concatenative programming language designed by Chris Pressey
in early May 2018.  Like Carriage, it is the result of trying to devise a ""pure""
concatenative language, i.e. one where the rule ""concatenation = function
composition"" is taken to be strictly literal and universal (with no exceptions
such as allowing nested quoted programs.)  It is more successful than Carriage
at achieving this goal."
PUBERTY,https://esolangs.org/wiki/PUBERTY,2018,,,,,languages; joke languages,"PUBERTY is a language created by User:Izumariu in 2018 with the intention to create a language that resembles a pubertal masturbation procedure.
It is not intended to find use in public business.
The language was written to explore a new way of programming."
Annoying Alice 2D,https://esolangs.org/wiki/Annoying Alice 2D,2018,,,implemented,,languages; two-dimensional languages; thematic,"Annoying Alice 2D is a two-dimensional esolang that is inspired by 2D programming languages like Piet, using the difference in ARGB values between pixels. It has this name because it is pretty annoying to program."
Losescript,https://esolangs.org/wiki/Losescript,,,turing complete,unimplemented,,languages; joke languages; golfing language,"Losescript is a programming language that certainly makes you win in some golf contests (while if the questions change even a bit, you will certainly lose)."
`,https://esolangs.org/wiki/`,2018,,finite state automata,output only; implemented,cell-based,languages,"` is a minimalistic esoteric language created by User:Iamcalledbob that was designed to have only two instructions, while being somewhat usable for computation."
Brainpocalypse,https://esolangs.org/wiki/Brainpocalypse,2018,,turing complete; turing tarpits,no io; implemented,cell-based,languages; brainfuck derivatives; low-level,"Brainpocalypse is an esoteric programming language created by User:ais523 in 2018, as a cross between brainfuck and Subtractpocalypse. The idea is to produce a language that's simpler than each of the original languages in terms of the complexity of its command set. It can also be fairly easily minimalized down to two instructions; unlike some other languages with the same property, it does not require an implicit loop around the program (i.e. the commands of the program itself handle both data manipulation and control flow)."
GetWhen,https://esolangs.org/wiki/GetWhen,,,unknown computational class,,,languages,GetWhen is a terrible unfinished esoteric programming language (it might not even be that esoteric) by User:SoundOfScripting that is designed around code being executed whenever a certain condition is met.
$,https://esolangs.org/wiki/$,2018,,finite state automata,output only; implemented,cell-based,languages,"$ is a ""sister""-language to `, which works the same way, except how it has no negative numbers."
ON THE WAY TO WHO KNOWS WHERE,https://esolangs.org/wiki/ON THE WAY TO WHO KNOWS WHERE,,,,unimplemented,stack-based,languages,It pops the stack and prints a string at the end.
Turing (Iamcalledbob),https://esolangs.org/wiki/Turing (Iamcalledbob),2018,,,unimplemented,,languages,"Turing is designed to have a very lightweight, readable, intuitive syntax. Here is the entire Hello World! program in Turing with syntax highlighting:"
Hexsp,https://esolangs.org/wiki/Hexsp,2018,functional paradigm,turing complete,implemented,,languages,Hexsp is a programming language made by Otakuto. It is basically Lisp written in Hexspeak. Every code is written in hexadecimal numbers and it is supposed to resemble machine language.
DeadSimple,https://esolangs.org/wiki/DeadSimple,2018,,,implemented; output only; total,,low-level; languages,"DeadSimple, originally named R U DS for Are You Dead Serious?, is an simple, total, output-only esoteric programming language created by Zackery Mowrer in 2018. The current name comes from the fact that the language is ""dead simple"" to program in."
SASM,https://esolangs.org/wiki/SASM,2018,,turing tarpits,implemented; no io,,languages; low-level,SASM is a very simple derivative of assembly code.
First.go,https://esolangs.org/wiki/First.go,,,,implemented,stack-based,languages,"first.go is a tiny concatenative esolang that User:Zero created to get used to Go, as the creators first Golang program."
4-list,https://esolangs.org/wiki/4-list,2018,,turing complete,unimplemented,,languages,"4-list is a simplification of I/D machine(actually being only 1-commanded, and it supports I/O)."
BSoD,https://esolangs.org/wiki/BSoD,2018,,,implemented; output only; total,,languages; thematic,BSoD is an esoteric programming language created by User:Rerednaw on 23 June 2018. The name refers to the Blue Screen of Death on computers with the Windows operating system. It is part of graphic programming languages.
Unilot,https://esolangs.org/wiki/Unilot,2018,,unknown computational class,unimplemented,,languages,"Unilot is a programming language originally conceived by user:Lukalot and heavily influenced by user:Heavpoot, user:LyricLy, and user:Galaxtone, becoming Lukalot’s first esolang. The concept was that any number more than 1 cannot be added or subtracted from a variable, unless that number is stored within another variable. Variables are 1 character long and are always integers. There is one input and one output."
1argasm,https://esolangs.org/wiki/1argasm,2018,,,,,languages,1argasm is an Assembly-like language created by Zero in June of 2018. The main restriction is that all commands can only take one argument.
User:Language,https://esolangs.org/wiki/User:Language,2018,,,unimplemented,stack-based,languages; user edited,"User:Language is an esoteric programming language by User:SoundOfScripting (and, technically, User:Language) that is soley dependent on this wiki.
Readers are allowed to make changes to this article and language, but if they break anything (e.g. programs), it is their job to fix it."
Solo,https://esolangs.org/wiki/Solo,2018,,push-down automata,unusable for programming; implemented,,languages,Solo is created by User:A.
--Unless,https://esolangs.org/wiki/--Unless,,declarative paradigm; object-oriented paradigm; functional paradigm,turing tarpits; turing complete,,,languages,--Unless is invented by User:A.
Fusion Tag,https://esolangs.org/wiki/Fusion Tag,,,unknown computational class,usability unknown; no io; implemented,queue-based,languages; low-level,Fusion Tag is a variant of a tag system created by User:ais523 in 2018. It's intended to require less complex data structures to implement than most tag system variants do.
Far,https://esolangs.org/wiki/Far,2018,,turing complete,implemented,,languages,"Far is a stack-based esoteric programming language designed to have many higher-level functions, yet still take a long time to write simple programs in. All programs are made up of a series of 1 character commands, and most will also use expressions to allow more complex tasks to be written."
++Brainfuck,https://esolangs.org/wiki/++Brainfuck,,,,implemented,,languages; brainfuck derivatives,This cat program repeats infinitely.
Transio,https://esolangs.org/wiki/Transio,2018,,turing_complete,usability_unknown; implemented,deque-based,languages,"Transio is an assembly-like esoteric language based on transactions. The name stands for ""transactional I/O"". Every line of code is a transaction in the format destination <- source. There are two kinds of destinations: the special ports (or special registers) and regular ports (also regular registers or simply registers). And there are three kinds of sources: the same two kinds of destinations plus numeric literal (which are always in hexadecimal base)."
Tip,https://esolangs.org/wiki/Tip,2018,,turing complete; turing tarpits,implemented,,languages; low-level,"Tip is an esoteric programming language created by User:ais523 in 2018, as a minimization of iterated Collatz functions (which were already pretty minimal to start with!). It allows for very terse implementations in many languages which have primitives for handling rational numbers. The name is an acronym for ""times instruction pointer""."
Disan,https://esolangs.org/wiki/Disan,2018,,,implemented; total; unusable for programming,,languages,"Its only command, D, implements the Disan Count."
🆒,https://esolangs.org/wiki/🆒,2018,functional paradigm‏‎,turing complete,implemented,,languages; high-level‏‎; thematic,"🆒 is an esoteric programming language currently developed by User:Fogity.
It is a fairly straight forward lazy functional language with the caveat that the source code, input, and output must consist solely of emoji."
开？关！,https://esolangs.org/wiki/开？关！,,,turing complete; turing tarpits,no io,,languages; joke languages; cjk,开？关！is a very funny esolang invented by User:A.
What a mess!,https://esolangs.org/wiki/What a mess!,2018,,unknown computational class,usability unknown,,languages,"What a mess! is an esoteric programming language by User:A which is extremely messy.
variables are defined like this:"
Stun Step,https://esolangs.org/wiki/Stun Step,2018,,turing complete; turing tarpits,no io; implemented,cell-based,languages; low-level,"Stun Step is an esoteric programming language created by User:ais523 in 2018, inspired by Ørjan Johansen's minimalization of Home Row. The resulting language is fairly similar to Brainpocalypse, but has different control flow (and a much simpler proof of Turing completeness, meaning that there's a chance it'll be efficient to write programs in)."
MSR,https://esolangs.org/wiki/MSR,2018,,,implemented,,languages,MSR or Match Switch Reverse is an esoteric programming language invented by User:GDavid.
Functional(),https://esolangs.org/wiki/Functional(),2018,functional paradigm,turing complete,implemented,,languages,Functional() is an esoteric Turing complete programming language.
Von Neumann's 29-state cellular automaton,https://esolangs.org/wiki/Von Neumann's 29-state cellular automaton,,,turing complete; turing tarpits,,cell-based; cellular automata,languages; two-dimensional languages; low-level,Von Neumann's 29-state cellular automaton is a Cellular automaton published in 1966.
TRAVEL 33,https://esolangs.org/wiki/TRAVEL 33,,,,,,languages,"TRAVEL 33 is an esolang invented by User:GDavid. It's capable of sending information in time, even backwards therefore it's uncomputable.
It got it's name from the fact that the Hello World example's first line was TRAVEL 33 (changed to GOTO 33)."
Nestplate,https://esolangs.org/wiki/Nestplate,,,turing complete,no io,,languages; low-level,Nestplate (from the combination of the words nest and template) is a language invented by User:GDavid to solve the problem that C++ templates are sometimes too readable. It's inspired by (()).
D'ni,https://esolangs.org/wiki/D'ni,2018,declarative paradigm,,,,languages,"This is an attempt, started by Eric James Parfitt, to slowly turn all of the English language into computer code, working in the direction of predicate logic.  It is inspired by the idea that definitions can be broken down into as few as around 60 base words called semantic primes.  It loosely follows and has used as inspiration Learn These Words First, a website which builds final link in a non-circular dictionary between all words in the English language and semantic primes at the bottom."
Pxem,https://esolangs.org/wiki/Pxem,2008,,turing complete,implemented,stack-based,languages,"Pxem(pronounced ""ペクシム"" [pekushimu] by the creator[2]) is a programming language designed by ""ぬこ"" [nuko] or ""nk.""[1]. According to nk, ""Pxem"" is only named as such because ""it's easy to type with a keyboard.""[3]"
Ⅎ,https://esolangs.org/wiki/Ⅎ,2018,functional paradigm,turing tarpits,output only; unimplemented,,languages,"Ⅎ (from “Ⅎunctional”, may be called “turned F” in ASCII contexts or when lazy to type) is undoubtedly an essence of an equational functional language. Its idea is simple, so it probably was stumbled upon by many, including User:Oerjan and User:Arseniiv [1]. Currently, the description here is as the latter of them sees fit."
D.U.C.K.,https://esolangs.org/wiki/D.U.C.K.,,,unknown computational class,unimplemented,,languages,D.U.C.K. (an acronym that will have meaning in the future) is an esoteric programming language created by User:SoundOfScripting that is designed to be used by time travellers. It apparently was/will be created sometime during the century beginning with the last year of the 3rd millennium CE.
ESOPUNK,https://esolangs.org/wiki/ESOPUNK,,,turing complete,implemented,,languages,"ESOPUNK is a version of the EXA Programming language made by User:Blacksilver, which runs outside a network."
SeMo-PATH,https://esolangs.org/wiki/SeMo-PATH,,,turing complete,,cell-based,languages; two-dimensional languages,"SeMo-PATH, is derivation of PATH, that is a two-dimensional language inspired by Brainfuck and Befunge. Unlike PATH's environment, SeMo-PATH's consists of a 2D plane of memory cells all initialized to zero, on which is also written the program itself, and character-based standard input and output. PATH understands the following commands:"
Flow of Holes,https://esolangs.org/wiki/Flow of Holes,2018,,turing complete,output only; unimplemented,,languages; high-level,"Flow of Holes is an esoteric programming language created by User:ais523 in 2018. Its purpose is to act as a reversible counter machine that's relatively high-level/unrestricted as esolangs go, thus hopefully making computational class proofs for reversible languages easier. Its main unusual feature is that data and control flow move in opposite directions (thus the name). Other unusual features include the fact that the syntax is primarily specified in terms of how it would be represented in a GUI IDE (rather than as text), and support for formal verification that functions obey their specifications."
Amicus,https://esolangs.org/wiki/Amicus,2015,functional paradigm,turing complete,implemented; unimplemented; no io,,languages,"Amicus is simple Turing-complete programming language defined by David Madore in his 2015-11-16 blog article “Qu'est-ce qu'une machine hyperarithmétique ?”.   Amicus is a pointfree functional programming language based on composing pure non-curried functions with unbounded but fixed arity.  Just like David's older language Unlambda or Backus's FP language, Amicus has no variables, yet lambda calculus style code with variables can be translated to this language easily by abstraction elimination, because the necessary combinators for composition are provided."
La Weá,https://esolangs.org/wiki/La Weá,,,turing complete,implemented,,languages,"La Weá is an esoteric programming language created by Rodrigo Pelissier and released on September 18, 2018. It is inspired by COW and Brainfuck. It consists of 16 commands, each represented by a highly colloquial term in Chilean Spanish and it is Turing-complete. Commands must be separated; extra whitespaces and newlines are ignored; single-line comments are preceded by a #."
Rockstar,https://esolangs.org/wiki/Rockstar,2018,,turing complete,implemented,,joke languages; thematic; languages,"Rockstar is a dynamically typed Turing-complete programming language designed for creating computer programs that are also song lyrics. Rockstar is heavily influenced by the lyrical conventions of 1980s hard rock and power ballads. It was created by Dylan Beattie in 2018, inspired by a tweet suggesting that ""to really confuse recruiters, someone should make a programming language called Rockstar."" On November 30th, 2024, Rockstar 2.0 was released, keeping most of the major grammar of Rockstar 1 while adding some new features and overhauling the type inferencing system."
Falsebrain9Q+Fishload,https://esolangs.org/wiki/Falsebrain9Q+Fishload,,,turing complete,,,languages,"Falsebrain9Q+fishload is an ingenious combination of many esolangs: False, Brainfuck, HQ9+, Deadfish, and Underload. It has two stacks, a tape, and an accumulator. As you can see, this makes the language Turing-complete but also powerful."
MineFriff,https://esolangs.org/wiki/MineFriff,2018,,,implemented,stack-based,two-dimensional languages; languages,"MineFriff brings the joy of traditional esolangs such as Befunge and ><> into the blocky pixelated world of Minecraft.  Much like fungeoid languages, MineFriff allows code to be set out in a 2D code area, which can range from a 100*100 grid (allowing for 10,000 instructions) to any size of square (or cube)."
ΙΧΘΥΣ,https://esolangs.org/wiki/ΙΧΘΥΣ,2018,,turing complete,implemented; output only,,languages; deadfish derivatives; thematic,"ΙΧΘΥΣ (or ""ixqus"") means 'fish' in Classical Greek. It is an esoteric programming language created by User:Salpynx, as a thematic and computationally more powerful derivative of Deadfish x, and is therefore a superset of the original Deadfish language."
Precognition,https://esolangs.org/wiki/Precognition,2018,declarative paradigm,turing complete,unimplemented,,languages,"Precognition is an esoteric programming language, which was created by User:ais523 in 2018 upon realising that several partially-completed languages were converging to something of a similar point. It thus serves a wide range of purposes, being usable as anything from a simple text preprocessor to a powerful declarative language. The language intentionally has few commands, but is not a Turing tarpit (in that it's meant to be clear what commands you could use to write any given code, and you don't have to, e.g., invent arithmetic yourself to write in it)."
LMCode,https://esolangs.org/wiki/LMCode,,,,implemented,cell-based,languages; low-level,LMCode —  esoteric programming language. Based on the Little man computer command system.
TPLHBPTBOTEW,https://esolangs.org/wiki/TPLHBPTBOTEW,2018,,unknown computational class,unimplemented; output only,,languages,"TPLHBPTBOTEW, which is an acronym for This Programming Language Has Been Proven To Be On The Esolangs Wiki, is an esoteric programming language created by User:Andrew3335 and me (User:Gamer) that was designed to look like a math paper."
TEPCS,https://esolangs.org/wiki/TEPCS,2018,,,output only,,languages; high-level,"TEPCS (Tilde, Exclamation Point, Caret, Semicolon) is an incomplete programming language created by User:Cortex at around midnight, November 4, 2018. Its file extention is .~~~, and only four unique characters (other than inputs) are used:"
Keg,https://esolangs.org/wiki/Keg,2018,,turing complete,implemented,stack-based,languages; golfing language,"Keg is a stack-based esolang with condensability as well as simplicity and readability in mind. It’s main purpose is to be used for golfing, although it can be potentially used for other purposes. What makes this esolang different from others is that:"
W,https://esolangs.org/wiki/W,2018,,,,,joke languages; languages,"W is a programming language with various unnecessary, redundant, and useless commands. If the compiler encounters an error, the source code is encrypted into the SHA1 hashing algorithm, followed by one of the error codes listed below the commands list."
Brainfoctal,https://esolangs.org/wiki/Brainfoctal,2018,,turing complete,implemented,,languages; brainfuck equivalents,"Brainfoctal is a Gödel numbering language, where code is represented and executed direcetly by Gödel numbers. It uses brainf**k as its base, to form a base 8 (octal) number."
Ahead,https://esolangs.org/wiki/Ahead,2018,,,,,two-dimensional languages; languages,Ahead is a fungeoid created by snail_ in 2018. It is inspired primarily by Befunge and ><> but with a slightly different approach. The reference implementation is available on GitHub.
Snigl,https://esolangs.org/wiki/Snigl,,,,implemented,stack-based,languages,
Apple Pie,https://esolangs.org/wiki/Apple Pie,2018,,,unusable for programming; total; output only; implemented,,languages; thematic,"Apple Pie is a language created by User:Cortex which is designed to be extremely difficult to read and write code in. Its file format is .pie. The command names are often either 1 letter or gibberish, and the letter that terminates commands varies depending on the command before it (Specifically, the letter 9 places after its last letter in the alphabet. If it goes above Z, it wraps back around to A. So to terminate an R command, you would add ""A"". Also, you must put a space before the terminating character.) To further prevent code from being readable, a newline is a command that prints the program's source code, but also deletes anything else printed. As such, any code with a newline is a quine. Commands are case sensitive."
High Rise,https://esolangs.org/wiki/High Rise,2018,,turing complete; unknown computational class,no io; implemented,,languages; low-level,"High Rise is a general class of esoteric programming languages described by User:ais523 in 2018, in an effort to find a Turing-complete language which would allow for the shortest possible implementation in a Turing tarpit (and possibly to aid in Turing-completeness proofs of languages with very small feature sets). One specific goal was to find an interpreter for a Turing-complete language in The Waterfall Model, using only a small number of waterclocks."
Doreq,https://esolangs.org/wiki/Doreq,,,turing complete,,cell-based,languages; low-level,Doreq is a OISC interpreter of the same named instruction.
Echo Tag,https://esolangs.org/wiki/Echo Tag,2018,,turing complete,no io; unimplemented,queue-based,languages; low-level,"Echo Tag is an esoteric programming language created by User:ais523 in 2018, in an attempt to find a cyclic tag variant that's even simpler to implement. (The perceived issues with cyclic tag that make can sometimes make it hard to implement in low-level languages are that programs effectively have three instructions (e.g. 0, 10, 11 in Bitwise Cyclic Tag) rather than two, and that the queue and program don't move at a constant rate relative to each other, requiring additional control flow.)"
An Odd Rewriting System,https://esolangs.org/wiki/An Odd Rewriting System,2018,,turing complete,no io; implemented,,languages; low-level,"An Odd Rewriting System is an esoteric programming language designed by User:ais523 in 2018. ais523 had noticed that several simple esoteric programming languages seemed to share a similar limitation, and decided to create a language that highlighted the limitation in question, in an attempt to gain more understanding of the issue."
A-DU,https://esolangs.org/wiki/A-DU,2018,,,implemented,cell-based,languages; thematic,"A-DU is a thematic esolang currently under development by User:Salpynx based on Linear A balance ledger tablets. 
It is sort of like Grocery List, with more complex syntax, and fewer operations. 
A-DU (𐘇𐘬) means something like Assessment in Linear A. Most of the meanings and structure and inspiration for the Linear A aspect of this language comes from the work and resources provided online by John G. Younger. A huge thank you to him, and apologies if he ever reads this! Other sources are listed in the #Bibliography."
Grime MC,https://esolangs.org/wiki/Grime MC,2018,,,unimplemented,,languages; thematic,"Grime MC is a natural language like lyric esolang inspired by Shakespeare. It evolved from a typo of a much less palatable and more obscure music-genre language, which may remain unpublished. Grime MC implements the same example algorithms in a more accessible, less offensive, form."
2C,https://esolangs.org/wiki/2C,2018,,turing complete,no io; unimplemented,cell-based,languages; low-level,"2C is an esoteric programming language created by User:ais523 in 2018. It is something of a cross between Thue, a cellular automaton, and a tag system."
HARSH,https://esolangs.org/wiki/HARSH,2018,,turing complete,implemented,stack-based,languages,"HARSH is a programming language made in order to test its creator's ability to do memory allocation. It has 13 commands, an accumulator, and a stack."
Hurgusburgus,https://esolangs.org/wiki/Hurgusburgus,2018,,unknown computational class,unimplemented,deque-based; concurrent programming,languages,"Hurgusburgus is a programming language by User:BradensEsolangs, intended to be very confusing."
Simpler Subskin,https://esolangs.org/wiki/Simpler Subskin,2018,,unknown computational class,unimplemented,,languages; low-level,"Simpler Subskin is an esoteric programming language created by User:ais523 in 2018. Although the original inspiration for the language was quite different (being based on an observation about what Brain-Flak minimizations could and couldn't do efficiently), the resulting language was retrofitted into being a Subskin derivative."
Blindfolded Arithmetic,https://esolangs.org/wiki/Blindfolded Arithmetic,2018,,turing complete,unimplemented,,languages,"Blindfolded Arithmetic is an esoteric language that User:ais523 has published in 2018-04 on Code Golf Stack Exchange.  It is similar to a language called Babbage's Analytical Engine that was published in 1992 for IOCCC.  Blindfolded Arithmetic is Turing-complete, in fact it can efficiently simulate an unrestricted state machine with two stacks."
Re:direction,https://esolangs.org/wiki/Re:direction,2018,,turing complete,implemented,queue-based,languages; two-dimensional languages; low-level,"Re:direction is an esoteric programming language created by User:ais523 in 2018. It is a two-dimensional language, consisting only of the direction-changing arrows and a command to repeat a previous direction change."
LolKek,https://esolangs.org/wiki/LolKek,2019,,turing complete,unimplemented,,brainfuck derivatives; languages; low-level,"LolKek is modified Brainfuck. It has 19 commands.
Commands:"
Flatland,https://esolangs.org/wiki/Flatland,2018,,unknown computational class,unimplemented,stack-based,languages; low-level; two-dimensional languages,"The Flatland language operates on a 2D plane of instructions, but it is not grid-based (as opposed to Befunge and ><>). Rather, the execution paths are defined by geometric shapes, namely infinite lines and circles."
DukkTap,https://esolangs.org/wiki/DukkTap,2018,,,output only,cell-based,languages,DukkTap is an esoteric programming language that acts like a piece of duck tape. It's inspired by an idea in the idea list section of esolang.
ᚱᚢᚾᛅᛦ,https://esolangs.org/wiki/ᚱᚢᚾᛅᛦ,2018,,,,,languages; two-dimensional languages,"ᚱᚢᚾᛅᛦ (Rúnaʀ) is a Runic fungeoid currently being developed by User:Salpynx after noticing that there were no existing esolangs written in runic (other than Юᓂ곧⎔ which incorporates them for pre-processor directives). It is based on RunR, which looked like a close match as a near/false declension of the Old Norse word for rune: rún. If rún were a masculine root, Rúnʀ would be masc. s. 'rune'. Rún is in fact feminine, so Rúnaʀ is the correct feminine plural: 'runes'."
Nellephant,https://esolangs.org/wiki/Nellephant,2019,,,unimplemented,,languages; low-level,"Nellephant is an esoteric programming language created by User:ais523 in 2019. The intention behind the language is that programming in Nellephant will give you an understanding of how the wikipedia:NL (complexity) class operates; it's not intended to be particularly difficult to program in beyond the restrictions implied by NL, with most of the operations that are possible having simple implementations, but the language is nonetheless weird to program in (mostly, but not entirely, because NL itself is weird)."
P0pCrn,https://esolangs.org/wiki/P0pCrn,,,,,,languages,P0pCrn is an esolang made by Areallycoolusername. It's based off of x86 Assembly and it has cells.
AlgorE,https://esolangs.org/wiki/AlgorE,,,,unimplemented,,languages,AlgorE is an esolang made by  User: Areallycoolusername. It's was made to calculate algebra equations so you don't have to.
PixelCode,https://esolangs.org/wiki/PixelCode,,,,implemented,graphical output,languages; brainfuck derivatives,"PixelCode is an esoteric programming language that was created by Vladimir Dabić (SealedKiller), inspired by Brainfuck among others."
Quite,https://esolangs.org/wiki/Quite,2019,,,unusable for programming,,languages,A language made by Areallycoolusername. This is an attempt to make a useful language.
1.1,https://esolangs.org/wiki/1.1,,,turing complete,implemented,,languages,"1.1 is a Turing-complete esoteric programming language based on string replacement in a string data buffer, arbitrary control flow among states, but without self-modifying code."
11CORTLANG,https://esolangs.org/wiki/11CORTLANG,2019,,,total; implemented,stack-based,languages,"11CORTLANG (the 11th language by Cortex) is a stack-based language made by Cortex using only the characters 0, 1, and newline. Also, the null program is a cat program, because of course it is."
Cthulhu,https://esolangs.org/wiki/Cthulhu,2019,object-oriented paradigm,,implemented,,languages,Cthulhu is an esoteric programming language heavily based off of Deadfish i.
SPADE,https://esolangs.org/wiki/SPADE,2019,,,implemented,,languages,"SPADE is a programming language first conceived in August 2018 by User:Swampie27782 and User:KiloByte?. It was made for a 12th grade computer science project in order to create a compiler for it in C++, making it one of the only languages to have been created purely to be interpreted by another language.
The full form of SPADE is, during normal conversation, Simple Parsing Algorithm Developed using C++ Expressions. However, its official expansion is Sabaton Pannikin Argentiferous Demisang Exaugurate. As you can see, this expansion makes far more sense."
ElemScript,https://esolangs.org/wiki/ElemScript,2019,,,,stack-based,thematic; languages,Elemscript is an esoteric programming language made by User:Areallycoolusername. All commands are carried out using the atom formulas for different elements (from the periodic table). It's stack based.
2/9 of an esolang,https://esolangs.org/wiki/2/9 of an esolang,2019,,,unimplemented,,languages,"2/9 of an esolang is an esolang made by User:Cortex in order to make doing anything relatively easy, but long-winded and inconvenient."
Analogia,https://esolangs.org/wiki/Analogia,2019,,unknown computational class,unimplemented,,languages; low-level,"Analogia is a syntax developed by User:ais523 in 2019 for describing a minimal/tarpit-like subset of analog computers. (It can thus be seen as a programming language – where the interpreter is either an analog computer, or else a program that simulates one – but analog computers were, of course, not invented by ais523.)"
Print Function Deluxe,https://esolangs.org/wiki/Print Function Deluxe,2019,,,implemented,,languages,"Print Function Deluxe is an esolang made by Cortex designed to have very small code and many useful commands, but the only way to see what it actually did through the whole thing is with the p command."
Bitwise Trance,https://esolangs.org/wiki/Bitwise Trance,2019,,,implemented,,languages,"Bitwise Trance (or simply BT) is probably a Turing complete language, but it hasn't been proven. It is similar to an assembler, except the memory is unbounded."
Generic 2D Befunge,https://esolangs.org/wiki/Generic 2D Befunge,2018,,,,,two-dimensional languages; languages,"Generic 2D Befunge is a language created in 2018 by User:Alikberov. It is, as the name suggests, a generic 2-Dimensional befunge-based language. It operates on both a 2-Dimensional variant of Befunge's tape as well as using a 2-Dimensional program."
Minaac,https://esolangs.org/wiki/Minaac,2019,,turing complete,implemented,cell-based,languages; high-level,"Minaac (Minaac Is Not An Assembler Clone), made by User:TheJebForge, is a run-time interpreted esoteric programming language capable of recreating a Turing machine making it a Turing-complete language."
Pizza Delivery,https://esolangs.org/wiki/Pizza Delivery,2019,,finite state automata,implemented,cell-based,languages; thematic,"Pizza Delivery is yet another esolang by Cortex designed to be similar to the logic of other Cortex languages, but more concise. It is named after the Spider-Man 2 Pizza Theme (despite having no real relation), and it is ideal that you play the song on loop while coding in Pizza Delivery. Its data model is technically a 2-dimensional array of cells, but Cortex prefers to call it a square. It might be a finite-state automaton."
BitBounce,https://esolangs.org/wiki/BitBounce,2019,,,implemented,,languages,The main motivation for designing this language is to prove that Bitwise Trance is Turing complete. It seems feasible (although it hasn't been achieved yet) to implement BitBounce interpreter in Bitwise Trance (with the exception that BitBounce program itself needs to generate extended copy of itself).
Pyhton (sic),https://esolangs.org/wiki/Pyhton (sic),2019,,,implemented,,languages,"pyhton [sic] is an esoteric programming language created by Something Fawful.  It is technically the second language he has created, but the interpreter for Pyhton [sic] has been easier to get working, and is somewhat easier to explain so it is being uploaded first.  The language's name is an intentional typo of Python, including a [sic] afterwords, so that if you are quoting someone who spelled Python as Pyhton, it will be impossible to tell if it is referring to Pyhton [sic] or Python.  pyhton [sic]'s name should be in lower case at the start of a sentence, and with an uppercase p otherwise."
Caeos,https://esolangs.org/wiki/Caeos,2019,,,implemented,,languages,"Caeos, pronounced ""Say oss"", is an esoteric programming language that could produce anything at run time it was made by Areallycoolusername. This is similar to Snowflake except it doesn't slowly perform the function it was originally meant to perform."
ALLSCII,https://esolangs.org/wiki/ALLSCII,2019,,unknown computational class,implemented,stack-based,languages; low-level,"ALLSCII is a stack-based esolang created by Cortex where every printable ASCII character (excluding whitespace (excluding the space)) is (will be) a valid command. I'm somewhat out of ideas for commands, so if you have an idea for a command feel free to add to the table below."
Headshot!,https://esolangs.org/wiki/Headshot!,,,,,,languages,Headshot! is a language being developed by User:CrazySqueak. It was designed with the goal of looking like a log of actions taken in a shooter game.
Grr,https://esolangs.org/wiki/Grr,2018,declarative paradigm,turing complete; turing tarpits,output only,,languages,"Grr is a purely textual programming language that composes rules and functions, inspired by macros and metaprogramming. There exist two ways to define rules in Grr: firstly using a simple substitution in x to y (x <- y), or secondly making a function f that receives x and returns y (f(x) <- y). However in the reference interpreter they are all same substitution procedure. Grr is by default a recursive language, so rules can be replaced by the same rules (y <- y)."
Lawrence J. Krakauer's decimal computer,https://esolangs.org/wiki/Lawrence J. Krakauer's decimal computer,,,,implemented,,languages; low-level,Lawrence J. Krakauer's decimal computer was an educational language invented after 1965 for teaching programming to children in a camp.  It was implemented as an emulator on a PDP-1 machine.
Functasy,https://esolangs.org/wiki/Functasy,2019,functional paradigm,turing complete,implemented,,languages,Another programming language inspired by the lambda calculus concepts. The main difference is that Functasy doesn't allow grouping (all function calls are performed left-to-right linearly (not to be confused with function definition grouping)).
A,https://esolangs.org/wiki/A,,,turing tarpits; turing complete,implemented,cell-based,brainfuck equivalents; languages; low-level,A is a programming language that uses only the letter A in its source code. Its creation year is uncertain but no later than 2008.
Chem,https://esolangs.org/wiki/Chem,2019,,unknown computational class,unimplemented,stack-based,languages; thematic,Chem is a language designed to look like instructions in a chemistry textbook.  It is surmised to be turing complete but has not been proven.  It was created by user KerbalEngineer within the span of a day.
"No Literals, Gotos Only, Final Destination!","https://esolangs.org/wiki/No Literals, Gotos Only, Final Destination!",2019,,turing complete; turing tarpits,implemented,,languages,"No Literals, Gotos Only, Final Destination! is an esoteric language created by Something Fawful.  It is the first one he created, starting in 2017, but only recently has he created a working interpreter.  As the name of the language implies, No Literals, Gotos Only, Final Destination! does not have any predefined numeric on string literals, and every single line contains an implicit goto statement."
Dimensional,https://esolangs.org/wiki/Dimensional,2022,,unknown computational class,unimplemented,cell-based; multi-dimensional languages,joke languages; low-level,"Dimensional is an esoteric programming language created by User:NutronStar45, where you can have infinite dimensions of infinite dimensions of infinite dimensions of infinite dimensions of ... of infinite dimensions of bytes."
Bitdeque,https://esolangs.org/wiki/Bitdeque,,,turing complete; turing tarpits,no io; implemented,deque-based,languages,Bitdeque is an esoteric programming language created by User:Nobody in 2019. It operates on a deque of bits and a register.
Polytran,https://esolangs.org/wiki/Polytran,2019,,unknown computational class,unimplemented,,languages,"Polytran is an esoteric programming language that is a mix between Polynomial and Fortran, made by Areallycoolusername. It was inspired by User: Xolroc who commented on the Polynomial talkpage, ""Combine this with Fractran and you have a truly unusable mess."" However, I don't think it would be possible to even mix the two as, polynomials don't allow division, and Fractran uses division. So Fortran was used instead."
Entish,https://esolangs.org/wiki/Entish,2019,,turing complete,implemented,stack-based,high-level; languages,Entish is a resource aware recursively sandboxable language built on RarVM. The language aims to allow for:
BTree,https://esolangs.org/wiki/BTree,2019,,turing complete,implemented,deque-based,languages,BTree is an esoteric language invented by User:TuxCrafting where programs are formatted as binary trees.
Fastlane,https://esolangs.org/wiki/Fastlane,2019,,turing complete,implemented,,languages,"Fastlane is an esoteric language created by User:TuxCrafting that has a peculiar way of doing flow control by controlling the ""speed"" of the instruction pointer."
The Genius from Kiev,https://esolangs.org/wiki/The Genius from Kiev,2019,,,,,languages; thematic,"The Genius From Kiev is a series of esoteric programming languages made by Areallycoolusername to be the exact opposite of The Amnesiac From Minsk (Hence, the opposing names). The first language called The Genius From Kiev 8 is harder than the opposing language The Genius From Kiev 6, which is harder than The Genius From Kiev 4, which finally, is harder than 
The Genius From Kiev 2. This page will come in sections for each language."
Bur,https://esolangs.org/wiki/Bur,2018,,,implemented; output only,stack-based,languages,"Bur is an esoteric programming language invented by Zane Porter in 2018.  Bur is a simple stack-based language that features partially nondeterministic math, and no control structures other than function calls, which can be made conditionally or unconditionally."
((?)?)?,https://esolangs.org/wiki/((?)?)?,,,,implemented; usability unknown,,languages,Content div not found
Turing Machine But Way Worse,https://esolangs.org/wiki/Turing Machine But Way Worse,2018,,turing complete,implemented,,languages,"Turing Machine But Way Worse (abbreviated TMBWW) is a programming language made in December 2018, by a code golf user MilkyWay90. It is based on Turing machines that support I/O."
(?!),https://esolangs.org/wiki/(?!),2019,,,output only; implemented,,languages,( is a derivative of $ that only works when the current user is dead. This makes it impossible to use.
Elevator,https://esolangs.org/wiki/Elevator,2019,,,unimplemented,,languages; thematic,Elevator is an esoteric programming language made by User:Mipinggfxgbtftybfhfyhfn to program elevators.
Shark,https://esolangs.org/wiki/Shark,2019,,,implemented,,languages; low-level,Shark is an esoteric programming language created by User:Madk in May 2019.
Examinable Invocation Vector,https://esolangs.org/wiki/Examinable Invocation Vector,2019,functional paradigm,turing complete,implemented,,languages,Examinable Invocation Vector (or EIV) is an untyped stateless functional programming language.
1=0,https://esolangs.org/wiki/1=0,,,,,,languages,1=0 is an esoteric programming language based on Forte made to mess up some of the peano axioms that Forte does not.
Point,https://esolangs.org/wiki/Point,2019,,turing complete,,stack-based,languages,"Point is a stack-based esoteric programming language, initially inspired by Befunge and Glass."
Jungle,https://esolangs.org/wiki/Jungle,2019,,,implemented,,languages; low-level,Jungle is an esoteric programming language created by User:Madk in May 2019.
Stæck,https://esolangs.org/wiki/Stæck,2019,,turing complete,implemented,stack-based,languages,Stæck is an esoteric programming language created by User:TuxCrafting designed to implement a deterministic nonerasing stack automaton.
Curlyfrick,https://esolangs.org/wiki/Curlyfrick,2019,,turing complete,implemented,,languages,"Curlyfrick is an esolang that was designed after seeing how the popular graphing program Desmos evaluates {} as the literal number 1. Using these brackets, any number can be formed, which was the main inspiration."
Blockfunge,https://esolangs.org/wiki/Blockfunge,2019,object-oriented paradigm; functional paradigm,unknown computational class,implemented,,languages; two-dimensional languages; high-level,"Blockfunge is a two-dimensional esoteric programming language designed in 2019 by User:CraftSpider. Blockfunge is, as the name suggests, a derivative of Befunge, but instead of a primarily stack based memory system, Blockfunge contains support for named variables and function calls."
Virage,https://esolangs.org/wiki/Virage,2019,,turing complete; turing tarpits,implemented,stack-based,low-level; two-dimensional languages; languages,"Virage (meaning ""turn"" in French) is an esoteric programming language created by User:TuxCrafting where the source code is a graph."
MUSYS,https://esolangs.org/wiki/MUSYS,,,,,,languages,"MUSYS was an early music synthesis language designed by Peter Grogono for EMS in London in the early 1970s for composing and performing electronic music. ""The heart of MUSYS is a simple yet powerful macroprocessor"", an idea influenced by the paper ""A General Purpose Macrogenerator"" by Christopher Strachey. The more general purpose language Mouse later evolved from it."
Adar,https://esolangs.org/wiki/Adar,2019,,finite state automata,implemented; no io,,low-level; languages,"Adar is an esoteric ""programming language"" created by User:TuxCrafting."
Apsw,https://esolangs.org/wiki/Apsw,2019,,turing complete; turing tarpits,implemented; output only,,languages,"Apsw (/ˈɛɪ̯psʊ/) is a reversible esoteric programming language created by User:TuxCrafting based on swapping bits, where the number of set bits in the memory is finite and immutable, and determined at the start of execution."
Suich,https://esolangs.org/wiki/Suich,2019,,turing complete,implemented,,languages; two-dimensional languages,Suich is an esoteric programming language created by User:TuxCrafting.
Photon,https://esolangs.org/wiki/Photon,2019,,,,,languages; low-level,"Photon is an esolang where each command has the same structure.
They take the form of two arguments passed to a function."
Rook,https://esolangs.org/wiki/Rook,2019,,turing tarpits; turing complete,output only,,languages,Rook is an esoteric programming language made by Areallycoolusername. It's queue-based and made to be the smallest Turing tarpit ever.
Punctree,https://esolangs.org/wiki/Punctree,2019,,unknown computational class,implemented,stack-based,languages,"Punctree is an esolang by User:Arseniiv. It’s based on some ideas from June 2019. It uses binary trees with a hole (i.e., contexts) as its sole data type, an almost-call stack as its sole data store and a holy applicative paradigm as its chosen path to syntax. And it has an awful IO. But there was really no choice in that regard."
DubDubMachine,https://esolangs.org/wiki/DubDubMachine,2019,,,implemented,cell-based; emoji,low-level|low-level; low-level; languages; brainfuck_derivatives; thematic,"DubDubMachine is a esoteric programming language created in 2019 by ThisIsTheFoxe for a WWDC Scholarship application, hence it's name. It's goal is to show how much fun end exitement esolangs can bring - especially to newcomers."
Rotpai,https://esolangs.org/wiki/Rotpai,2019,,unknown computational class,implemented,,languages,Rotpai is an esoteric programming language made by User:Mipinggfxgbtftybfhfyhfn.
Pistons & Pistons,https://esolangs.org/wiki/Pistons & Pistons,2019,,unknown computational class,unimplemented; output only,,two-dimensional languages; low-level,"Pistons & Pistons (hereafter used as Pi&Pi), is an esoteric programming language made by User: Areallycoolusername. It utilizes the Unicode White Square characters, (▢), the (├)  symbol, the symbol (┬), the ( ┤) symbol, the (┴) symbol, and all the characters on the ASCII character table from decimal value 32 to 126."
DDR,https://esolangs.org/wiki/DDR,2019,,,implemented,,languages; brainfuck derivatives,"DDR is an esoteric programming language created by User:DoggyDogWhirl. It is inspired by the video game series Dance Dance Revolution, and takes many of its commands from brainfuck."
Screw,https://esolangs.org/wiki/Screw,2019,,turing complete,,cell-based,languages; brainfuck derivatives,"Screw is an esoteric programming language created by User:DumpRegs. The language is inspired by brainfuck, which is considered by some to be the most famous esoteric programming language. Where Screw differs from brainfuck is that some symbols have been changed and a few commands have been added. Screw was originally released on July 6, 2019."
Codd,https://esolangs.org/wiki/Codd,2019,,turing complete,output only,,languages,"Codd, (which has nothing to do with Cod), is an esoteric programming language made by Areallycoolusername. It's meant to be a Turing complete language implementing the use of lambda calculus."
Punc,https://esolangs.org/wiki/Punc,2019,,,implemented,,languages,"Punc is an esoteric programming language(a LISP derivative) that uses English punctuation as-is. It was inspired by ~English, but it looks forward to simplifying its syntax."
Klaus,https://esolangs.org/wiki/Klaus,2019,declarative paradigm,turing complete,unimplemented,,languages; high-level,"Klaus is an esoteric programming language made by Areallycoolusername. It was made to be highly capable, with control flow, variables, and 3 instructions, in order to make a small interpreter for it in Motorola 68000 Assembler, and to induce highly condense programs. Believe it or not, this language was inspired by the inner workings of a shotgun."
Kepler,https://esolangs.org/wiki/Kepler,2019,,,,deque-based,languages; golfing language,"Kepler is an esoteric programming language made by Areallycoolusername. It's a deque based, golfing language, made to make golfing a lot easier."
Realm,https://esolangs.org/wiki/Realm,2019,,turing complete,implemented,,languages,"The main purpose of designing and implementing Realm is to construct a programming language that is as simple as BF, but more essential than lambda calculus. While implementing interpreter for Functasy, designers of Realm noticed that any execution state of a Functasy program can be represented in Realm, thus making Realm easy for implementing a functional programming language (which, in contrast, seems very hard in BF). At the same time, it is easy to implement classes, objects, loops, if-else statements, etc, which suggest that Realm can also be considered to be of object-oriented or imperative paradigm."
Gregorovich,https://esolangs.org/wiki/Gregorovich,2019,,unknown computational class,unimplemented; output only,stack-based,languages,"Gregorovich is a Stack based esolang made by User: Jussef Swissen. Its programs are meant to be highly condensed and readable, and are output as a one-liner in output and executed. It applies exponential growth to each program."
Varnand,https://esolangs.org/wiki/Varnand,,,,implemented,,languages,"Varnand is an esoteric programming language created by User:DoggyDogWhirl. Its name is a combination of ""var"", an abbreviation of ""variable"", and ""nand"", as in the NAND operation."
Char,https://esolangs.org/wiki/Char,2019,,,unimplemented,,languages,"Char is an esoteric programming language that only uses the Arch data structure (without any other data structure, such as the stack, the queue, the deque, and dynamic variables (although the cursor is indeed a dynamic variable, but that was mandatory in the Arch specification)) and is still close to being Turing-complete(via adding as few features as possible)."
Dbondb,https://esolangs.org/wiki/Dbondb,,,,implemented,,languages,Dbondb is an esoteric programming language created by User:Sideshowbob.
ערימה,https://esolangs.org/wiki/ערימה,2019,,turing complete,unimplemented,stack-based,languages; high-level,"ערימה, (""heap"" in Hebrew) is a Stack-based, functional, and self-modifying esolang made by Jussef Swissen. Its entire command set is in hebrew. I spent too much time on this language, I actually had to learn a bit of Hebrew. It was worth it however."
Seabass,https://esolangs.org/wiki/Seabass,,,,implemented,,languages,Seabass is a programming language that was inspired by Deadfish and is backwards-compatible with it. The other key points of Seabass are:
Sidex,https://esolangs.org/wiki/Sidex,2019,,,unimplemented,,languages,"Sidex is an advanced esoteric programming language invented by User:A that is very hard to program in. Sidex is completely based on concurrency (that is, purely concurrent); most other concurrent languages implement concurrency as a side-effect. However, Sidex implements them by default. Sidex stands for SIDe-by-side EXecution. Sidex currently supports concurrency and dependent types."
KeyVM,https://esolangs.org/wiki/KeyVM,2019,,turing complete,implemented,stack-based,low-level; languages,"KeyVM is a a resource aware, capability-secure, recursively sandboxable virtual machine built to simultaneously have these properties:"
ACL,https://esolangs.org/wiki/ACL,2019,,turing complete,implemented,cell-based,low-level; languages,ACL (Advanced Computer Language) is a language created in 2019 by User:Hanzlu. The language shall have a .adcl file extension.
What Mains Numbers?,https://esolangs.org/wiki/What Mains Numbers?,2019,,finite state automata,,,languages,Content div not found
Brace For Impact,https://esolangs.org/wiki/Brace For Impact,2019,,turing complete,unimplemented,stack-based,,"Brace For Impact is a Stack-based esoteric programming language made by Areallycoolusername. It has features derived from Lisp,though it is not a Lisp Derivative. All programs made in this language have a tendency to crash during execution."
Your Pillows,https://esolangs.org/wiki/Your Pillows,2019,,,unimplemented,stack-based,languages,"Your Pillows , created by User:A,are esoteric programming languages directly based off pillows. It is somehow influenced by Beatnik. The name's case should be upper-case if this is at the start of a sentence; otherwise, it is lowercase."
Forget,https://esolangs.org/wiki/Forget,,,,implemented,stack-based,languages,Forget is a stack-based language where pointers are poisonous and the interpreter doesn't do a good job of remembering non-constant values
256,https://esolangs.org/wiki/256,2019,,unknown computational class,implemented,stack-based,golfing language; languages,"256 is a Stack-based esoteric programming language made by Areallycoolusername. It was made for Code Golf, and it's a Turing tarpit."
MetaGlow,https://esolangs.org/wiki/MetaGlow,2019,,,,,languages,"MetaGlow is a programming language. And it consists mostly of If-Else statements. All
of the code is executed in a loop and all the states are saved."
Multi-Set Manipulator,https://esolangs.org/wiki/Multi-Set Manipulator,2019,,,unimplemented,,languages,Multi-Set Manipulator is a set-based programming language invented by User:A inspired by Mathematical Notation. It is not concise at all if it is compared to APL.
Braincells,https://esolangs.org/wiki/Braincells,2019,,unknown computational class,unimplemented; usability unknown,concurrent programming; cell-based,languages; thematic; brainfuck derivatives,Braincells is just another brainfuck derivative by User:SoundOfScripting.
Gulp,https://esolangs.org/wiki/Gulp,2019,,,,deque-based,golfing language; languages,"Gulp is an esoteric programming language made by Areallycoolusername. It was made for golfing, and it is deque-based"
FAKE,https://esolangs.org/wiki/FAKE,,,,unimplemented,stack-based,languages; low-level,"FAKE is a stack-based esoteric programming language, inspired by FALSE and Forth. It is designed to be portable, usable, though hard to write programs in. Name is a reference to FALSE programming language and also means something that is not true."
Compressed Malbolge,https://esolangs.org/wiki/Compressed Malbolge,2019,,turing complete,implemented,cell-based,languages,"Compressed Malbolge, made by User:Palaiologos in 2019, is a compressed variant for Malbolge_Unshackled, designed to fit my large blobs inside PPCG submissions."
Wagon,https://esolangs.org/wiki/Wagon,2019,,turing complete,no io,stack-based,languages; stubs,"Wagon is a stack-based language created by Chris Pressey in 2019.  It is ""purely concatenative"" in the sense of Carriage and Equipage (there are no nested blocks) but it is also ""second-order concatenative"": instead of functions that take states to states, the symbols of a Wagon program represent functions that take functions from states to states, to functions from states to states.  Wagon calls these ""macros""."
Edition,https://esolangs.org/wiki/Edition,2019,,,unimplemented,,languages,The Edition language is invented by User:A.
Husk,https://esolangs.org/wiki/Husk,2015,functional paradigm,,,,languages; golfing language,Husk is a prefix-based (similar to Pyth) golf language related to Haskell.
Brainflop,https://esolangs.org/wiki/Brainflop,2019,,turing complete; turing tarpits,implemented,cell-based,languages; low-level,"brainflop is a Turing tarpit by user:InfiniteDonuts. It is Turing-complete, minimalist, and inspired by HighFive. It has 7 instructions that manipulate an array of 1024 memory cells. It is also quite possibly the most horrible language ever invented, as it not only extremely minimalist but causes insanity if used for too long. The author of this language tried to make a truth-machine program unsuccessfully and nearly lost his mind."
SIMPLE (preprocessor),https://esolangs.org/wiki/SIMPLE (preprocessor),1998,,turing complete,implemented; output only,,languages,"SIMPLE is a text preprocessor created by David Madore in 1998, inspired by m4.  SIMPLE got its name from the joke language SIMPLE."
Beets,https://esolangs.org/wiki/Beets,2019,,,implemented,,languages,The Beets programming language enables expressing calculations on infinite binary trees of bits.
Grid,https://esolangs.org/wiki/Grid,2019,,turing complete,implemented,,languages,Computation in Grid is represented by applying transformations to unbounded two-dimensional grid.
ASCII @,https://esolangs.org/wiki/ASCII @,2019,,,unimplemented,,languages; golfing language,"ASCII @ is a programming language created by User:A, due to failing code-golf competitions because @ instructions sometimes take 2 characters. This transpiles to @."
Intramodular Transaction,https://esolangs.org/wiki/Intramodular Transaction,2019,declarative paradigm,turing_complete,implemented,,languages,Intramodular Transaction operates on infinite sequences of bits.
Troll Online,https://esolangs.org/wiki/Troll Online,2019,,,,,languages,"Troll Online is a programming language builded in c#. It can connect to internet. Documentation, interpreter and the source are in this github repository: https://github.com/LegionMammal978/Troll-Online"
Echidna,https://esolangs.org/wiki/Echidna,2019,,,implemented,,languages; low-level,Echidna is an Assembly-like Esoteric Programming Language.
Encapsulation,https://esolangs.org/wiki/Encapsulation,2019,,turing_complete,implemented,,languages,Encapsulation is a string-rewriting esoteric programming language.
Aepoch,https://esolangs.org/wiki/Aepoch,,,,unimplemented,,two-dimensional languages; languages,Aepoch is a Bully automaton made by Areallycoolusername. It has some properties added to resemble the properties of a fractal.
Print,https://esolangs.org/wiki/Print,,,,,,languages,Print is an esolang made by A designed to make Print Function Deluxe programs (slightly) shorter.
The Subtyping Machine,https://esolangs.org/wiki/The Subtyping Machine,2017,,turing complete,no io,stack-based,languages; low-level,"The Subtyping Machine is an example of a ""naturally occurring"" esoteric programming language. The first known implementation was created by mistake in 2004, with the release of Java 5; but the language's existence was not publicly noted until 2017, by Radu Grigore, who named it, proved it Turing-complete and provided a less cumbersome syntax for it. User:ais523 adapted this syntax to be machine-readable, more regular, and more precisely specified, in addition to writing an interpreter, and a compiler into the original syntax that enables the language to be run on a Java interpreter. The language has some similarities to StackFlow, but is sufficiently different to not look like a derivative."
Sashleyfuck,https://esolangs.org/wiki/Sashleyfuck,2019,,turing complete,,,languages; brainfuck derivatives; low-level; stubs,"Sashleyfuck is just like Brainfuck, but it uses the letters S, A, H, L, E, and Y, in addition to the conditional constructs [ and ]. It was made after MiroslavRD being the biggest Sashley hater."
Hexar,https://esolangs.org/wiki/Hexar,2019,,,unimplemented,cell-based,languages,Hexar is an esoteric programming language which uses almost only hexadecimal numbers created by User:Enchant3d in September of 2019.
Pie,https://esolangs.org/wiki/Pie,2019,,push-down automata,unimplemented,stack-based,languages; two-dimensional languages,"Pie is an 2-dimensional esoteric programming language created by User:InfiniteDonuts that is sort of a Befunge/PATH hybrid.
Like Befunge, it has strings and uses a stack for memory operations, and both arrows (like Befunge) and mirrors (like PATH and SNUSP) can be used for program flow. It currently has no interpreter."
Resource,https://esolangs.org/wiki/Resource,2019,,,implemented,queue-based,languages; golfing language,Resource ([Re]stricted [source]) is a queue-based EPL invented by User:A created with restricted source challenges in mind and tries its best to make them trivial. It currently sucks at these challenges though.
Emojicode,https://esolangs.org/wiki/Emojicode,2016,object-oriented paradigm,,implemented,,languages; high-level,Emojicode is a programming language with emoji as reserved words and function names.
Stable,https://esolangs.org/wiki/Stable,2019,,unknown computational class,,stack-based,languages,"Stable is an esoteric programming language that can push only zeroes. The only way to get nonzero number is to preserve the initial stack. This language is inspired by Volatile. This language can be interpreted as deterministic subset of Volatile with initial stack of [1], instead of empty stack."
Blyat,https://esolangs.org/wiki/Blyat,2019,,turing complete,,,languages,Blyat is a modded Cyrillic++ just to use CS:GO meme terms instead of normal code.
Human's mind have sex with someone,https://esolangs.org/wiki/Human's mind have sex with someone,2019,,turing complete; turing tarpits,implemented,cell-based,languages; stubs; brainfuck equivalents; brainfuck derivatives; low-level,Human's mind have sex with someone is a stupid TrivialBrainfuckSubstitution which uses unabbreviated commands instead of abbreviated symbols.
Here's to the crazy ones,https://esolangs.org/wiki/Here's to the crazy ones,2019,,,,,languages,"Here's to the crazy ones is a inspiration of Shakespeare Programming Language adjusted to reference Apple's TextEdit icon before Yosemite, saying ""Dear Kate, Here's to the crazy ones."""
Transceternal,https://esolangs.org/wiki/Transceternal,2019,,turing complete,implemented,,languages,"Transceternal is very similar to Realm, but while Realm stores some data outside the graph (source code, instruction pointer, nested level, etc), this programming language stores everything in the memory."
Rouedeux,https://esolangs.org/wiki/Rouedeux,2019,,unknown computational class,implemented,,languages,"Rouedoux (pronounced roo-doo) is an esoteric programming language created by User:Matthew in October 2019. The name Rouedeux is composed of the French words roue - wheel,
and deux - two. This name is in reference to the two ""wheels"" that Rouedeux utilizes for all of its functions: the Alphabet Wheel and the Tape Wheel. Since it utilizes wheels, it is a turning tarpit."
NeverGonna,https://esolangs.org/wiki/NeverGonna,2019,,turing complete,implemented,,languages; thematic,"NeverGonna is an esoteric programming language that is designed to look like the famous song ""Never Gonna Give You Up""."
A?!,https://esolangs.org/wiki/A?!,,,finite state automata,implemented,,thematic; languages,A is a programming language that uses only the letter A in its source code. Its creation year is uncertain but no later than 2008.
Acyclic Tag,https://esolangs.org/wiki/Acyclic Tag,2019,,turing complete; turing tarpits,output only; implemented,queue-based,languages; low-level,"Acyclic Tag is an esoteric programming language created by User:ais523 in 2019. It's heavily inspired by cyclic tag, but aims to be even simpler to implement: compiling Acyclic Tag to cyclic tag is easy, but the other direction is much more difficult. This means in turn that Acyclic Tag can be used to prove more languages Turing-complete than cyclic tag can."
Oxcart,https://esolangs.org/wiki/Oxcart,2019,,unknown computational class,no io,stack-based,languages,"Oxcart is a continuation-passing concatenative language created by Chris Pressey in 2019.  It is ""purely concatenative"" in the sense of Wagon, Equipage, and Carriage: there are no nested blocks and no names, the program is just one long string of symbols."
PTSL,https://esolangs.org/wiki/PTSL,,,,unimplemented,stack-based,languages; low-level,"PTSL or Portable Terse Stack Language is a language designed by User:Moon for use in a simulated universe/tabletop game/community written world. It is intended as a mechanism for storing programs on cartridges designed to run on multiple systems. Due to its nature as a terse language, it's also rather esoteric, hence it being documented on this wiki."
Kill,https://esolangs.org/wiki/Kill,2019,,finite state automata,implemented; unusable for programming,,languages,"Kill is a one-word, Python-interpreted, joke programming language created by User:CMinusMinus."
The Program Is Mostly Ignored,https://esolangs.org/wiki/The Program Is Mostly Ignored,2019,,unknown computational class,no io; unimplemented,queue-based,languages; low-level,"The Program Is Mostly Ignored (or TPIMI for short) is an esoteric programming language, originally created by User:ais523 in 2019 to prove 3-Echo Tag Turing-complete. ais523 subsequently created an alternate version of the language to prove 2-Echo Tag Turing complete."
Seclusion,https://esolangs.org/wiki/Seclusion,2019,,turing complete,implemented,,languages,"In the Universal Turing machine, the memory is linear and data pointer can move one cell at a time. That makes it very hard to work with lists, matrices, graphs, etc. Seclusion is a Turing tarpit programming language, in which data pointer can be moved in infinitely many different directions at any point."
Nine,https://esolangs.org/wiki/Nine,2019,,turing complete,implemented,,languages,"Nine (Next Line) is an esoteric programming language, created by User:CMinusMinus."
NFuck,https://esolangs.org/wiki/NFuck,2019,,turing complete; turing tarpits,implemented,multi-dimensional languages; cell-based,languages; brainfuck derivatives; low-level,Basically this is brainfuck with N dimensions.
BrainCurry,https://esolangs.org/wiki/BrainCurry,,functional paradigm,,implemented,,brainfuck derivatives; languages,"BrainCurry is a close-to-functional Brainfuck derived language named after Haskell Curry. The idea is to make a semi-functional variant of Brainfuck by introducing lambdas. These lambdas are function objects that themselves hold BrainCurry code, and they can be defined and called in the middle of regular code as needed. In this article basic familiarity with Brainfuck is assumed."
StuLa,https://esolangs.org/wiki/StuLa,,,,implemented,,languages,"StuLa (Stupid Language) is a programming language, made by User:CMinusMinus in 2019. It has variables, import options, input and output, 3 main variable types and functions."
Earfuck,https://esolangs.org/wiki/Earfuck,,,turing complete; turing tarpits,unimplemented,cell-based,languages; brainfuck derivatives; low-level,"Earfuck is a brainfuck variation made by User:Quadril-Is. It uses the pentatonic scale, which is known to sound pleasant."
Unsquare,https://esolangs.org/wiki/Unsquare,,,,implemented,stack-based,languages,"Unsquare was named after Dave Brubeck's Unsquare Dance. Unsquare Dance is unusual in rhythm, and so is the esolang."
BIX Queue Subset,https://esolangs.org/wiki/BIX Queue Subset,2019,,turing complete; unknown computational class,no io; implemented,queue-based,meta-languages; low-level,"The BIX Queue subsets are a set of esoteric programming languages devised by User:ais523 in 2019, that work roughly like cyclic tag systems. The set of languages is interesting because it seems to contain multiple different languages whose computational class is non-obvious in interesting ways (typically due to uncertainty about whether or not they are Turing-complete). They may also be suitable source languages for computational class proofs in their own right, as they admit implementation even in languages with highly restricted control flow."
4DChess,https://esolangs.org/wiki/4DChess,2019,,linear bounded automata,implemented,multi-dimensional languages,languages; brainfuck derivatives,"4DChess is an esoteric programming language designed by User: Zemeckis on 18th November, 2019. It is directly inspired from Brainfuck. Instead of brainfuck's usual one-dimensional memory cell array, 4DChess uses a four-dimensional hypercube-like memory cell array of 8 cells per dimension."
Treesolang,https://esolangs.org/wiki/Treesolang,,functional_paradigm,turing complete; turing tarpits,,,languages,"Treesolang (better name pending) is a fusion between  esolangs like Thue and Fuun DNA and the lambda calculus, and is therefore a 'declarative, functional, string-replacement language', I guess. It was created by Baidicoot in early 2019 as a way to standardize the description of axiomatic logical systems like the Peano axioms, and was inspired by the Haskell type system."
Exp,https://esolangs.org/wiki/Exp,2019,,finite state automata,implemented; total; unusable for programming,,languages,"Exp (short for ""Expression"") is an esoteric programming language based on expressions, created by User:PythonshellDebugwindow."
Theseus,https://esolangs.org/wiki/Theseus,2014,functional paradigm,turing complete,implemented,,languages,Theseus is a reversible programming language that uses algebraic data types.
Orca,https://esolangs.org/wiki/Orca,,,,implemented,,languages; two-dimensional languages,"Orca is a two-dimensional esoteric programming language in which every letter of the alphabet is an operation, where lowercase letters operate on bang, uppercase letters operate each frame. This livecoding language is designed to procedurally generate MIDI, UDP or OSC messages.  It is maintained by Hundredrabbits."
The Temporary Stack,https://esolangs.org/wiki/The Temporary Stack,2019,,,implemented,stack-based,languages,The Temporary Stack is a stack-based esoteric programming language created by User:PythonshellDebugwindow.
USERA,https://esolangs.org/wiki/USERA,2019,,,output only; implemented,,languages,"USERA, or User:A is simple and great language maded by User:OsmineYT and dedicated to User:A."
Tttt,https://esolangs.org/wiki/Tttt,,,,implemented,cell-based,languages,"Tttt is a programming language that is so simple that it has 10 characters:
1.) a
2.) b
3.) c
All the way to j."
Ttttt,https://esolangs.org/wiki/Ttttt,,,,implemented,cell-based,languages,"Now if you want to know how Ttttt works, go to Tttt, because who doesn’t like go to statements. The 2 differences between Tttt and Ttttt is that Tttt has three memory slots, Ttttt uses infinite. Also Tttt has no nested loops. Ttttt does."
Bubbles,https://esolangs.org/wiki/Bubbles,2019,,turing tarpits,no io; unimplemented,,languages,"Bubbles (not to be confused with Bubble) has only one datatype: the unordered collection, which is called a bubble. However, it does not have a choice function, i.e. it is impossible to operate on a specific bubble that is inside another, only operate on all of them. There is no way to perform an operation on 'a random bubble inside that bubble' or 'the first bubble that's inside that bubble' because bubbles are opaque - indistinguishable from the outside."
Zed,https://esolangs.org/wiki/Zed,2019,,unknown computational class,implemented,stack-based,languages; brainfuck derivatives,"Zed is a language consisting of a total of 32 distinct symbols. A program consists of commands, as well as nested loops, scopes, threads, variables, and functions. Each scope has a single stack of which infinite signed long numbers may be added to. A memory value is also present.
Labels may be used for definitions or calls."
Baba is program,https://esolangs.org/wiki/Baba is program,2019,,turing complete,implemented,,languages,"Baba Is Program is a language inspired by the game ""Baba Is You"" and mostly based off of Java."
Monolog,https://esolangs.org/wiki/Monolog,,,,implemented,,languages,Monolog (MONOLOG) is a programming language created by User:CMinusMinus.
Deutsch,https://esolangs.org/wiki/Deutsch,,,,,,languages,"Deutsch is a low-level language created by the Germans, 750 years A.d."
Muppp,https://esolangs.org/wiki/Muppp,2019,,,,stack-based,languages,"Muppp is a stack based esolang made by Hex96, the commands and arguments of which are represented by arbitrary words whose length determines the identity."
User,https://esolangs.org/wiki/User,,,,,,languages,User is an esolang by hex which requires an esolangs account.
Referencement,https://esolangs.org/wiki/Referencement,2019,,turing complete,implemented,,languages,"Referencement is a functional programming language, which is similar to lambda calculus, but this language also has mechanisms for comparing two expressions and assigning a value to an identifier (which makes it possible for a function to achieve side effects). Instead of working with pointers, this language has a simple notation for representing expressions, so that the computation can easily be done using a pencil and paper."
Lightlang,https://esolangs.org/wiki/Lightlang,2019,,,implemented,,languages; brainfuck derivatives,Lightlang is an esoteric programming language designed by User:Felixcesar15 that only uses 1 bit as memory.
Glitch,https://esolangs.org/wiki/Glitch,2016,declarative paradigm,,implemented,,languages; high-level,"Glitch is a bytebeat language, used in the Glitch algorithmic synthesizer, for generating music. Its syntax is semi-compatible with other bytebeat languages (through the byte() function). The language internals are floating point numbers, which can be passed through composed functions. Like most bytebeat languages, code consists of an expression that is evaluated every timestep; the input is an unsigned integer representing how many ticks the program has run for, and the output signal is played as a sound (where the number represents the position of a speaker diaphragm). While Glitch offers low-level bitwise operations, it can be considered a high level language (in comparison to its peers), sporting such functions as: sine, conversion of musical notes to Hz frequencies, and random number generation."
(HA)pple waITING,https://esolangs.org/wiki/(HA)pple waITING,2019,,turing complete,unimplemented,,languages; low-level,(HA)pple waITING is like a Turing machine converted to a 'programming language' but without the 9000 states just to reverse 3 strings.
Ral,https://esolangs.org/wiki/Ral,2019,,turing complete; turing tarpits,implemented,cell-based; stack-based,languages; low-level,Ral is a stack-based random-access esoteric language created by Code Golf and Coding Challenges user Endenite.
"A very long language name that is very weird and yeah, this is your but its this","https://esolangs.org/wiki/A very long language name that is very weird and yeah, this is your but its this",2019,,,implemented,,languages; joke languages,"A very long language name that is very weird and yeah, this is your but its this
is Your but every Your is replaced by A very long language name that is very weird and yeah, this is your but its this.
Its acronym is AVLLNTIVWAYTIYBIT."
10Brainfuck,https://esolangs.org/wiki/10Brainfuck,,,turing complete; turing tarpits,,cell-based,languages; brainfuck_derivatives; brainfuck_equivalents,10Brainfuck is going to be my first contribution as far as esolangs are concerned. First of all programs are actually going to be written in numbers 1 ~ 8. The codes are as follow:
WordLang,https://esolangs.org/wiki/WordLang,2019,declarative paradigm,turing complete; turing tarpits,implemented,cell-based,languages; low-level,"WordLang is an turing-tarpit esoteric programming language designed on December 26, 2019 by William Rågstad. It has a meaning-like grammar and intuitive syntax and semantics.
The idea is that programs are executed using only one memory buffer that is modified with different operations. Each character has a major impact on the result, which means that typos have a serious significance and are often occurring during development."
Backhand,https://esolangs.org/wiki/Backhand,2018,,,implemented,stack-based,languages,"Backhand is an esoteric programming language created by User:Jo King which is a 1D stack based language inspired by 2D languages like  ><> and Befunge. The name comes from the phrase ""Back and Forth"", which describes the way the instruction pointer travels."
Tplntivhtpaavwtpi,https://esolangs.org/wiki/Tplntivhtpaavwtpi,2019,,,,,languages; low-level,"Tplntivhtpaavwtpi is an esolang by User:Hex96 in which you write 1s and the amount of 1's is converted to decimal and also converted to binary, which is the code to be run. The code is the same as machine code, so yeah."
StupidStackLanguage,https://esolangs.org/wiki/StupidStackLanguage,2020,,turing complete,implemented,stack-based,languages; low-level,StupidStackLanguage (or SSL) is an esoteric programming language created by Lebster in which all operations take place on a Stack
Convergaptor,https://esolangs.org/wiki/Convergaptor,2020,,,unimplemented,,languages,Convergaptor is a programming language which performs computation by searching for bit patterns in the decimal expansion of the real number defined by the source code.
!!Fuck,https://esolangs.org/wiki/!!Fuck,2020,,turing complete; turing tarpits,implemented,,languages; brainfuck equivalents; joke languages; low-level,!!Fuck is a clone of Brainfuck that uses varying amounts of !'s to indicate commands. It is a member of the TrivialBrainfuckSubstitution family of programming languages.
Marz,https://esolangs.org/wiki/Marz,2019; 2020,object-oriented paradigm,unknown computational class,unimplemented,,languages; two-dimensional languages,"Marz is a 2D, self-modifying, object-oriented esoteric programming language in development by a madman User:SoundOfScripting.
This specification may or may not be representative of the future specification and is subject to change without discretion."
Tier,https://esolangs.org/wiki/Tier,2020,,turing complete,implemented,stack-based; multi-dimensional languages,languages,"Tier is a stack-based, three-dimensional programming language, created in 2019/2020 by BN."
Animosian,https://esolangs.org/wiki/Animosian,2020,,,unimplemented,,languages; high-level,"Animosian is a scripting language invented by User:Star651 on January 2, 2020, after receiving a high-tech vision in a dream in 2004 or 2005, realizing that such a language hasn't been invented yet, and realizing that he was destined to create this language. The name Animosian is a portmanteau (blended word) made from the words ""animation"" and ""Osmosian"", in tribute to the Osmosian Order of Plain English Programming, the creators of the Plain English programming language, the general-purpose programming language with statements that are valid English sentences to the point that a beginner programmer could learn it as their first programming language. However, unlike Plain English, Animosian is an application-specific scripting language designed specifically for creating animation, still computer-generated images, and could possibly be extended for use in video game creation. This language could become its own animation software, or perhaps in the future it can become integrated with existing widely-used animation tools. Similar concepts to this have been implemented in video games such as Scribblenauts, but these ideas deserve a scripting language that can be compiled into video/image/application formats, depending on if the script is an animation, an image, or a game. And no, Animosian has nothing to do with the Ben 10 TV series, but it's legal for us to use the word because they never used that word on the TV show, it was invented in fan communities. The name is a mere coincidence."
Hyperon,https://esolangs.org/wiki/Hyperon,2020,,,unimplemented,,languages; brainfuck_derivatives,Hyperon is a hypercomputable programming language that is strictly more powerful than Turing machine. It is a brainfuck derivative with the ability to solve the Halting problem.
UnoScript,https://esolangs.org/wiki/UnoScript,2020,,,implemented,stack-based,languages; thematic,"UnoScript is a stack-based, interpreted language inspired by the UNO card game.
It aims to be as general-purpose and usable as possible while meeting the constraint that any sequence of UNO cards can be interpreted as an UNO program."
"Finite-state mach... wait, WHAT!?","https://esolangs.org/wiki/Finite-state mach... wait, WHAT!?",2020,,,implemented,,languages; brainfuck_derivatives,Content div not found
Unpseudorandom,https://esolangs.org/wiki/Unpseudorandom,2020,,,implemented,cell-based,languages; brainfuck derivatives,"Unpseudorandom is a language based on Unrandom, which provides a seed for generating brainfuck code randomly. However, in Unpseudorandom, the randomness is constrained to make meaningful programs more likely, and thus easier to construct. For example, Unrandom can generate ][, an invalid brainfuck program, unlike Unpseudorandom. Unpseudorandom code always ends in a ., never follows + or < with - or > respectively, and vice versa, and always generates [ and ] in pairs. It never follows a [...] block with another, and never generates a program with just a .."
XENBLN,https://esolangs.org/wiki/XENBLN,2019,,turing complete,unimplemented,,languages; golfing language,"XENBLN is a general-purpose code-golfing language created by User:PythonshellDebugwindow. It uses a character encoding based on the first 256 Unicode characters, but with non-printing characters replaced."
Rogex,https://esolangs.org/wiki/Rogex,2020,,,implemented,cell-based,low-level; languages,Rogex (or RGX) is an esoteric programming language created by Lebster.
Alphaprint,https://esolangs.org/wiki/Alphaprint,2020,,finite state automata,implemented; output only; unusable for programming; total,,languages,Alphaprint is a language made by User:PythonshellDebugwindow.
PlusOrMinus,https://esolangs.org/wiki/PlusOrMinus,2019,,finite state automata,implemented; output only; unusable for programming; total,,languages,PlusOrMinus is an esoteric programming language created by User:PythonshellDebugwindow.
LogicF---,https://esolangs.org/wiki/LogicF---,2020,,,unimplemented; unusable for programming,cell-based,languages; brainfuck derivatives; joke languages,"LogicF--- is brainfuck minus all logic, devised by User:PythonshellDebugwindow."
Line Feed,https://esolangs.org/wiki/Line Feed,2020,,,unusable for programming; implemented; total,,languages; joke languages,Line Feed is a language by User:PythonshellDebugwindow in which the only valid character is a newline. It shares a file extension (.lf) with LogicF---.
Isthmus Cyclicus Crypticus,https://esolangs.org/wiki/Isthmus Cyclicus Crypticus,2020,,,output only,,languages; thematic,"Isthmus Cyclicus Crypticus is a thematic esolang being designed by User:Salpynx, inspired by the episode Isthmus Crypticus of the animated series wikipedia:Æon Flux."
ROTfuck,https://esolangs.org/wiki/ROTfuck,2020,,turing complete,unimplemented,cell-based,languages; brainfuck derivatives; low-level; brainfuck,ROTfuck is a variation of brainfuck by User:PythonshellDebugwindow.
HaltJS,https://esolangs.org/wiki/HaltJS,2020,,,unimplemented,,languages; high-level,HaltJS is a language created by User:PythonshellDebugwindow.
!,https://esolangs.org/wiki/!,2020,,,implemented,,languages,! (pronounced 'not') is an esoteric language made by User:PersonMan.
Lazy expander,https://esolangs.org/wiki/Lazy expander,2020,,turing complete,unimplemented,,languages,Lazy expander is a programming language which works by lazy evaluating recursive functions and extracting parts of the output until the whole output is obtained.
Not Python,https://esolangs.org/wiki/Not Python,2020,,,unimplemented,,languages,Not Python is an esoteric programming language created by User:PythonshellDebugwindow.
Golden sunrise,https://esolangs.org/wiki/Golden sunrise,2020,,turing complete,implemented,,languages,Golden sunrise is a language which performs computation by replacing groups of bits with sequences of bits and/or another groups of bits.
Egel,https://esolangs.org/wiki/Egel,2015,functional paradigm,turing complete,implemented,,,Egel is an untyped functional programming language showcasing a novel graph rewriter piggybacking on C++ RAII. Its primary purpose is to allow for dynamic functional program exploration through relaxing many constraints typically found in mainstream functional languages.
Eso2D,https://esolangs.org/wiki/Eso2D,2020,,turing complete,implemented,cell-based,languages; two-dimensional languages,Eso2D is a Turing-complete 2D fungeoid made by User:PythonshellDebugwindow.
Paintfuck++,https://esolangs.org/wiki/Paintfuck++,2020,,,unimplemented,stack-based,languages,"Paintfuck++ is a derivative of Paintfuck, but now you can store data with stacks. (In Paintfuck you can't store data, you need to use the screen.)"
Nybblang,https://esolangs.org/wiki/Nybblang,2020,,,output only,stack-based,languages,Nybblang is an esolang created by User:PythonshellDebugwindow. Its name is a portmanteau of 'nybble' (4 bits) and 'esolang'.
IRCIS,https://esolangs.org/wiki/IRCIS,2020,,,implemented,,languages; two-dimensional_languages,"IRCIS (I Run Chars I See) is a 2D grid-based esoteric programming language. It was built with the idea of visualization of execution flow in mind. The program structure was inspired by Befunge's grid structure with execution flow controlled by movement commands. Apart from the movement commands, the rest of the commands and workings are completely different and unique to IRCIS."
Sunny morning,https://esolangs.org/wiki/Sunny morning,2020,,turing complete,implemented,,languages,"Sunny morning is a functional Turing-complete programming language, but each function takes exactly one argument and can perform exactly one operation."
Semper dissolubilis,https://esolangs.org/wiki/Semper dissolubilis,2020,functional paradigm; object-oriented paradigm,turing complete,implemented,,languages,Semper dissolubilis is a programming language that allows you to use types and objects without defining them.
ƎↃИAЯT,https://esolangs.org/wiki/ƎↃИAЯT,2020,,turing complete,implemented,,languages,ƎↃИAЯT (/ɛsŋɑrt/) is an esoteric programming language. The only allowed type is integer of unlimited size and the only operation is addition.
Pointless.,https://esolangs.org/wiki/Pointless.,2020,,turing_complete,implemented,,languages,Pointless is a point-free variation on 01_.
ALIMBIHNN,https://esolangs.org/wiki/ALIMBIHNN,2020,,,,stack-based,languages,A Language I Made But It Has No Name
ZFC++,https://esolangs.org/wiki/ZFC++,2020,,turing complete,implemented,,languages,ZFC++ is a programming language which works with sets and performs operations on sets.
DINAC,https://esolangs.org/wiki/DINAC,2020,,bounded-storage machine,unimplemented,,languages,DINAC is an esolang made by User:PythonshellDebugwindow.
MyScript,https://esolangs.org/wiki/MyScript,2019,,turing complete,unimplemented,,languages,MyScript is an esolang created by User:PythonshellDebugwindow in late 2019. It was based on JavaScript.
Siterip,https://esolangs.org/wiki/Siterip,2020,,turing complete,implemented,,languages; brainfuck_derivatives,Siterip is a brainfuck derivate which creates a list of all valid brainfuck programs and executes a specific program from the list.
Infinite Goto,https://esolangs.org/wiki/Infinite Goto,2020,,turing complete,implemented,cell-based,languages,Infinite Goto is an esoteric programming language created by User:PythonshellDebugwindow.
2KWLang,https://esolangs.org/wiki/2KWLang,2020,,turing complete,implemented,,languages,"2KWLang (2-Keyword Language) is an esoteric programming language created by User:PythonshellDebugwindow. It is named after its two keywords, import and print."
DAMN COVID-19,https://esolangs.org/wiki/DAMN COVID-19,2020,,,implemented,,languages,DAMN COVID-19 is a 2D programming language in which the computation is performed by infecting adjacent cells in a 2D square grid.
Spiral Rise,https://esolangs.org/wiki/Spiral Rise,2020,,unknown computational class,no io; implemented,,languages; low-level,"Spiral Rise is an esoteric programming language created by User:ais523 in 2020, heavily inspired by High Rise. Its main purpose is to allow for very small implementations in counter machines, while remaining Turing complete; the state of a running program can be stored using only two numbers, and the program itself using a further two numbers, with all the operations in the language being easy to implement on a typical counter machine."
HGFTSNOA,https://esolangs.org/wiki/HGFTSNOA,2020,,turing complete,implemented; output only,,languages,HGFTSNOA is an esoteric programming language created by User:PythonshellDebugwindow.
Self-modifying Turing machine,https://esolangs.org/wiki/Self-modifying Turing machine,2020,,,implemented,,languages,"Self-modifying Turing machine is a sort of Turing machine which uses the same memory for storing states, data, data pointer, input and output."
BrainfisHQ9+,https://esolangs.org/wiki/BrainfisHQ9+,2020,,turing complete; turing tarpits,implemented,,languages; brainfuck derivatives,BrainfisHQ9+ is a programming language created in 2020 by User:Dtuser1337 that merges Brainfuck with Deadfish and HQ9+.
Procedure,https://esolangs.org/wiki/Procedure,2020,,turing complete,unimplemented,,languages,"Procedure is an esolang by User:PythonshellDebugwindow. It is case-sensitive, whitespace-sensitive, and newlines are all \r\n."
Liberation,https://esolangs.org/wiki/Liberation,2020,,turing complete,implemented,,languages,Liberation is a string-rewriting esolang which works with a string of active and passive elements.
Pure,https://esolangs.org/wiki/Pure,2020,,turing complete,unimplemented,,languages,Pure is a standardized version of Procedure created by User:A. Pure is case-insensitive and is expected to be much terser than Procedure programs.
Minimal operation language,https://esolangs.org/wiki/Minimal operation language,2020,,finite state automata,implemented,,languages,Minimal operation language is a test esolang by User:PythonshellDebugwindow.
Babalang,https://esolangs.org/wiki/Babalang,2020,,turing complete,implemented,,languages; thematic,"Babalang is a thematic, Turing-complete esoteric programming language inspired by the rule system within the (also Turing-complete) indie game Baba Is You. The language is based around statements (akin to rules in Baba Is You), each with a subject, verb, one or more targets, and an optional condition. The language supports variables, loops, functions, structs, and basic IO operations. Babalang was written in March of 2020 by User:RocketRace, and is currently in version 1.1.1."
Halt halt halt,https://esolangs.org/wiki/Halt halt halt,2020,,turing complete,unimplemented,,languages; brainfuck_derivatives,Halt halt halt is a Turing-complete brainfuck derivative which can partially solve the Halting problem.
Hello today I am a unicorn,https://esolangs.org/wiki/Hello today I am a unicorn,2020,,turing complete,implemented,,languages,Hello today I am a unicorn is a Turing-complete programming language that has only two variables.
WebFuckLang,https://esolangs.org/wiki/WebFuckLang,,,,,,languages,"WebFuckLang is a Python-based Language inspired by the legendary logical programming-Language Brainfuck. WebFuckLang combines the Syntax of Brainfuck - an add a few more features, like: 
- Use Variables 
- Output multiple 'Cells' 
- creating HTTP-Sockets 
- Input Multiple-Character-Inputs to multiple Cells 
- break the execution of the script 
- execute console-commands"
Stopwatch,https://esolangs.org/wiki/Stopwatch,2020,,turing complete,unimplemented,,languages,Stopwatch is a language invented by User:GDavid.
Bunk bed,https://esolangs.org/wiki/Bunk bed,2020,,turing complete,implemented,,languages,Bunk bed is a programming language that works with mappings of values.
Tic Tac Toe Grow,https://esolangs.org/wiki/Tic Tac Toe Grow,2020,,,,cell-based,languages; two-dimensional languages; thematic,"Tic Tac Toe Grow is a 2D language created by User:Icecream17.
There's a mainBoard and 3 memory boards.
Because you can't control much this is very hard to program in."
Indent,https://esolangs.org/wiki/Indent,2020,,,unimplemented; output only,,languages,Indent is an esolang by User:PythonshellDebugwindow.
Elevated Parser,https://esolangs.org/wiki/Elevated Parser,2020,,,implemented,,languages,Elevated Parser is a tool for converting source code to abstract syntax tree based on syntax definitions. It can also be viewed as a programming language that determines whether the given source code can be parsed using the given syntax definitions. This parser is used to parse the majority of programming languages invented by User:Hakerh400 and a few other languages.
PureBrainz,https://esolangs.org/wiki/PureBrainz,2020,,,unimplemented,,languages; brainfuck derivatives,"PureBrainz was inspired by brainfuck and tries to keep the basis, the spirit, while implementing proper tools to make programs.
These tools include variables (anchor-points) in the memory-tape, multiple kinds of loops, that can either be hard-coded or depend on a memory cell, as well as functions that can take in pointer positions as arguments, and ternary operations (if/else), and finally, modules, which means you can create a package manager, and have libraries! You can too, import raw data from files."
FishScript,https://esolangs.org/wiki/FishScript,2020,,,unusable for programming; implemented; works-in-progress,stack-based,languages,FishScript is another fish language made by User:Watermelon3D. It is largely a work in progress.
Strvar,https://esolangs.org/wiki/Strvar,2020,,,implemented; output only,,languages,Strvar is an esolang by User:PythonshellDebugwindow based on string rewriting.
4RL,https://esolangs.org/wiki/4RL,2020,,,implemented,,languages; brainfuck derivatives,"4RL (pronounced ""for real"") is an esoteric programming language created by User:Frogstair in April 2020, and is a breed of brainfuck."
Egaharjb,https://esolangs.org/wiki/Egaharjb,2020,,turing complete; turing tarpits,implemented,,low-level; languages,"Egaharjb is a very simple language I (Daniel Cristofani) designed accidentally. It consists only of regex substitutions with loops; it's meant for banging text files into a different shape, but is incidentally Turing-complete because Markov algorithms translate to it easily."
Gummy Bear,https://esolangs.org/wiki/Gummy Bear,2020,,turing complete,implemented,,languages,Gummy Bear is a string-rewriting esolang.
Phile,https://esolangs.org/wiki/Phile,2020,,turing complete,implemented,,languages,"Phile is an esolang by User:PythonshellDebugwindow. Its name is a play-on-words of the word ""phile"" and the word ""file"", a major part of the language."
Happy Fantasy,https://esolangs.org/wiki/Happy Fantasy,2020,,turing complete,implemented,,languages,Happy Fantasy is a Golden sunrise derivative which supports function names (mnemomics for arrays of bits).
Stackint,https://esolangs.org/wiki/Stackint,2020,,,implemented,stack-based,languages,"Stackint is an esolang by User:PythonshellDebugwindow. Its only method of storage is, as its name suggests, a stack of integers."
Packlang,https://esolangs.org/wiki/Packlang,2020,,turing complete,unimplemented,,languages,Packlang is an esolang by User:PythonshellDebugwindow.
The Past,https://esolangs.org/wiki/The Past,2020,,,unusable for programming; total; output only; implemented,,languages,The Past is a time-traveling esolang by User:PythonshellDebugwindow.
MangularJS,https://esolangs.org/wiki/MangularJS,2020,,unknown computational class,unimplemented,,languages; high-level,MangularJS (MJS) is a restricted version of NodeJS created by User:PythonshellDebugwindow.
Uack,https://esolangs.org/wiki/Uack,2020,,,unimplemented; total,stack-based,languages,Uack is an esolang made by User:PythonshellDebugwindow.
Double Helix,https://esolangs.org/wiki/Double Helix,2020,,,implemented,,languages,Double Helix is an esolang which operates on DNA. The computational class of this language is unknown.
Unary Filesystem,https://esolangs.org/wiki/Unary Filesystem,2020,,turing complete; turing tarpits,,,languages; brainfuck derivatives; brainfuck equivalents; low-level; golfing language,Unary Filesystem is a Unary-derived OS and esolang by User:PythonshellDebugwindow.
Cortex language 3A,https://esolangs.org/wiki/Cortex language 3A,2020,,turing complete,unimplemented,cell-based,languages,Cortex language 3A is an esolang by User:PythonshellDebugwindow that follows the specifications of a Cortex language 3.
Rhoam,https://esolangs.org/wiki/Rhoam,,,turing complete; turing tarpits,implemented,,languages,Rhoam is an esoteric programming language created by User:EvilMuffinHa in 2019 in which there are only 3 characters.
Wrapping Rhoam,https://esolangs.org/wiki/Wrapping Rhoam,,,turing complete; turing tarpits,implemented,,languages,Wrapping Rhoam is an esoteric programming language created by User:EvilMuffinHa in 2019 in which there are only 2 characters. It is an extension of Rhoam.
Rhoam Ultimate,https://esolangs.org/wiki/Rhoam Ultimate,,,turing complete; turing tarpits,implemented,,languages,Rhoam Ultimate is an esoteric programming language created by User:EvilMuffinHa in 2019 in which there is only 1 character. It is an extension of Wrapping Rhoam.
FROM HERE TO THERE,https://esolangs.org/wiki/FROM HERE TO THERE,2020,,unknown computational class,implemented,,languages,FROM HERE TO THERE is an esolang by User:PythonshellDebugwindow.
Padlock,https://esolangs.org/wiki/Padlock,,functional paradigm,turing complete; turing tarpits,no io,,languages; thematic,"Padlock is a thematic, Turing-complete process calculus based on the mathematical model of π-calculus, by User:RocketRace."
Regimin,https://esolangs.org/wiki/Regimin,2020,,turing complete; turing tarpits,implemented; no io,,languages; two-dimensional languages; low-level,Regimin is a minimal 2D Turing-complete esolang by User:PythonshellDebugwindow.
Befinde,https://esolangs.org/wiki/Befinde,2020,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck_derivatives; low-level,"Befinde is a variation of &brainfuck with relative addressing and fixed-sized cells, which makes writing compilers and interpreters easier, but writing programs maybe harder."
Dig,https://esolangs.org/wiki/Dig,2020,,,implemented,cell-based,languages; two-dimensional languages; high-level,"Dig is a language made by User:Emerald using a 2d grid, with a 3rd direction for the language’s namesake, Dig. It is inspired by Befunge-93 and ><>, but is no way related to DigFill, a similarly sounding language."
2001: An Esolang Odyssey,https://esolangs.org/wiki/2001: An Esolang Odyssey,2020,,turing complete,implemented,cell-based,languages; brainfuck derivatives; thematic,2001: An Esolang Odyssey is a programming language designed to be executed by HAL 9000 computers. It was developed by User:PythonshellDebugwindow.
6969 Assembler,https://esolangs.org/wiki/6969 Assembler,2020,,,implemented,,languages; low-level,"6969 Assembler (sometimes 6969 ASS-embler) is a assembler-like programming language made by User:CMinusMinus in 2020.
The goal is to create a language hard enough so no usable program can be created with it in reasonable time. Idea: List of ideas: Partially silly ideas"
Algebraic Programming Language,https://esolangs.org/wiki/Algebraic Programming Language,2020,,turing complete,unimplemented,,languages,Algebraic Programming Language or (APL for short) is an esolang by User:PythonshellDebugwindow based on algebra.
Acrostic,https://esolangs.org/wiki/Acrostic,2020,,unknown computational class,implemented,stack-based,languages; two-dimensional languages,"Acrostic is a stack-based esoteric programming language written
by User:Mercerenies, designed to have the visual appearance of a
crossword puzzle."
Bout,https://esolangs.org/wiki/Bout,2020,,turing complete,implemented,cell-based,languages; low-level,Bout is an assembly-like esolang created by User:PythonshellDebugwindow.
HydraLoop,https://esolangs.org/wiki/HydraLoop,2020,,,total,,languages,"Variable names can be any sequence of ASCII letters, numbers, underscores. Variable names are case-sensitive."
Binary,https://esolangs.org/wiki/Binary,2020,,,implemented,,languages; low-level,This language is made by User:DimensionDoors. It is his first one. Yay!
Psyche,https://esolangs.org/wiki/Psyche,2020,functional paradigm,turing complete,no io; unimplemented,,languages,Psyche is a marriage of the SKI combinator calculus with Freudian theories of the human mind.
—-,https://esolangs.org/wiki/—-,2020,,,implemented,cell-based,languages,"—- is an esolang by User:PythonshellDebugwindow. It uses only two characters, — and -."
Ports,https://esolangs.org/wiki/Ports,2020,,turing complete,implemented,,languages,"Ports is a Turing-complete imperative esoteric programming language invented by User:AnimaLibera in 2020. It deals with the concept of spaces, ports and links in an original way. The main challenge of this programming language is to store an arbitrary amount on information with links."
Bias,https://esolangs.org/wiki/Bias,2020,,turing complete,unimplemented,cell-based,languages,Bias is an esolang by User:PythonshellDebugwindow.
Callable,https://esolangs.org/wiki/Callable,2020,,turing complete,implemented,,languages,Callable is an esoteric programming language created by User:PythonshellDebugwindow.
Circles,https://esolangs.org/wiki/Circles,2020,,unknown computational class,implemented; usability unknown,,languages; low-level; two-dimensional languages,Circles is an esolang by User:PythonshellDebugwindow. It works by moving from circle to circle and performing operations on them.
B^2,https://esolangs.org/wiki/B^2,2020,,,implemented,,languages; high-level,"B2, also known as B^2 and B2, is a programming language intended to make programming very simple and use plain language. It is pronounced bee-squared. B2 stands for ""Basic Basic."" It has a compiler (and editor) written in Javascript which compiles B2 to WebAssembly text format. When version 1.0 comes out it is planned that it will also compile to WebAssembly binary format and will allow users to easily download their program and run it. It has many common elements seen in programming languages. B2 is a bounded-storage machine, see ""Computational Class"" for details."
Huf,https://esolangs.org/wiki/Huf,2020,,,unusable for programming; total; output only; implemented,,languages; joke languages,huf is a time consuming and useless language. Its syntax is a little similar to brain****. Made by Charlie Hough or User:Charmaster16. Functionality is similiar to EXCON.
COD,https://esolangs.org/wiki/COD,2020,,unknown computational class,unimplemented,concurrent programming,languages; two-dimensional languages,COD is a two-dimensional esolang by User:PythonshellDebugwindow where cod are the instruction pointers. It has nothing to do with Deadfish.
X,https://esolangs.org/wiki/X,2020,,,,,joke languages; stubs; languages,"X is a language invented by a fictional character appearing here in the XKCD web comic. This comic could be considered the formal specification for the language but for the fact that it is rather incomplete. As such, what we have functions more as a definition for a class of languages that share the following properties:"
Lamfunc,https://esolangs.org/wiki/Lamfunc,2020,functional paradigm,turing complete,unimplemented,,languages,Lamfunc is a functional esolang by User:PythonshellDebugwindow.
Movesum,https://esolangs.org/wiki/Movesum,2020,,unknown computational class,implemented,,languages,Movesum is an esolang by User:PythonshellDebugwindow where the only instructions are move and sum.
Interprogck8,https://esolangs.org/wiki/Interprogck8,2019,,unknown computational class,unimplemented,,languages,"Interprogck8 is an esolang by User:PythonshellDebugwindow. It uses a mixture of normal integers and ""dice literals"" to store values in its single accumulator."
Eval,https://esolangs.org/wiki/Eval,2020,,,implemented,stack-based,languages,Eval is a stack-based esolang by User:PythonshellDebugwindow.
Grapheme,https://esolangs.org/wiki/Grapheme,2020,,turing complete,unimplemented,stack-based,languages,Grapheme is an esolang by User:PythonshellDebugwindow where the only valid characters are uppercase Latin letters.
🔒 Encrypted 🔒,https://esolangs.org/wiki/🔒 Encrypted 🔒,2020,,turing_complete,unimplemented,,languages,🔒 Encrypted 🔒 is an esolang which can reliably send data over an unreliable network.
(1) Grace sent you a message,https://esolangs.org/wiki/(1) Grace sent you a message,2020,,turing_complete,unimplemented,,languages; brainfuck_derivatives,(1) Grace sent you a message is a Turing-complete brainfuck derivative which is based on linear bounded automata.
Parentheses only,https://esolangs.org/wiki/Parentheses only,2020,,,implemented,,languages,Parentheses only is an esolang which consists only of parentheses.
Forbin,https://esolangs.org/wiki/Forbin,2020,,,unimplemented,,languages,Forbin is an esolang by User:PythonshellDebugwindow.
Almost Binary,https://esolangs.org/wiki/Almost Binary,2020,,,implemented,,languages,"Almost Binary is a new esoteric, hybrid programming language written in C#. The project was originally created by Kevin Riedl."
Jumplang,https://esolangs.org/wiki/Jumplang,2020,,turing complete,implemented,,languages; brainfuck derivatives; low-level,Jumplang is a brainfuck-derived esolang by User:PythonshellDebugwindow designed to be easier to implement in another esolang than normal brainfuck.
LS Basic,https://esolangs.org/wiki/LS Basic,2020,,turing complete,implemented,,languages,"LS Basic or Letter-Sum Basic is a simplified dialect of BASIC written by User:Simplemaker which operates entirely on the sums of the values of the letters of each command. This leads to a reasonably easy-to-use language which can be heavily obfuscated, because many words have the same score."
Piquant,https://esolangs.org/wiki/Piquant,2020,,,implemented,,languages,"Piquant is an esoteric programming language, in which all code blocks are treated as conditionally selectable states."
Anti-Array,https://esolangs.org/wiki/Anti-Array,,,,implemented,,languages,Anti-Array is a programming language without arrays or stacks.
Zfuck,https://esolangs.org/wiki/Zfuck,2020,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; low-level,Zfuck is a minimal Turing-complete 3-command variation of Smallfuck discovered by User:PythonshellDebugwindow. It was developed independently of Nanofuck.
Fading Rainbow,https://esolangs.org/wiki/Fading Rainbow,2020,,turing complete,implemented,,languages,"Fading Rainbow is a string-rewriting esolang. It may seem similar to Encapsulation, Thue and 1.1, but it is fundamentally different. Instead of matching and replacing a single occurrence of a substring in each step, Fading Rainbow deletes the entire string, keeping only substrings (their replacements) that matched in the current iteration."
ABCDE,https://esolangs.org/wiki/ABCDE,2020,,turing complete,implemented,,languages,ABCDE is a Turing complete extension to ABCD made by User:CodeLongAndProsper90.
International Phonetic Esoteric Language,https://esolangs.org/wiki/International Phonetic Esoteric Language,2020,,,implemented,stack-based,languages,"The International Phonetic Esoteric Language, abbreviated to IPEL, is a stack-based esoteric programming language by User:Bigyihsuan based on the idea of using the Wikipedia:International Phonetic Alphabet (IPA) as the primary instruction set. Its interpreter can be found here"
Writeover,https://esolangs.org/wiki/Writeover,,,,unimplemented; total; output only,,languages,Writeover is a string-uncertainty language by User:PythonshellDebugwindow made in 2019 or 2020.
Varigen,https://esolangs.org/wiki/Varigen,2020,object-oriented paradigm,,unimplemented; output only,deque-based; cell-based; stack-based; concurrent programming; graphical output,languages; quantum computing; high-level,"Varigen is an esolang by User:PythonshellDebugwindow. It is an uncomputable output-only high-level object-oriented string-rewriting non-textual pseudonatural self-modifying programming language with graphical output that uses concurrent programming, a deque, a tape, and a stack."
DJ Qarkegs - Above The Sky,https://esolangs.org/wiki/DJ Qarkegs - Above The Sky,2020,,turing complete; turing tarpits,implemented,stack-based,languages,DJ Qarkegs - Above The Sky is a Turing-complete stack-based language. It has a single stack and no other data storage locations.
Entrance,https://esolangs.org/wiki/Entrance,2020,declarative_paradigm,turing_complete,implemented,,languages,Entrance is an advanced fully automatic theorem prover.
Visify,https://esolangs.org/wiki/Visify,2020,,turing complete; turing tarpits,implemented; no io,,languages; low-level,Visify is an assembly-like esolang by User:PythonshellDebugwindow that can be used to draw graphics.
GORBITSA,https://esolangs.org/wiki/GORBITSA,2020,,,implemented,,languages; low-level,GORBITSA is a novelty esoteric programming language created by David Barr (aka javidx9) as a programming challenge for One Lone Coder community. It's jokingly named after one of community moderators Gorbit. It first appeared in OLC Discord server on 17th June 2020.
Gabuzomeu,https://esolangs.org/wiki/Gabuzomeu,2020,,turing complete,implemented,,languages,Welcome !
Rui,https://esolangs.org/wiki/Rui,2020,,turing complete,implemented,concurrent programming,languages,"Rui is a thread-based esolang created by User:Sinthorion. All control flow and even basic arithmetic requires the use of multiple threads that create, communicate with, and destroy other threads. The source code (file extension .rui) is a single file with any number of lines of code."
Annihilator,https://esolangs.org/wiki/Annihilator,2020,,unknown computational class,unimplemented,stack-based,languages; low-level,"Annihilator is an esoteric programming language created by User:ais523 in 2020. It is asynchronous, nondeterministic and probabilistic, with no commands but the function call; conditionals are done via allowing the various nondeterministic threads of execution to annihilate each other if they happen to be in the same place at the same time."
Vandevelo,https://esolangs.org/wiki/Vandevelo,2020,,unknown computational class,unimplemented; usability unknown,,languages,Vandevelo is an input-only esolang by User:PythonshellDebugwindow.
Tandem,https://esolangs.org/wiki/Tandem,2020,,turing complete,implemented,,languages,"Tandem is an experimental rewriting language, designed by Chris Pressey in June 2020, where the rewrite rules form a Kleene algebra."
Beautiful day,https://esolangs.org/wiki/Beautiful day,2020,functional paradigm,turing_complete,implemented,,languages,Beautiful day is a functional and string-rewriting esolang.
MAWP,https://esolangs.org/wiki/MAWP,2020,,push-down automata,implemented,stack-based,languages,MAWP is a stack-based esoteric programming language that was made in 2020.
Jumpmin,https://esolangs.org/wiki/Jumpmin,2020,,turing complete,implemented,,languages; brainfuck derivatives; low-level,Jumpmin is a minimalized version of Jumplang created by User:PythonshellDebugwindow. The goal of this language is to remain a Turing-complete simple translation of Jumplang.
All Turing-complete languages are brainfuck equivalents,https://esolangs.org/wiki/All Turing-complete languages are brainfuck equivalents,,,,concepts,,brainfuck equivalents,All Turing-complete languages are brainfuck equivalents is a family of esoteric programming languages and esoteric subsets first realized by User:PythonshellDebugwindow.
Farnsworth,https://esolangs.org/wiki/Farnsworth,2010,,turing complete,implemented,,languages; high-level,"Farnsworth is an interpreted toy language created by Ryan Voots (simcop) in 2010.  One of its uses was to convert between measurement units and currencies in IRC using an IRC bot that evaluates Farnsworth expressions, but the language kept growing from there.  The implementation is in perl."
ALT-4,https://esolangs.org/wiki/ALT-4,2020,,unknown computational class,unimplemented,stack-based; concurrent programming,languages,ALT-4 is an esolang by User:PythonshellDebugwindow.
VES++,https://esolangs.org/wiki/VES++,2020,,turing complete,implemented,,languages,"VES++ has included the most common languages from west Europe (and for some random reason the Turkish language is also included). This way many people are able to understand a part of the code, yet (probably) not everything. In my opinion it is a fun way to get involved with other languages!"
State and Main,https://esolangs.org/wiki/State and Main,2020,,unknown computational class,unimplemented,,languages,State and Main is an esolang by User:PythonshellDebugwindow.
↑110010000100110110010,https://esolangs.org/wiki/↑110010000100110110010,2020,,unknown computational class,implemented; usability unknown,,languages,↑110010000100110110010 is an esolang by User:PythonshellDebugwindow.
Ni,https://esolangs.org/wiki/Ni,2020,,turing_complete,implemented,cell-based,languages; brainfuck_derivatives; high-level,Ni is an esoteric programming language influenced by brainfuck. The name Ni comes from Nicaragua. Created by User:DeybisMelendez.
Linear bounded brainfuck,https://esolangs.org/wiki/Linear bounded brainfuck,2020,,linear bounded automata,implemented,,languages; brainfuck derivatives; low-level,"Linear bounded brainfuck is brainfuck as a linear bounded automaton, created by User:PythonshellDebugwindow."
N Refine,https://esolangs.org/wiki/N Refine,2020,,unknown computational class,implemented; no io; usability unknown,,languages,N Refine is an OISC esolang by User:PythonshellDebugwindow.
Minsky Swap,https://esolangs.org/wiki/Minsky Swap,2020,,turing complete,implemented,,languages,Minsky Swap is an esolang based on Minsky machines and created by User:PythonshellDebugwindow.
Snowflake (Orisphera's edition),https://esolangs.org/wiki/Snowflake (Orisphera's edition),2013,,unknown computational class,unimplemented,concurrent programming; stack-based,languages,"Snowflake (Orisphera's edition) is Snowflake with some tweaks made as an attempt to fix some issues with FORK and SPOON. It is a reversible, self-modifying, data-parallel esoteric programming language. Its most notable unusual feature is that unlike most self-modifying languages, both the program and interpreter modify themselves during execution, and the changes to both the program and interpreter overwrite the original files, permanently changing what will happen the next time that the program runs. As such, a program and interpreter grow together over the course of many executions, becoming more and more specialized to each other; the ultimate goal of a Snowflake programmer is to produce a program that will eventually (given enough time and luck) optimize itself down to a single command, that has the same effect that the original program did."
UFSA,https://esolangs.org/wiki/UFSA,2020,,finite state automata,implemented,,languages; meta-languages,UFSA (Universal Finite State Automaton) is an esolang by User:PythonshellDebugwindow. It can be used to describe any finite-state automaton.
Transposed,https://esolangs.org/wiki/Transposed,2020,,,implemented,cell-based,languages; low-level,Transposed is a matrix-based esolang created by User:ZippyMagician.
Integer,https://esolangs.org/wiki/Integer,2020,,turing complete,implemented,,languages,Integer is a Turing-complete integer-rewriting language. In this article the term number means non-negative integer.
Interstack,https://esolangs.org/wiki/Interstack,2019,,,implemented; total,stack-based,languages,Interstack (formerly Brainstack (nothing to do with Brainstack)) is an esolang made by User:PythonshellDebugwindow.
Blues machine,https://esolangs.org/wiki/Blues machine,2020,,turing complete,implemented; no io,,languages; low-level,The blues machine is an OISC esolang by User:PythonshellDebugwindow.
Queuenanimous,https://esolangs.org/wiki/Queuenanimous,2020,,unknown computational class,implemented; no io,queue-based,languages,Queuenanimous is an esolang by User:PythonshellDebugwindow.
＿,https://esolangs.org/wiki/＿,2020,,push-down automata,implemented; no io,,languages,_ is an esolang by User:PythonshellDebugwindow.
Objects In Mirror Are Heavier Than They Appear,https://esolangs.org/wiki/Objects In Mirror Are Heavier Than They Appear,2020,,unknown computational class; unknown computational class,unimplemented; no io,particle automata,languages; two-dimensional languages,Objects In Mirror Are Heavier Than They Appear is a particle automaton by User:PythonshellDebugwindow.
｛｝,https://esolangs.org/wiki/｛｝,2020,,unknown computational class; turing complete,unimplemented; no io; usability unknown,,languages; brainfuck equivalents,{} is a family of esolangs by User:PythonshellDebugwindow.
Rubic,https://esolangs.org/wiki/Rubic,2020,,,unimplemented; total,,languages; low-level,Rubic is an esoteric programming language created by User:Digital Hunter inspired by the Rubik's Cube puzzle.
Synced,https://esolangs.org/wiki/Synced,2020,,,implemented,cell-based,languages; low-level,Synced is an esolang designed by User:ZippyMagician one day due to boredom.
Number Seventy-Four,https://esolangs.org/wiki/Number Seventy-Four,2020,,finite state automata,implemented; output only,,languages,Number Seventy-Four is a string-rewriting esolang by User:PythonshellDebugwindow.
Affine Mess,https://esolangs.org/wiki/Affine Mess,2020,,finite state automata,implemented,,languages,"Affine Mess is an esoteric programming language created by User:Caenbe. Its purpose is to explore what is possible when the programmer can use XOR and NOT freely, but can't use AND except where the language allows. How well it accomplishes that purpose is debatable, because the programmer is also hindered by the fact that there are only 25 bits in the memory. Despite this, some popular problems are possible (with some caveats). There may be another language in the future based on this one which implements infinite memory. This language is inspired by XOṘ Mạchịne. Like that language, the only command is the XOR command. I/O and AND operations are memory mapped, and the entire program runs in an implicit loop."
Factor,https://esolangs.org/wiki/Factor,2020,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck equivalents; low-level,"Factor (also known as Factors) is a zero-dimensional, cell-based, imperative programming language invented by User:Bangyen in 2020."
Techno,https://esolangs.org/wiki/Techno,2020,,turing complete; turing tarpits,no io; implemented,,low-level; languages,"Techno is a sort of one-instruction language designed by Keymaker, published in 2020."
Your Time Is Up,https://esolangs.org/wiki/Your Time Is Up,2020,,turing complete,unimplemented,,languages,Your Time Is Up is a string-rewriting esolang by User:PythonshellDebugwindow.
Clockwise,https://esolangs.org/wiki/Clockwise,2020,,unknown computational class,implemented,,languages; two-dimensional languages,Clockwise is a two-dimensional esolang by User:PythonshellDebugwindow where the only turns are 90° clockwise.
Point Break,https://esolangs.org/wiki/Point Break,2020,,turing complete; turing tarpits,unimplemented,,languages,Point Break is an esolang by User:PythonshellDebugwindow.
Vertical,https://esolangs.org/wiki/Vertical,2020,,turing tarpits,implemented,stack-based,languages,"Vertical is an esoteric programming language made to be unreadable by User:Deppong that uses only vertical characters, and has a single stack as well 
as a single register."
Gödelfish,https://esolangs.org/wiki/Gödelfish,2019,,turing complete,implemented,,languages,"Gödelfish is based on a Gödel numbering of the esoteric programming language Deadfish. It is also a Turing complete Zero-dimensional programming language in its own right, based on a specific translation to (and from) Brainfoctal."
Serenity,https://esolangs.org/wiki/Serenity,2020,,turing complete,implemented,,languages,"Serenity is an object-oriented esoteric programming language. In this language everything is an object, including boolean values, numbers, object keys, symbols, arrays, strings, functions, etc. There are no constraints regarding what you can do with each type of object, so you can multiply strings like numbers, call integers like functions, push a value into a literal identifier like it is an array, modify function body like it is an ordinary object, and so on. You can even modify values of literal constants: for example you can change constant Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (""Math extension cannot connect to Restbase."") from server ""https://en.wikipedia.org/api/rest_v1/"":): {\displaystyle 2}
 to be Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (""Math extension cannot connect to Restbase."") from server ""https://en.wikipedia.org/api/rest_v1/"":): {\displaystyle 3}
 and from that point on, all operations and functions that would normally return Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (""Math extension cannot connect to Restbase."") from server ""https://en.wikipedia.org/api/rest_v1/"":): {\displaystyle 2}
 as the result will return Failed to parse (SVG (MathML can be enabled via browser plugin): Invalid response (""Math extension cannot connect to Restbase."") from server ""https://en.wikipedia.org/api/rest_v1/"":): {\displaystyle 3}
 instead. The are no runtime errors (all syntactically valid programs do not produce any errors)."
Transortogonal Polymorphism,https://esolangs.org/wiki/Transortogonal Polymorphism,2020,,turing complete,implemented,,languages,Transortogonal Polymorphism is an esoteric programming language invented by User:Hakerh400 in 2020.
Palace,https://esolangs.org/wiki/Palace,2020,,turing complete,implemented,,languages,"Palace is a functional programming language that implements some sort of Peano arithmetic. It is similar to ƎↃИAЯT, but in this language there is no addition. Instead, the successor operator is the only predefined operator. All values are non-negative integers and the only constant that can appear in the source code is zero."
Transfinity,https://esolangs.org/wiki/Transfinity,2020,,,unimplemented,,languages,Transfinity is a functional programming language that works with some sort of transfinite recursion.
Subreal,https://esolangs.org/wiki/Subreal,2020,,turing complete,implemented,stack-based,languages,"Subreal is a Turing complete, stack-based, imperative esoteric programming language based on one of John Conway's famous research, the surreal numbers. Subreal programs operate on three stacks containing surreal numbers, with a focus on recursion."
Boolshit,https://esolangs.org/wiki/Boolshit,2020,,,,,languages,"Boolshit is a Boolfuck derivative that does not have any I/O instructions, but can still perform I/O operations."
Selmotic,https://esolangs.org/wiki/Selmotic,2020,,unknown computational class,unimplemented; usability unknown,cell-based,languages,"Selmotic (short for Self-modifying time code) is an esoteric programming language created by User:Caenbe to explore the idea of a time virus, which is something that creates itself via time travel and interferes with your code. In the event time travel is ever invented, this language should serve as a warning not to use any language like itself. Besides being based on other time-travelling esolangs, Selmotic is mostly based on assembly and brainfuck."
Turinf machine,https://esolangs.org/wiki/Turinf machine,2020,,unknown computational class,unimplemented,,languages,"Turinf machine is a Turing machine that has infinitely, but countably, many states."
!aBF',https://esolangs.org/wiki/!aBF',2020,,unknown computational class,implemented; usability unknown; output only,,languages,"!aBF' is the language whose name is pronounced ""not a brainfuck derivative"". The language uses 5 commands which manipulate a sole accumulator. The accumulator initially starts at zero. Additionally, new commands can be appended to the end of the program during execution, making loops possible."
Blarb,https://esolangs.org/wiki/Blarb,,,,,stack-based,languages; low-level,"Blarb is designed to be the simplest possible (esoteric) systems programming language. Being as such, there is only one logical operator: NAND. It is an assembly-like, stack & register based language."
Math&Matrix,https://esolangs.org/wiki/Math&Matrix,2020,,,,stack-based,languages,"Math&Matrix is a language based on a matrices list. Each matrix in this list is an instruction based on math properties (determinant, invertibility, diagonal/triangle equivalant, ...)
This language is stack-based"
Unleash,https://esolangs.org/wiki/Unleash,2020,,turing complete,implemented,,languages,Unleash is an esoteric programming language inspired by Unlambda and Underload. It can be viewed either as stack-based or string-rewriting language.
Pyramid Scheme,https://esolangs.org/wiki/Pyramid Scheme,2017,functional paradigm,turing complete,implemented,,two-dimensional languages,"Pyramid Scheme is an esoteric programming language created by Conor O'Brien in early 2017. It is a dialect of Lisp, but it uses ascii-art pyramid structures as opposed to brackets."
5D Brainfuck With Multiverse Time Travel,https://esolangs.org/wiki/5D Brainfuck With Multiverse Time Travel,2020,,turing complete; turing tarpits,implemented,cell-based; multi-dimensional languages; concurrent programming,languages; brainfuck derivatives; low-level,5D Brainfuck With Multiverse Time Travel is a superset of brainfuck with parallel universes and time travel. It is based on 5D Chess With Multiverse Time Travel.
5D 5D Brainfuck With Multiverse Time Travel With Multiverse Time Travel,https://esolangs.org/wiki/5D 5D Brainfuck With Multiverse Time Travel With Multiverse Time Travel,2020,,turing complete,usability unknown; unimplemented,cell-based; multi-dimensional languages; concurrent programming,languages; joke languages; low-level,5D 5D Brainfuck With Multiverse Time Travel With Multiverse Time Travel is a superset of 5D Brainfuck With Multiverse Time Travel with parallel universes and time travel. It is based on 5D 5D Chess With Multiverse Time Travel With Multiverse Time Travel. (dead link)
Tru,https://esolangs.org/wiki/Tru,2005,,,implemented,stack-based,languages,"Tru is an esoteric programming language of brackets using prefix-free code, designed by User:Swc."
Computerdeutsch,https://esolangs.org/wiki/Computerdeutsch,2020,,turing complete,unimplemented,,languages,"Computerdeutsch (""Computer-German"") is an esolang by User:Orangeyy based on the grammar of the German language."
CAPscript,https://esolangs.org/wiki/CAPscript,2020,,,implemented,,languages,"""CAPscript"" is a programming language created by User:Firethrone in August 2020 cause he was bored during online classes and had nothing better to do. Its called CAPscript cause all commands are all caps. Lower case alphabets are treated as comments."
Arn,https://esolangs.org/wiki/Arn,,functional paradigm‏‎,turing_complete,implemented,,languages; golfing language‏‎,Arn is a golfing language by User:ZippyMagician inspired by the APL family of languages. It is designed to be a Functional Paradigm.
Dawg,https://esolangs.org/wiki/Dawg,,,,implemented,,languages,For thugs that like to code.
Enterprise™,https://esolangs.org/wiki/Enterprise™,2019,,turing complete,implemented,,joke languages; thematic; languages,"Enterprise™ defines itself as a ""non-deterministic-unnecessarily-statically-typed™ Turing-complete-ish™, Quantum-out-of-the-box™ programming language"" with the goal to ""designed to create computer programs that disrupt markets""."
!@$%^&*()+,https://esolangs.org/wiki/!@$%^&*()+,,,turing complete,implemented,stack-based,languages,"!@#$%^&*()_+ is another fun stack-based language (in the broader sense) invented by User:Conor O'Brien where character literals have no delimiter with programs that resemble grawlixes (random symbols, typically on the top row of the keyboard, which replace vulgarism). Notably, it is the first language in the language list of Try It Online."
Connery,https://esolangs.org/wiki/Connery,,functional paradigm,turing complete,implemented,,languages; high-level; thematic,Connery is an esoteric programming language created by Will Cipriano in 2020. It is a experimental lisp-like interpreted programming language that has error messages themed after Sean Connery.
Halticopter,https://esolangs.org/wiki/Halticopter,2020,,,unimplemented,,languages,Halticopter is an esoteric programming language.
Modulous,https://esolangs.org/wiki/Modulous,,,,implemented,,languages,Modulous is a stack based esoteric programming language that is somewhat inspired by the assembly language. Made by User:Abyxlrz
",,,","https://esolangs.org/wiki/,,,",,,,implemented,stack-based,languages; golfing language,",,, (pronounced  'Commata' , plural of 'Comma') is another  stack-based esolang made by totallyHuman. ,,, utilizes numerous lesser-used unicode characters to manipulate the stack. Some of these characters may not be even displayed in certain devices due to technical issues, making programming in the language sometimes extremely difficult. However, ,,, is significantly useful for golfing, making extra characters useless at most cases. Its filename extension is '.,,,'. ,,, is currently a work in progress, as it lacks numerous programming statements like loops."
Categorial,https://esolangs.org/wiki/Categorial,2020,functional paradigm; object-oriented paradigm; declarative paradigm,turing complete; turing tarpits; push-down automata; finite state automata,unimplemented; usability unknown,cell-based; multi-dimensional languages; concurrent programming; concurrent programming; stack-based; queue-based; deque-based; particle automata,languages; brainfuck derivatives; low-level; two-dimensional languages; low-level; high-level; thematic; brainfuck derivatives; quantum computing; golfing language; joke languages,"Categorial is amazing, virtuous, good, great and perfect, without flaw. Any details omitted are implementation dependant. Programs are to be supplied as an image of the source code."
Conglument,https://esolangs.org/wiki/Conglument,2020,,turing complete,implemented,,languages,Conglument is an esolang that literally follows the definition of general recursive functions.
ByteByteFork,https://esolangs.org/wiki/ByteByteFork,,,,implemented,cell-based,languages; low-level,ByteByteFork is ByteByteJump with (pseudo) multithreading.
Datums,https://esolangs.org/wiki/Datums,,,,implemented,,languages,"A data-oriented esoteric programming language with (basically) only 3 commands created by Dylan Turner aka BlueOkiris (talk) 06:55, 6 September 2020 (UTC)"
05AB1E,https://esolangs.org/wiki/05AB1E,,,,implemented,stack-based,languages; golfing language,"05AB1E (also typed as 05ab1e) is a stack-based programming language invented by PPCG user Adnan (also known as Adriandmen). Even though its syntax is quite simple and easy to understand, 05AB1E programs can contain over 250 unique and valid character-commands which perform 400+ different functions, making it popular for making golfed programs."
SCREAMCODE,https://esolangs.org/wiki/SCREAMCODE,2020,,turing complete; turing tarpits,,cell-based,joke languages; brainfuck equivalents; low-level; languages; brainfuck derivatives,"Screamcode (stylized as SCREAMCODE) is a Trivial brainfuck substitution created by Baguette one night while taking a break from Codewars. Every instruction in Screamcode is a pained yell, reflecting how painful brainfuck and its derivatives are to code in. It has unlimited, unbounded tape."
Snake Script,https://esolangs.org/wiki/Snake Script,2020,,,implemented,,languages,"Snake Script is a language created by Dylan Turner aka BlueOkiris (talk) 16:24, 11 September 2020 (UTC)"
3.725254969642999e-321,https://esolangs.org/wiki/3.725254969642999e-321,,,,,,languages,"3.725254969642999e-321 is a simple stack-based esolang created by User:Quelklef wherein the stack must only ever consist of valid IEEE 754 64-bit NaN values, or the interpreter will crash."
Tailor,https://esolangs.org/wiki/Tailor,2021,,turing complete,implemented,,languages; high-level,Tailor is a string-based esoteric programming language created by cyanidesDuality in 2020.
Sabdt,https://esolangs.org/wiki/Sabdt,,,,unimplemented,,languages,"Sabdt (sab*dit) or ""strings are best data type"" is an esolang made by User:QTpye (talk). It is simplistic in nature and relatively easy to code in. It was spawned from the idea that many esolangs are based around numbers, changing values of numbers in cells, printing out cells converted to chars, or taking in text and converting it to numbers etc. This esolang has no inbuilt number system, so the only things you can natively do with it are manipulate and compare strings (along with flow control, variables, functions, input and printing)"
2DFuck,https://esolangs.org/wiki/2DFuck,,,turing complete,implemented,cell-based,languages; brainfuck derivatives,"2DFuck is another multidimensional brainfuck derivative esolang invented by TheWastl (wastl in PPCG). The language, as presumed by the title, runs on an infinite 2-dimensional memory tape, extending the 1-dimensional memory tape of brainfuck (There are also numerous  other 2D brainfuck derivatives). There is a memory pointer which has an X value and a Y one, which indexes the 2D memory tape."
3x,https://esolangs.org/wiki/3x,,,turing complete,implemented,stack-based,languages,3x is a stack-based esolang. It is inspired mainly by 1+ in that 3 is the only literal. Stack items can be any rational number.
Poetic (esolang),https://esolangs.org/wiki/Poetic (esolang),2018,,turing tarpits; turing complete,implemented,cell-based,languages; brainfuck derivatives,"Poetic is an esoteric programming language created by User:JWinslow23 in 2018. It is a derivative of brainfuck that encodes instructions into the lengths of words. Programs generally look like abstract poetry, and upon execution, they are turned into a list of numbers denoting the lengths of the words, and then executed as instructions."
Fear,https://esolangs.org/wiki/Fear,,,unknown computational class,usability unknown; implemented,,languages,"Fear is an esoteric programming language that gives you esolangaphobia.
It has six instructions: i, o, +, -, j and r."
Sploosh,https://esolangs.org/wiki/Sploosh,2020,,,,,languages,"Sploosh (Splattered Operation Oriented Scripting Host) is a programming language created by User:Star651 in September 2020. The syntax appears to be fairly conventional, but a Sploosh interpreter or compiler handles the code in an unconventional way. Some may even call Sploosh a dialect of JavaScript, Python, or other interpreted languages, but the way the compiler handles data gives its esolang status away."
Zirconium,https://esolangs.org/wiki/Zirconium,2020,,turing complete,,,languages; thematic; two-dimensional languages,Zirconium is an esoteric programming language made in September of 2020 by User:RocketRace.
NoComment,https://esolangs.org/wiki/NoComment,2020,,,implemented,cell-based; stack-based,languages; low-level,"NoComment is an esoteric programming language created by User:CaptainFoxtrot that aims to combine the simplicity of brainfuck, the efficiency of stacks, and the power of one-liners."
Complack,https://esolangs.org/wiki/Complack,2020,,turing complete,implemented,stack-based,languages; low-level,"Complack is a simple, stack-based language created by User:Olivato. Is based in Simplack created by User:Saka.
Complack means Complex Stack is an extension of Simplack, with infinite stacks, labels, more conditional branches, subroutines and more!"
A.R.T.I.C.L.E.,https://esolangs.org/wiki/A.R.T.I.C.L.E.,,,,,stack-based,languages,A.R.T.I.C.L.E. is an esoteric programming language created in october 5 2020 by User:SoicBR
It's 3D!,https://esolangs.org/wiki/It's 3D!,,,,,stack-based,languages; two-dimensional languages,"This is a coding language based of Befunge. It is created by User:WhyNot?
You may fix anything that you think needs to be fixed."
33,https://esolangs.org/wiki/33,,,,implemented,,languages,33 is the name of a simple and original esolang invented by TheOnlyMrCat. The language has exactly 33 alphabetical single-character commands which do certain functions (hence the name).
OpenStreetCode,https://esolangs.org/wiki/OpenStreetCode,2020,,,unimplemented,cell-based,languages; thematic; low-level,"OpenStreetCode is an esolang by User:PythonshellDebugwindow based on JOSM, an editor for OpenStreetMap."
Braindumbed,https://esolangs.org/wiki/Braindumbed,2020,,unknown computational class,usability unknown; unimplemented,,languages; low-level,Braindumbed is esoteric instruction set architecture designed by User:Filexor.
Detrovert,https://esolangs.org/wiki/Detrovert,2020,,turing complete,implemented,,languages,Detrovert is a graph-rewriting and object-oriented esoteric programming language.
Binary pi-calculus,https://esolangs.org/wiki/Binary pi-calculus,2020,functional paradigm,turing complete,,concurrent programming,languages,Binary pi-calculus is a binary encoding of pi-calculus outlined in October of 2020 by User:RocketRace. It is to pi-calculus as binary lambda calculus is to lambda calculus.
Probablyfuck,https://esolangs.org/wiki/Probablyfuck,2020,,turing complete; turing tarpits,no io; unimplemented,cell-based,languages; brainfuck derivatives; low-level,"Probablyfuck is a variant of brainfuck inspired by the ideas of stochastic computing. Cell values are probabilistic bit streams (also known as Bernoulli processes), which you can operate on with brainfuck-like instructions."
99 (Esolang),https://esolangs.org/wiki/99 (Esolang),,,,,,languages,"99 is an imperative esoteric programming language with only one literal, 9. The language only relies on 3 characters - Spaces, newlines, and the number 9 - making it similar to the Whitespace programming language. Other characters are always ignored."
BrainFuckFart,https://esolangs.org/wiki/BrainFuckFart,,,turing complete,implemented,cell-based,languages; brainfuck derivatives,"I started creating BrainFuckFart as a simple C++ interpreter for BrainFuck. As I went and tried to create a ""More or Less"" game in BrainFuck I encountered a few limitations that I went and corrected as I went. By corrected, I really mean implemented. So as I go creating bigger projects with BrainFuckFart I will keep on implementing new features."
Turing Paint,https://esolangs.org/wiki/Turing Paint,2020,,turing complete; turing tarpits,implemented,,languages; two-dimensional languages,"Turing Paint is a visual esoteric programming language in which programs are represented using images. Six colors can be used: black, white, red, green, yellow, and blue. It is designed to be easy to learn and images can be created using any graphics editor. Programs can be hand-drawn without the need for any pixel fine-tuning. Programs can be run directly on the Turing Paint website."
NDBall,https://esolangs.org/wiki/NDBall,2020,,,implemented,multi-dimensional languages,languages,"NDBall, ""N-Dimensional Ball"" or NDB is an esolang made by User:QTpye (talk) in 2020. This esolang came from the idea of a truly infinite-dimensional esolang. The problem is if one has infinite dimensions, users will still just use maybe two or three, because using higher dimensions is unnecessary. As such, the creator had to come up with a way to force those who want to make programs to use more dimensions. They did this by limiting the length of all the dimensions. Each dimension only has space for 5 instructions, if one wants to use more than that they will need more dimensions."
C+++,https://esolangs.org/wiki/C+++,,,,,,languages,C+++ is basically C++ but with less abbreviations & it has new syntax added to make things slightly easier.
OSE,https://esolangs.org/wiki/OSE,,,,,,languages,"OSE, Standing for Odd Symbols Environment, it literally is made with odd Unicode Symbols."
LayerASM,https://esolangs.org/wiki/LayerASM,2020,,,implemented,,languages,"LayerASM is an esoteric programming language created by User:Ashtons which works with four data grid layers which contain different types of data, and supports four instructions."
Eof,https://esolangs.org/wiki/Eof,,,,,,languages,A language that unless your careful it will automatically end the program.
Stopnotstop,https://esolangs.org/wiki/Stopnotstop,,,,,,languages,I will tell you few things about it.
1066,https://esolangs.org/wiki/1066,2020,,unknown computational class,implemented,,languages; cjk,1066 is an esoteric programming language created by User:PythonshellDebugwindow in late 2020.
Sayonara,https://esolangs.org/wiki/Sayonara,2020,declarative_paradigm,turing complete,unimplemented,,languages,Sayonara is an esolang invented by User:Hakerh400 in 2020.
Cells,https://esolangs.org/wiki/Cells,,,,total; unimplemented; output only,,languages; joke languages,If you want to learn most to everything about Cells then go to this document. (dead link) Or you can see the side image which is the current website.
@minor!,https://esolangs.org/wiki/@minor!,,,,,,languages,Hello World:
Rcpy,https://esolangs.org/wiki/Rcpy,2020,,,,,languages; thematic,"RCPY is an esotheric programming language that is supposed to read as a recipe. It turned out te be something magical, where you can pass your 3 onions to cook potatos and end up with 100 potatos. This is really your party, but you have to program you own cake baking function... Don't tell your guests you made it with yogurt instead of whipped cream, they won't notice but still. 
It does this by butchering the english language. 
Example:"
Real Brainfuck,https://esolangs.org/wiki/Real Brainfuck,,,turing complete,implemented,cell-based; stack-based,languages; brainfuck derivatives,"Real Brainfuck is a brainfuck variant that operates on the real-valued range {0, 1}. The tape starts with all cells set to 0.5. It also has a stack. This is a more usable version of an esolang i designed in the past."
Smooth transition to a second term,https://esolangs.org/wiki/Smooth transition to a second term,2020,,,unimplemented,,languages,Smooth transition to a second term is an esoteric programming language.
NestFuck,https://esolangs.org/wiki/NestFuck,2020,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,NestFuck is a language that uses pairs of nested brackets to execute brainfuck instructions. It uses 3 characters as follows:
Lisparser,https://esolangs.org/wiki/Lisparser,2020,,,implemented,,languages,"Lisparser is another parser invented by User:Hakerh400 (the previous one was Elevated Parser). Lisparser uses a Lisp-like syntax to parse a Lisp-like source code. This parser does not have an intermediate state. It does not construct abstract syntax tree initially (if we do not count pure lists as tree nodes). Instead, it starts to interpret the program while the program is still being parsed. It saves a lot of time and speeds up the computation."
Brainlisp,https://esolangs.org/wiki/Brainlisp,2020,,turing complete,implemented,,languages,Brainlisp is an experimental language designed as a simple test for Lisparser.
PUSH,https://esolangs.org/wiki/PUSH,,,push-down automata,usability unknown; implemented,stack-based,languages,PUSH is an esoteric programming language created by User:Expliked in November 2020. It is a stack-based language.
PANOPTES's Dumb Burger Thing,https://esolangs.org/wiki/PANOPTES's Dumb Burger Thing,,,,unimplemented,stack-based,languages,"Here is the story of how PANOPTES's Dumb Burger Thing, or DumbBurger for short, was created.

Right around now, I was procrastinating.

I still am.

And while I was procrastinating, this code for generating the first 10 elements of the Fibonacci Sequence came into my head."
Neural Brainfuck,https://esolangs.org/wiki/Neural Brainfuck,,,unknown computational class,total,cell-based; stack-based,brainfuck derivatives; languages,"Neural Brainfuck is an attempt to create a language so that, analog neural networks can be implemented within it. All programs run within an implicit infinite loop. The tape extends infinitely in both directions (left and right) and contains cells with real numbers."
Juna,https://esolangs.org/wiki/Juna,,,unknown computational class,,,languages,"Juna is a esolang based on NAND logic. It uses a list of registers (one for each non-negative integer), each of which can store one bit and starts set to 0. Every line number is also a non-negative integer. Jumping to . halts the program. Execution starts on line 0."
Finvara,https://esolangs.org/wiki/Finvara,,,unknown computational class,unimplemented,,languages; thematic,"Finvara is a stack-based esolang inspired by fairy chess. Each program is made of 3 parts: defining the pieces, defining the board, and listing the moves.
Everything following a # is a comment going to the end of the line."
Structure,https://esolangs.org/wiki/Structure,2020,,,unimplemented,,languages; low-level,"The Structure lang is made of four commands (though endif is not really a command):
. and < and >, and endif."
Dog,https://esolangs.org/wiki/Dog,2020,,unknown computational class,unimplemented; usability unknown,,languages; thematic,Dog program is made like a normal day that a care taker would do with/for the dog.
Yaren,https://esolangs.org/wiki/Yaren,2020,,unknown computational class,implemented,cell-based,languages; brainfuck derivatives,Yaren is an esoteric programming language created by User:PythonshellDebugwindow.
Jaune,https://esolangs.org/wiki/Jaune,2020,,,implemented,cell-based,languages,Jaune is an esoteric programming language with a vocabulary of 16 symbols and the digits 0-9.
JSMeth,https://esolangs.org/wiki/JSMeth,2020,,turing complete,,cell-based,languages; brainfuck derivatives; brainfuck equivalents,"JSMeth is a JavaScript implementation of brainfuck. The commands are the same, but they're expressed as JS methods."
Pancode,https://esolangs.org/wiki/Pancode,2020,,turing complete,implemented,stack-based,languages,"Pancode is a stack-based esoteric programming language written by User:Mercerenies, with the goal of fully embracing and utilizing the Unicode character set for various commands."
HAN,https://esolangs.org/wiki/HAN,2020,,,implemented; output only,,high-level; languages,"HAN is an interpreted, single-type esoteric programming language created by User:Aryantech123. It was created to act as a syntax for many smaller projects involving computer architecture.
It is a simple language, with 3 basic types of commands and uses strict prefix notation. Only floating point variables are supported."
BitSwitch,https://esolangs.org/wiki/BitSwitch,2020,,,implemented; total; unusable for programming; output only,,languages; low-level,BitSwitch is an esolang made by User:Bloodyknucles.
Exotic,https://esolangs.org/wiki/Exotic,2020,,turing complete,implemented,,languages,Exotic is an esolang invented by User:Hakerh400 in November 2020.
Count,https://esolangs.org/wiki/Count,2020,,,,stack-based,languages; golfing language,"Count, or sometimes called The Count, is a stack-based language with 16 commands. Each command is represented by a single hexadecimal digit. This means that a string of code in Count can be thought of as a number represented in hexadecimal read from left to right."
/gɹəʊguː/,https://esolangs.org/wiki//gɹəʊguː/,2020,,unknown computational class,implemented,,languages,/gɹəʊguː/ is an esoteric programming language by User:PythonshellDebugwindow.
Golficator,https://esolangs.org/wiki/Golficator,,,,,,,Golficator is a computational model invented by User:Hakerh400. This computational model is designed to be able to convert any Turing-complete language into a golfing language.
Expensive,https://esolangs.org/wiki/Expensive,2020,,,implemented,,languages; brainfuck derivatives,Expensive is a brainfuck derivative invented by User:Hakerh400 in 2020.
Yo!nk,https://esolangs.org/wiki/Yo!nk,,,,implemented; total; unusable for programming; output only,,languages,"Yo!ink is a esoteric programming language made by User:mantita223 The language has very simple syntax, and with a bit of programming knowledge, anyone can use the language."
Flipfractal,https://esolangs.org/wiki/Flipfractal,,,unknown computational class,,,two-dimensional languages; languages,"Flipfractal is an experimental variant of Memfractal, which was created by User:Zzo38. It takes ideas from BackFlip and the Memfractal specifications by User:Camto."
Spice,https://esolangs.org/wiki/Spice,,,,usability unknown; output only; implemented,,languages; low-level,A programming language for 'Golfing' in an assembly-like/lite environment.
Finite State Brainfuck,https://esolangs.org/wiki/Finite State Brainfuck,2020,,finite state automata,,,languages; brainfuck derivatives,"Finite State Brainfuck is a brainfuck variant that is equivalent to a finite state machine, due to being a read only Turing Machine."
Dick,https://esolangs.org/wiki/Dick,,,,total; output only; implemented; unusable for programming,,languages; thematic,"Dick is an esoteric programming language created by User:Cybertelx on 5th December, 2020. It is a language with variables. A really bad interpreter made by me is on npm(dead link) as ""dicklang"".  
Commands must be separated by \n (newline) or carriage return."
MLang,https://esolangs.org/wiki/MLang,2020,,turing complete,implemented,,languages,"MLang is an esoteric programming language that aims to provide a turing-complete environment within the format of an essay properly cited following MLA8 guidelines.
It was created by Skye Sprung on 6. dec 2020."
Sadako,https://esolangs.org/wiki/Sadako,,,unknown computational class,unimplemented,,languages; thematic,"Sadako was inspired by origami folding and uses a paper square with side lengths of 1 as storage. Each line starts with | ​ and is numbered top to bottom, where the first line is line 0. Commands on the same line are separated by  : ."
Firstreplace,https://esolangs.org/wiki/Firstreplace,,,,total; implemented; unusable for programming; output only,,languages,Firstreplace is an accidental1 esoteric programming language made by Abyxlrz.
Dotter,https://esolangs.org/wiki/Dotter,2020,,,output only; unusable for programming; implemented; total,stack-based,languages,Dotter is a stack-based esoteric language.
Cerberus,https://esolangs.org/wiki/Cerberus,2020,,unknown computational class,implemented,stack-based,languages,"Every Cerberus program is 3 lines long. It uses a stack and executes commands based on the size of groups of . and -. The first column that doesn't contain only . and - is the end of the program, so anything after that is a comment.
The IP starts at the left side of the second line and moves right until the end of the program.
If there aren't enough items for a command, it is treated as a no-op."
Tiangou,https://esolangs.org/wiki/Tiangou,2020,,unknown computational class,unimplemented,stack-based,languages,"Tiangou is a derivative and wimpmode of Cerberus. It only has 1 line, which is a list of commands separated by spaces. All the commands correspond to one in Cerberus."
Md5sha1fuck,https://esolangs.org/wiki/Md5sha1fuck,,,,implemented,,languages; brainfuck derivatives,Md5sha1fuck is an esolang invented by User:Scientificworld.
Stu,https://esolangs.org/wiki/Stu,2019,,unknown computational class,implemented; usability unknown,,languages; thematic,Stu is an esoteric programming language created by User:PythonshellDebugwindow.
RASEL,https://esolangs.org/wiki/RASEL,2020,,turing complete,implemented,stack-based,languages; two-dimensional languages; low-level,RASEL (Random Access Stack Esoteric Language) is a fungeoid esoteric programming language. The main goals of making another fungeoid were:
Depend,https://esolangs.org/wiki/Depend,2020,,unknown computational class,implemented; usability unknown; no io,,languages,Depend is an esolang created by User:PythonshellDebugwindow.
PASM,https://esolangs.org/wiki/PASM,2020,,finite state automata,unimplemented,,languages; low-level,"PASM (PythonshellDebugwindow's Assembly) is an assembly language for a hypothetical machine, the P-Machine. It was created by User:PythonshellDebugwindow in December 2020."
Antigram,https://esolangs.org/wiki/Antigram,2020,,unknown computational class,no io; implemented; usability unknown,,languages; low-level,"Antigram is an esoteric programming language created by User:Quintopia in 2020. It was mainly designed because there had not yet been a language on this wiki named ""Antigram,"" and that was a surprise and a shame. The design principle is that it should resemble particle annihilation in a supercollider and that effects produced by annihilation should be nonlocal and hard to describe. In this way, it becomes difficult to prove the language is Turing complete, even as it would seem to have the power to be."
Fargo,https://esolangs.org/wiki/Fargo,2020,functional paradigm,unknown computational class,unimplemented,,languages,Fargo (Function argument-o) is an esolang created by User:PythonshellDebugwindow.
Pip,https://esolangs.org/wiki/Pip,2015,,turing complete,implemented,,languages; golfing language,"Pip is a golfing language made by Dlosc for writing answers on Code Golf Stack Exchange. Its syntax is generally C-like, with inspiration from JavaScript, Python, Perl, Lisp, and Rebmu. It uses plain ASCII."
CV(N)(C),https://esolangs.org/wiki/CV(N)(C),2020,,turing complete,unimplemented,deque-based,languages,CV(N)(C) is an esoteric programming language based on the International Phonetic Alphabet and created by User:PythonshellDebugwindow. Its goal is to be pronounceable.
C Flat,https://esolangs.org/wiki/C Flat,2020,,unknown computational class,implemented,,languages,C Flat (or C♭) is an esoteric programming language that uses music as syntax.
SELENE.,https://esolangs.org/wiki/SELENE.,2021,,unknown computational class,unimplemented,,languages,"SELENE. is a language inspired by SELECT., but using hyperoperators instead of just exponentiation and logarithms.
Every command is separated by a space, with newlines able to be placed anywhere in between commands. Any line starting with { is a comment line. There are 3 pointers: the data pointer (DP), the base selector (B), and the rank selector (R). The current cell is the cell pointed at by DP. All cells are initially set to 1/2, and can hold any positive real number."
Hot,https://esolangs.org/wiki/Hot,2021,functional paradigm,turing complete,unimplemented,,languages,"Hot is a computational model inspired by Zot. Hot is a pure functional language. All functions are side-effect-free, including I/O operations (from the perspective of the program itself, of course). The main difference between Zot and Hot is that the I/O actions in Hot are much simpler and more concise that the I/O actions in Zot."
FILO,https://esolangs.org/wiki/FILO,2021,functional paradigm,,implemented,stack-based,languages,FILO is a stack-based programming language.  A FILO program consists of an expression.
Length,https://esolangs.org/wiki/Length,,,turing complete,,stack-based,languages,"Length is an esoteric programming language created by user:Nailuj29. Its instructions are the length of the lines, so you can hide a Length program in any other program."
Lossia,https://esolangs.org/wiki/Lossia,2021,,,implemented,stack-based,languages,"Lossia is a language made by Tetrapyronia. It uses 1 stack. All commands must be prefixed with l. Spaces can be put anywhere, including inside commands. Everything including and after the first invalid command is a end-of-line comment. (ex: l- l- Push 2 -1s to the stack <- all italics are comments)"
Arsel,https://esolangs.org/wiki/Arsel,2021,,,implemented; total; unusable for programming; output only,,languages,"Arsel (A Really Small Esoteric Language) is a simple, minimalistic language, made by User:Kirbyiseatinghumanmeat in January 2021 with only 3 instructions."
SPREADSHEET,https://esolangs.org/wiki/SPREADSHEET,2021,functional paradigm,turing complete,implemented,concurrent programming,languages; two-dimensional languages,"SPREADSHEET, devised by cyanidesDuality in 2021, is a grid-based concurrent event-driven language inspired by Psi."
HQ99+LUFTBALLONS,https://esolangs.org/wiki/HQ99+LUFTBALLONS,2021,,unknown computational class,unimplemented,,languages,HQ99+LUFTBALLONS is an HQ9+-derivative made by Tetrapyronia. It uses balloons to build the code. The accumulator is initally 0 and the stack is initally empty. The second-last line is a looping sequence of HQ99+LUFTBALLONS.
Hat Trick,https://esolangs.org/wiki/Hat Trick,2020,,unknown computational class,implemented,,languages,"Hat Trick, devised by cyanidesDuality in 2020, is an assignment-based Esoteric programming language implementing a version of call/cc."
🥺,https://esolangs.org/wiki/🥺,2021,,,implemented,stack-based,languages,"🥺 is an unstack-based esoteric programming language written in 2021 by User:RocketRace. It is inspired by bottom by kaylynn234. It is a dialect of ""bottom"", a natural language used by bottoms."
NyaScript,https://esolangs.org/wiki/NyaScript,2020,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,"NyaScript is a derivative of brainfuck with some special features, like a temp variable for example."
Loadstring,https://esolangs.org/wiki/Loadstring,,,turing complete,implemented,cell-based,languages,"Loadstring is a turing complete esolang, what does loadstring mean? I don't know its just the name I chose because in lua that is a thing!
This will give you an experience similar to the one of coding when punch cards were a thing. Bet you can't make anything useful with this,
before you download the interpreter I have to warn you, coding in this language is mind-numbing and agonizing. Am I a masochist, am I a sadist, only you can answer by coding in this atrocity! Good luck..."
Vyxal,https://esolangs.org/wiki/Vyxal,2020,,turing complete,implemented,stack-based,languages; golfing language,"Vyxal is the latest addition to the plethora of stack-based languages used for code golfing. But unlike its competitors, Vyxal has a special focus upon readability and elegancy. Indeed, the codepage has been specially chosen to be as mnemonic as possible. Further, constructs from practical languages (such as functions, lambdas and easy list manipulation) are present."
Trivial,https://esolangs.org/wiki/Trivial,2021,functional paradigm,turing complete,implemented,,languages,Trivial is a pure functional Haskell-like programming language based on the Hot calculus. Each Trivial program is internally compiled directly to a Hot combinator.
129,https://esolangs.org/wiki/129,2021,,turing complete; turing tarpits,implemented,stack-based,languages,"129 is an esoteric programming language by User:TonyBrown148. It is a language with 1 type of data structure, 2 symbols, and 9 operations. In 129 the only valid data structure is stacks, and 129 supports running a 129 program inside one."
Caballo,https://esolangs.org/wiki/Caballo,2021,,turing complete,unimplemented,,languages,"Caballo is a programming language made by User:CatIsFluffy in 2021. It was inspired by the discussion in Cabra's talk page about an alternative interpretation of the parallel composition operation in terms of pairs, and (some of) its programs form an algebraic ring."
Sed,https://esolangs.org/wiki/Sed,,,turing complete,implemented,,languages,"sed is a UNIX utility that performs text transformations on an input stream, using a simple programming language. sed was developed by Lee E. McMahon and introduced in 1974. At the time, it was one of the first tools to support regular expressions."
BRASCA,https://esolangs.org/wiki/BRASCA,2021,,turing complete,implemented,stack-based,languages; low-level,"BRASCA - BRAckets and other Symbols turning Code into Ascii
i tried my best with the acronym, okay"
Tarski,https://esolangs.org/wiki/Tarski,2021,functional paradigm,turing complete; turing tarpits,implemented,stack-based,languages; low-level; high-level,"Tarski is a stack-based esoteric programming language inspired by the theory of concatenative combinators, and by Underload specifically. It's named after Alfred Tarski, the famous mathematician and philosopher, and its name is intentionally suggestive of a Turing Tarpit and of the SKI calculus, although it is more closely related to the BCKW calculus. It is purely functional, lends itself to tacit (aka pointfree) programming, and is homoiconic by virtue of its quotation feature. It was created by Chase Roycroft and has a reference implementation in Python."
FreakC,https://esolangs.org/wiki/FreakC,,,turing complete,,,languages,"FreakC is a clone of Batch and also compiles into Batch codes as well. There is nothing to say about the language really as it is the same as Batch (you can also writes Batch in it), but it adds drunk commands and memes, brainless quotes or ""straight-up everyday swearing"". Also, most of the commands are direct equivalents to those in Batch, but you know, got turned into swearing. The language is merely hurtful to write as it is just Batch scripting with ""bad words"" and no ""fun"" rules added like Intercal or Trumpscript. Technically, if you want to write Batch but you hate humans' existence and wonder wtf are you doing, then hell yeah if this language's good for you. For more info go to https://github.com/nguyenphuminh/FreakC."
Unfair,https://esolangs.org/wiki/Unfair,2021,,,unusable for programming; unimplemented,,languages,"Unfair is an esolang based on a game about counting numbers ""unfairly"". The esolang is made by User:Gilbert189 (but not the game)."
Cav𝚅,https://esolangs.org/wiki/Cav𝚅,,,,unimplemented,,languages,"Pronounced /cavl/ (The second v in the title is an inverted capitol Lambda.) is a project I am working on for fun.  It includes all the ""best"" parts of C/C++, java, python, and lisp.  When I start to get some real work done on it ||| cean up this page but for now I am using it for notes."
Photon (Quintopia),https://esolangs.org/wiki/Photon (Quintopia),2021,,turing complete; turing tarpits,implemented,multi-dimensional_languages|three-dimensional; multi-dimensional languages,languages,Photon is an esoteric programming language implemented by User:Quintopia in 2021. It is a geometric computational model based on a particle moving around a 3-dimensional space.
Defunc,https://esolangs.org/wiki/Defunc,2021,functional_paradigm,turing complete,,,languages,"Defunc is a function-based, minimalist esoteric programming language currently developed by User:Obvious. The language operates on functions that return integers. These functions can vary in input size. Its name comes from a portmanteau of ""define"" and ""function"""
Substitution,https://esolangs.org/wiki/Substitution,2021,declarative paradigm,unknown computational class,unimplemented,,languages,Substitution is a declarative programming language invented by User:Hakerh400 in 2021.
Inject,https://esolangs.org/wiki/Inject,2021,,unknown computational class,unimplemented,,languages,Inject is an esolang by User:PythonshellDebugwindow. It is named after its first command.
Rattle,https://esolangs.org/wiki/Rattle,,,,implemented,,languages,Rattle (version 1.0.3)
Arsm,https://esolangs.org/wiki/Arsm,2020,,turing complete,implemented,cell-based; stack-based,languages; low-level,"arsm is an esolang inspired by various versions of Assembly, designed by User:ZippyMagician."
Chatlog,https://esolangs.org/wiki/Chatlog,2021,,turing complete,,,brainfuck equivalents; languages; brainfuck derivatives; thematic,Chatlog is an esoteric programming language made by User:Retro.
Pewlang,https://esolangs.org/wiki/Pewlang,2021,,turing complete,implemented,,joke languages; languages; brainfuck equivalents; brainfuck derivatives,"Pewlang is an esoteric programming language, that translates to brainfuck and was made in 2021. It was mostly inspired by Z and was made as a joke in the PewPew Discord Server for the game PewPew. Pewlang is a part of the Trivial brainfuck substitution. It was made by User:Tasty Kiwi and User:SKPG-Tech."
Divrac,https://esolangs.org/wiki/Divrac,2021,,,implemented,,languages,Divrac is an OISC by User:PythonshellDebugwindow.
Struffoli,https://esolangs.org/wiki/Struffoli,,,,implemented,stack-based,languages,Struffoli is an esoteric programming language that was created by User:Zero player rodent. The instruction pointer in Struffoli moves to different instructions in a way that requires code to be arranged in a specific order for it to work properly.
PhD,https://esolangs.org/wiki/PhD,2021,,unknown computational class,implemented,,languages,PhD (Push halt Down automaton) is a PDA with a PDA-halting oracle.
Meadow,https://esolangs.org/wiki/Meadow,2021,functional paradigm,turing complete,implemented,,languages,Meadow is a computational model invented by User:Hakerh400 in 2021.
Backwords,https://esolangs.org/wiki/Backwords,2020,,,implemented,stack-based,languages; low-level,"Backwords is a character-based low level esoteric programming language by User:1hals. There is a data stack, a memory tape, and a program counter. All values are unsigned bytes in the range 0 to 255, and the values wrap around. The program runs in an implicit infinite loop. Numbers are written in base 16 (the biggest number is #FF). Comments may be written in the file anywhere that the text of the comment won't affect the state of the program either because the comment has no command characters, or the program jumps over the comment with ^ or v, or the program never reaches the comment because the program halts (usually because of ;) before it reads the comment. This language was originally planned to be a stack-based golfing language, but it is really like writing machine code by hand, but with ASCII characters."
Pain,https://esolangs.org/wiki/Pain,2021,,turing complete,,queue-based,languages,"(note: the queue is called the stack for no true reason)
Pain is an Esolang created by user:RetroPain and it's a pain to use. It was inspired by Element.
Some programs can ether end in | or |@. The only reason that |@ exists is due to an early prototype of the interpreter that user:RetroPain was trying to make before asking someone else to make an interpreter. Due to its limitations |@ had to exist otherwise a program could never end. It both uses a stack and a ""variable tape."" Basically, the same thing as the tape in BF but you can add cells at anytime the programmer wants a cell to be made. The switch between Unknown computational class to Turing Complete was made when user:RetroPain converted a brainfuck self interpreter and successfully interpreted +[.+]"
Third Party Contractor Accused Of A Robbery,https://esolangs.org/wiki/Third Party Contractor Accused Of A Robbery,,,,unimplemented; output only,stack-based,languages; two-dimensional languages,...is a 2D esoteric language with only two commands (  and &)
Self%ify,https://esolangs.org/wiki/Self%ify,,,,,stack-based,languages,"Is unique because the source, STDIN, and STDOUT are all the same, however, this does not remove any abilities, and if anything, actually adds to the abilities of the language"
Interlude,https://esolangs.org/wiki/Interlude,2021,,unknown computational class,unimplemented,queue-based,languages; two-dimensional languages,Interlude is an esolang by User:PythonshellDebugwindow.
DriftLang,https://esolangs.org/wiki/DriftLang,2021,functional paradigm,turing complete,implemented,,languages,DriftLang is a pure functional dependently typed programming language based on GADTs. It is mostly inspired by Agda and Haskell. This programming language implements the Meadow computational model.
DFA-er,https://esolangs.org/wiki/DFA-er,2021,,finite state automata,implemented,,languages,DFA-er is an esoteric programming language created by User:Largejamie in March 2021 whose programs create and then run input on a Finite-state automaton.
A IS B,https://esolangs.org/wiki/A IS B,2021,,turing complete,unimplemented,,languages,"A IS B is a derivative of Set, but with a different, more natural syntax."
2020,https://esolangs.org/wiki/2020,,object-oriented paradigm; imperative paradigm,,,,languages,"Everybody's favorite year! [nope]
def(""signature"")..{}defEnd(""From enilKoder"" )}{; signature() (talk) 01:55, 18 March 2021 (UTC)
This is not a derivative of 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, or 2019;
this is, in fact, a theoretically usable programming language, but it currently does not have any implementations. It is compiled and loosely based on Java and C."
Analytical Engine Programming Cards,https://esolangs.org/wiki/Analytical Engine Programming Cards,2000,,turing complete,implemented,,languages; low-level,"The history of general purpose programmable computers begins with Charles Babbage's Analytical Engine. In an effort to give modern audiences an experience of what it would have been work like to work with such a machine, John Walker devised the Analytical Engine Programming Cards programming language as an interface to an Analytical Engine emulator. The language was most likely defined in the year 2000, although the concepts obviously date back to 1837 and the inception of the Analytical Engine itself."
Brainfuck But With Buffer,https://esolangs.org/wiki/Brainfuck But With Buffer,,,turing complete,implemented,cell-based,languages; brainfuck derivatives,"BBWB is a brainfuck derivative that adds a buffer between you and the memory tape.
You can increment and decrement the buffer value, then overwrite the pointed cell with said buffer value.
You can also load pointed cell value to the buffer, overwriting it.
It also adds I/O differences: you can get or put buffer value as int or as ASCII char.
The cell pointer wraps around (there is a fixed number of cells)."
PDA-er,https://esolangs.org/wiki/PDA-er,2021,,push-down automata,implemented,stack-based,languages,PDA-er is an esoteric programming language created by User:Largejamie in March 2021 whose programs create and then run input on a Push-down automaton.
Deskin,https://esolangs.org/wiki/Deskin,,,,unimplemented,,languages,Deskin (Decrement and skip if negative) is an OISC esoteric language designed to use only 1 Argument.
Forest,https://esolangs.org/wiki/Forest,2021,,turing complete,implemented,,languages,Forest is an esolang invented by User:Hakerh400 in 2021.
Nomad,https://esolangs.org/wiki/Nomad,2018,functional paradigm,turing complete,implemented,stack-based,languages,"Nomad is a multi-paradigm language created from 2018 to 2021 with the goal of simplifying modern programming to as few concepts as possible, in order to facilitate complexity in other areas; Specifically, probabilistic programming."
Suptiftam,https://esolangs.org/wiki/Suptiftam,2021,,,unimplemented,cell-based,languages,Suptiftam is an esolang created by User:PythonshellDebugwindow.
Among Us,https://esolangs.org/wiki/Among Us,,,,implemented,stack-based,languages,"Among Us is an esoteric programming language created by User:Zero player rodent. It is based on the popular game known as Among Us. The code is meant to look like conversations that are common in-game. The programs mostly consist of colours followed by the word ""SUS"". ""SUS"" executes the command associated with the colour. The words ""WHO"" and ""WHERE"" are used for loops. The language uses 2 accumulators and a stack for memory. Among Us can store infinitely large numbers, but the ""WHO"" and ""WHERE"" commands will treat a value as if it resets back to 0 after it goes above 255. The ""WHO"" and ""WHERE"" commands also treat a value as if it is set to 255 after going lower than 0."
Grok,https://esolangs.org/wiki/Grok,2021,,,implemented,stack-based,languages; two-dimensional languages,"Grok is a two-dimensional, stack-based language inspired by Befunge, ><>, and the Vim editor. It was invented by User:AarMil42 in 2021."
Birb,https://esolangs.org/wiki/Birb,2021,functional paradigm,turing complete,implemented,stack-based,languages,"Birb is an untyped, purely functional language based on Lambda Calculus and Combinatory Logic."
Brainfuck Assembly Language,https://esolangs.org/wiki/Brainfuck Assembly Language,2020,,turing complete,implemented,graphical output,languages; brainfuck derivatives; low-level,"Brainfuck Assembly Language (BAL) is an assembly language for a theoretically possible Brainfuck Processing Unit (BPU). It is meant to make hardware implementation of brainfuck easier for amateurs, especially on common 8-bit and multiple-of-8-bit components. It translates one-to-one to machine code."
PYSP,https://esolangs.org/wiki/PYSP,2021,,unknown computational class,implemented,,languages; languages,"PYSP (for PYthon String Programming) is a DSL embedded by an unknown user (who later was revealed to be User:RocketRace) in Python, described as 'lisplike'. It seems to have been inspired by such languages as Parenthesis Hell."
Floof,https://esolangs.org/wiki/Floof,2021,functional paradigm,turing complete,implemented,,languages; low-level,"Floof is a minimal functional language comprised entirely of one object type: T ::= T -> T. The exception to this are the reserved functions that take in user input, which has no arguments, and the reserved functions that prints, which has side effects."
Duocentehexaquinquagesimal,https://esolangs.org/wiki/Duocentehexaquinquagesimal,2021,,turing tarpits; turing complete,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; low-level,Not to be confused with 256.
PREG,https://esolangs.org/wiki/PREG,2021,,unknown computational class,unimplemented,,languages,PREG is a register-based programming language.
Мне с тобою так повезло,https://esolangs.org/wiki/Мне с тобою так повезло,2021,functional paradigm,turing complete,implemented,,languages,Мне с тобою так повезло is a functional Turing-complete esoteric programming language invented by User:Hakerh400 in 2021.
Branch,https://esolangs.org/wiki/Branch,2021,,turing tarpits,implemented,,languages,Branch is an esoteric programming language created by User:HyperNeutrino in 2021. It is a Turing tarpit that operates on a binary tree as its memory structure. Its source code is available under the MIT License here. You can also try it online with the online Branch interpreter.
Undocumented,https://esolangs.org/wiki/Undocumented,2021,,turing complete,implemented,,languages,Undocumented is a programming language.
Mierda,https://esolangs.org/wiki/Mierda,,,turing complete; turing tarpits,,,languages; brainfuck derivatives; brainfuck equivalents,Mierda (spanish for Fuck) is a brainfuck  substitution language. Each command is changed to be the Spanish translations of the actions that they produce.
--yay,https://esolangs.org/wiki/--yay,,,,implemented,stack-based,languages,"--yay is a stack-based esoteric programming language created with the goal of creating an esoteric programming language (I know, very impressive, especially for an esoteric programming language). It was made to be an easier-to-use, stack-based version of brainfuck."
Backshar,https://esolangs.org/wiki/Backshar,,object-oriented paradigm,,total; usability unknown; unimplemented,queue-based,languages,"Backshar is a programmable language with actual commands similar to real languages such as C#, C++, JS, Python, and more.
Nothing about it, excluding strings, comments and variable values, use A-Z & 0-9. It's all symbols.
This is the first functional language by  threesodas. Unlike the rest, it actually has IO capability.
You are 100% allowed to create a compiler for this. It'd be appreciated!"
Backshar+,https://esolangs.org/wiki/Backshar+,,object-oriented paradigm,,total; usability unknown; unimplemented,queue-based,languages,"Backshar+, a sequel to Backshar, is a completely symbol-based language. Nothing, unlike Backshar, uses A-Z & 0-9. It was remade like this by  threesodas to be more ""esoteric"". Every single command is the same, except when writing variable names, string names, function names, etc. It uses a combination of symbols to represent the character desired to use."
Backsharp,https://esolangs.org/wiki/Backsharp,,functional paradigm; object-oriented paradigm; declarative paradigm,,,queue-based,languages; high-level,"Read about:
Backshar | Backshar+
Is this page categorized incorrectly? Feel free to fix it!
""I am really out of ideas now. Backsharp is the best I can come up with. Seriously, 'BS#' looks stupid as fuck. What am I doing with my life?"" Threesodas (talk) 22:44, 26 April 2021 (UTC)

Sometimes, we strive for pain. I wanted to simulate that. Here's Backsharp (BS#)."
BALAE,https://esolangs.org/wiki/BALAE,2021,,turing complete,implemented,cell-based,brainfuck derivatives,"Brainfuck Assembly Language Advanced Edition/BALAE (pronounced like Ballet) is a derivative of both BAL (originally developed by Olus2000) and Brainfuck. It adds four new commands, while squashing the original 8 into half the space."
Spacebar,https://esolangs.org/wiki/Spacebar,,,turing complete,implemented,,languages,"Spacebar is an esoteric variant of JavaScript. The Spacebar interpreter first takes your code and adds spaces in random locations. Then it interprets your code as JavaScript. More specifically, by random we mean that for each character in your code there is a 50% chance that a space will be inserted before it. This action is determined independently for each character."
Skinny pig,https://esolangs.org/wiki/Skinny pig,,,,implemented,stack-based,languages,"Skinny pig is an esoteric programming language specifically designed to be used by skinny pigs or guinea pigs. The guinea pig will ""write"" the program by doing the things it normally does, but the observer must take note of the actions taken by the guinea pig and convert each action into code."
Jitejix,https://esolangs.org/wiki/Jitejix,,,,output only; implemented,cell-based; stack-based,languages,"An esolang created for fun.
Pronounciated as [d zh i t e d zh i k s].
Inspired by Brainfuck.
Probably not turing complete, who knows."
FlipJump,https://esolangs.org/wiki/FlipJump,2021,,bounded-storage machine,implemented,,languages; low-level,"FlipJump is a 1-instruction language, intending to be the simplest / most-primitive programming language.
Yet, it can do any modern computation (#The FlipJump Power, #The Standard Library)."
GomorraSQL,https://esolangs.org/wiki/GomorraSQL,2021,declarative paradigm,,implemented,,languages; high-level; thematic,GomorraSQL is an interpreted SQL language that replaces the standard keywords with Neapolitan Language. It's available as a Java library or an executable shell.
FP trivia,https://esolangs.org/wiki/FP trivia,,functional paradigm; object-oriented paradigm,,,,languages,"FP trivia is a pointfree programming language[1][2]  inspired by FP of John Backus, APL, Smalltalk and Lisp. It is intended to remedy the problematic fact that FP[3] is viewed as free of variables,[4][5][6] which is also true in terms of lambda variables, but not in terms of the instance variables that are used by FP trivia.[7] The main data type is therefore a table that the instance variables can access. It should not be forgotten that one motivation for creating FP was the use of an ""Algebra of Programming"".[8][9]"
Fun,https://esolangs.org/wiki/Fun,,,turing complete,,,languages,"Fun is an esoteric dialect of JavaScript, which uses only function calls."
BeeScript,https://esolangs.org/wiki/BeeScript,2021,,unknown computational class,implemented,stack-based,languages; joke languages,BeeScript is a stack-based esoteric programming language made by VilgotanL.
FakeScript,https://esolangs.org/wiki/FakeScript,2021,,finite state automata,implemented; unusable for programming,,languages,FakeScript is an esolang created by User:Viba. The language was meant to be relatively easy to implement for both viba and others who don't know much about programming. FakeScript is quite limited as a result. It was originally written in C#.
Neat,https://esolangs.org/wiki/Neat,,,,implemented; total; unusable for programming,cell-based,languages,Neat is an esolang created by User:HellishBro. It was meant to be a language with no loops.
Eek!,https://esolangs.org/wiki/Eek!,,,turing complete,implemented,stack-based,languages,"Eek! is an esoteric programming language created by User:Zero player rodent that only uses the characters ""E"", ""e"", and ""k""."
BrainIf,https://esolangs.org/wiki/BrainIf,2021,,,implemented,cell-based,languages; joke languages; brainfuck derivatives; low-level,"BrainIf is an esoteric programming language by VilgotanL.
It is similar to brainfuck in that it has an identical memory tape."
Super Mario 64,https://esolangs.org/wiki/Super Mario 64,2021,,,,,languages; joke languages,Super Mario 64 is a joke language where the code is represented by a `.m64` tas file (and maybe a savestate)
Dead,https://esolangs.org/wiki/Dead,2021,,,implemented; total; unusable for programming,cell-based,low-level; languages,"Dead constitutes a cell-based esoteric programming language designed by User:Ilaylevy, using a single character to represent its operations."
PaRappa,https://esolangs.org/wiki/PaRappa,,,,implemented,stack-based,languages,"PaRappa is an esoteric programming language that is based on the rhythm game ""PaRappa The Rapper 2"". The code is meant to look like the gameplay. It is nearly identical to Eek!, the esolang that it is a derivative of."
I-ok,https://esolangs.org/wiki/I-ok,2021,,,usability unknown,,languages,"A small 1 digit esolang, for simple 1 letter usage."
While(true),https://esolangs.org/wiki/While(true),2021,,linear bounded automata,implemented,cell-based,languages; high-level,While(true){ is an esolang written by User:Aonodensetsu over the weekend of 22-23.05.2021 after finding the Truttle1 YouTube channel prior to that.
SF Code,https://esolangs.org/wiki/SF Code,2021,,,implemented,cell-based,languages,"SF Code is a programming language based on using San Fransisco symbols as code.
It was created by Jayden Irwin in 2021."
Goatoo,https://esolangs.org/wiki/Goatoo,2021,,,implemented,stack-based; cell-based,languages; low-level,Goatoo is an esoteric programming language created by User:DynCoder in May 2021. It is especially made for people who hate the goto command. The official interpreter is written in python and published on github under a GPLv3 license.
MultiStacker,https://esolangs.org/wiki/MultiStacker,,,,implemented,stack-based,languages,MultiStacker is an Esoteric programming language created by Aylias
2Swap,https://esolangs.org/wiki/2Swap,2021,,turing_complete; turing_tarpits,implemented,,languages,"2Swap is an esolang by VilgotanL with only two instructions and two unbounded registers, it is based on a two-register Minsky machine."
Flkl,https://esolangs.org/wiki/Flkl,2021,,,implemented,,languages,Flkl is a language made by Salmmanfred in about 3 hours
DeBruijn,https://esolangs.org/wiki/DeBruijn,2021,functional paradigm,turing complete,unimplemented,,languages,"DeBruijn is an esolang created by Andrew Phillips in 2021. It is based on pure, untyped lambda calculus written with De Bruijn indices."
Galveston,https://esolangs.org/wiki/Galveston,2021,,unknown computational class,implemented,,languages,"Galveston is an ω-language over the alphabet Σ = {NULL, v1, v2, ...}.
A program in Galveston is a single ω-word from that language, i.e. a countably infinite sequence made up of symbols from a countably infinite totally-ordered alphabet."
Palette,https://esolangs.org/wiki/Palette,,,,,,languages,Palette is an esoteric programming language created by User:ShanePaton. Palette uses operations based on painting and palettes.
GotoFuck,https://esolangs.org/wiki/GotoFuck,2021,,turing_complete; turing_tarpits,implemented,cell-based,languages; brainfuck_derivatives,"GotoFuck (also known as GotoF, GotoF***) is a brainfuck derivative by VilgotanL, It is identical to brainfuck except that uses a conditional goto instead of the regular while-loop."
Line,https://esolangs.org/wiki/Line,2021,,turing complete,unimplemented,cell-based,languages; two-dimensional languages,Line is a 2d cell-based programming language that is structured on lines and turns.
Channeler,https://esolangs.org/wiki/Channeler,,,,implemented,,languages,Channeler is an esoteric programming language created by User:Doridian. It is based around the idea of messaging channels (essentially function calls).
AEWNN,https://esolangs.org/wiki/AEWNN,2021,,,output only,,languages,AEWNN (or An esolang with no name) is an esolang created by User:ResU in 2021.
NScript,https://esolangs.org/wiki/NScript,,,,implemented,,languages; high-level,"NScript is a basic esoteric language designed to be at least somewhat unique.
NScript has a couple nicknames by the creator: NS, NoahScript
NS has plenty of flexibility and has a somewhat-main focus, which is to allow other people to easily create their own esoteric languages.
It has bits and pieces stolen from python and lua such as print().
It has been worked on for a year at most now, off an on throughout that time."
STACKOMP,https://esolangs.org/wiki/STACKOMP,,,,,,languages,Example STACKOMP program: (logo.sk)
Tech Support Scam,https://esolangs.org/wiki/Tech Support Scam,,,,unimplemented,,joke languages; languages,Tech Support Scam is an esoteric programming language created by User:CatCatDeluxe where it sounds vaguely like you are on a phone call with a tech support scammer.
Nevermind,https://esolangs.org/wiki/Nevermind,2021,,,total; implemented,,languages,"Nevermind is a simplistic programming language made by User:OfficialCraftCGame in 2021. It uses commas (,) to separate arguments. There is no escape character so to add a comma in text, you must substitute the comma with *44. To use a variable as an argument in a function, start the variable with the letter $. To add an integer to another integer, use +. For concatenating string, use double plus signs ++."
Truth Machine (language),https://esolangs.org/wiki/Truth Machine (language),2021,,,unusable for programming,,languages,Truth Machine is an esolang created by User:ResU in 2021.
RAMDISP,https://esolangs.org/wiki/RAMDISP,,functional paradigm,unknown computational class,usability unknown; implemented,,languages,RAMDISP is an esolang made by User:Otesunki (talk).
Jumping True,https://esolangs.org/wiki/Jumping True,2021,,,implemented,,languages,"Jumping True is an esolang created by MathR. Its main particularity is that its conditional statement is based on the truth-machine. It also has jumps, hence its name."
NOTE,https://esolangs.org/wiki/NOTE,2021,,turing complete,unimplemented,,languages,NOTE is an esolang created by User:ResU in 2021. It uses one-based indexing.
OLNMLN,https://esolangs.org/wiki/OLNMLN,,,,implemented,,languages,"OLNMLN or OneLineNoMoreLinesNeeded is a programming language where everything is written in one line! It was written by Grs (talk). It does borrow concepts from other languages (like a stack), but taken as a whole it's different. Originally it was just called OneLine, but that name is already taken up."
FourQueue,https://esolangs.org/wiki/FourQueue,2021,,unknown computational class,implemented; usability unknown,queue-based,languages,"FourQueue is an esoteric programming language made by User:Caenbe. It is supposed to be wildly inconvenient to program in, but (hopefully) not impossible. To that end, it has these features:"
Purl,https://esolangs.org/wiki/Purl,2021,,turing complete,implemented,stack-based,languages; low-level; thematic,"Purl is a stack-based esoteric programming language developed by User:GotCubes. Programs written in Purl called ""Patterns"", since they are designed to mimic knitting patterns. However, Purl patterns may result in rather awkward knitted works."
FolderCode,https://esolangs.org/wiki/FolderCode,2021,,,,,languages,"FolderCode is an esoteric programming language created by Dominicentek. It's main gimmick is that it's written as a folder structure with names being commands. FolderCode compiles into bytecode file called with .fc extension. It's compiler, runtime and interpreter was written in Java."
AHHH,https://esolangs.org/wiki/AHHH,,,turing complete; turing tarpits,implemented,cell-based,brainfuck derivatives; languages; joke languages; low-level,"AHHH (a programming language for the dreadful) is a Turing-complete, cell-based esoteric programming language inspired by the all-consuming dread induced by programming. It was written by Kyle Morgenstein in 2021 to allow for single ""screams"" (""AHHH"" followed by sequences of uppercase and lowercase h's) to be interpreted as runnable code. The language is fairly simple and is based on COW and brainfuck, but with a few additional commands to make computation easier. AHHH has 16 (+2) commands, which are all the capitalization permutations of hhhh to HHHH. The start key is the sequence AHHH. The AHHH language has a memory head (pointer) which can be moved along a tape of memory. There are also two registers that values can be read/written from. Memory cells can be printed to the console. Anything that isn't a command is a comment. Loops can be formed with the HHHH and hhhh commands."
Nu,https://esolangs.org/wiki/Nu,2021,,turing complete; turing tarpits,implemented,,languages,"Nu is an object-oriented Turing tarpit designed by User:Caenbe. Despite its lack of numbers or arithmetic, it can express other Turing tarpits that involve incrementation and dereferencing, such as I/D machine and Three Star Programmer. The name was chosen to be reminiscent of Iota, and also to sound like ""new"", which is the keyword to create an object in C-like languages. Completely by accident, Nu has some similarities with #hell."
RGB4D,https://esolangs.org/wiki/RGB4D,,,,unimplemented,cell-based,languages,RGB4D is a 4d esoteric programming language created by  ProtoByter.
Partitioned,https://esolangs.org/wiki/Partitioned,,,,,,golfing language; languages,"Partitioned is a WIP esoteric programming language created by Sekoia in 2021. The main limitation is ROM as each partition only contains 255 bytes, for both instructions and data.
Every partition shares a single byte at address 0xFF, permitting transmission between partitions. Partitions cycle one after the other, at one instruction per cycle.
A partition is formatted as a 16x16 array of bytes. Each byte is separated by a `,` and whitespace is ignored. As a rule of thumb, addresses are written as hexadecimal, instructions as binary, and data as decimal. Octal is also supported."
Tower,https://esolangs.org/wiki/Tower,2021,,,implemented,,languages,"Tower is an esoteric language meaning it is designed to be fun to use or a headache to program in!
It was created by Sawcce in June of 2021."
A returns a,https://esolangs.org/wiki/A returns a,2021,functional paradigm,turing complete,implemented,,languages,"a{a} (pronounced a returns a) is an esolang that is based on recursion. A function is just a list of cases, and can be defined by itself or inside another function. Functions can also have other functions as inputs and return values. There are no built in ways to do most mathematical functions, and you must instead call a function that does that action. The only inbuilt data type is integers, however functions are easily turned into array like objects."
Qoibl,https://esolangs.org/wiki/Qoibl,2021,,,implemented,,languages; low-level,"Qwerty oriented impractical bicharacter language (Qoibl) is an esoteric programming language created on the 10th of June 2021 by User:Toxinite. Qoibl is quite simple, having only eight instructions and a single list which is 256 variables long, starting at zero."
Column,https://esolangs.org/wiki/Column,2021,,,,,languages,"Column is an esoteric programming language developed by Dominicentek. It's code is executed column by column in a text file, rather than line by line like in a typical programming language."
What's the dog doin?,https://esolangs.org/wiki/What's the dog doin?,2021,,,,,languages; thematic,Content div not found
Godencode,https://esolangs.org/wiki/Godencode,2021,,unknown computational class,,,languages,"Godencode is an esoteric programming language based off of Gödel numbering and encoding created by Plasmath. Every line of code is composed of a single number, and all other characters are ignored (this can be used for commenting). Many programs in Godencode are extremely long/contain very large numbers, so using a calculator is recommended when programming in this language."
NumberPankackes,https://esolangs.org/wiki/NumberPankackes,,,,,,languages,NumberPankackes is a stack-based esoteric programing language.
VBF,https://esolangs.org/wiki/VBF,2021,,turing_complete; turing tarpits,implemented,cell-based,languages; brainfuck_derivatives,VBF is a brainfuck derivative by VilgotanL with some extra instructions for control-flow.
For The Worthy,https://esolangs.org/wiki/For The Worthy,,,,implemented,,languages,"For The Worthy is an esolang which only interprets the '1' and '0' characters, thus enabling programmers to reach their final ""hackerman"" form."
Turkey,https://esolangs.org/wiki/Turkey,2021,,unknown computational class,implemented,,languages,Turkey is a derivative of Chicken. It was created by User:ResU in 2021.
DoFor,https://esolangs.org/wiki/DoFor,,,,implemented,,languages,DoFor is an esoteric programing language.
Py256,https://esolangs.org/wiki/Py256,2021,,turing complete,unimplemented,,languages; golfing language; high-level,Py256 is a golfing language by User:Makonede. It uses Base-256 compression to encode long hexadecimal numbers representing programs. Py256 uses 05AB1E's SBCS for Base-256.
School,https://esolangs.org/wiki/School,2021,,,,matrix-based,languages,"School is an esoteric programming language developed by User:AceKiron, it originally started development on June 15th 2021, but has been deprecated. Later it was continued on September 10th 2021. It's designed to be hard to understand why, just like school."
Tiltedc,https://esolangs.org/wiki/Tiltedc,,,,,,languages,Tiltedc is C but tilted.
Bitbot,https://esolangs.org/wiki/Bitbot,2021,,,unimplemented,cell-based,languages,"Bitbot is an esolang created on the 18th of June, 2021 by User:Toxinite."
Inverted,https://esolangs.org/wiki/Inverted,2021,,,implemented,cell-based,brainfuck derivatives; languages,"Inverted is an esoteric programming language written by Dominicentek in Java. It's code is written line-by-line, and executed from bottom to top. It's very similar to Brainfuck."
Processor.txt,https://esolangs.org/wiki/Processor.txt,2021,,finite state automata,output only; implemented,,languages,"processor.txt was made by Miles Poland, on Friday, June 18, 2021. It is inspired by the RISC style of processors, hence the name. The .txt part is because the original specs were written in a .txt file. It is also somewhat of an Esoteric processor."
Excellerated Short-Term Memory Loss,https://esolangs.org/wiki/Excellerated Short-Term Memory Loss,2021,,linear bounded automata,implemented,cell-based; stack-based,languages; two-dimensional languages; thematic,Excellerated Short-Term Memory Loss (or ESTML) is an esoteric programming language designed and implemented by User:PolySaken. Its goal is to facilitate the most spreadsheet-like program syntax possible.
Enjamb,https://esolangs.org/wiki/Enjamb,2019,,turing complete,implemented,stack-based,languages,Enjamb is an esoteric programming language where it's not what's in your lines that matters — it's where you break them. It was created in 2019 by User:TartanLlama.
Bin-snake,https://esolangs.org/wiki/Bin-snake,,,turing complete,implemented,,languages; high-level,"Bin-snake is a Python wrapper, in Binary. Bin-snake converts a Bin-snake file (.bs) to Python code, and then executes it to Python."
Timers,https://esolangs.org/wiki/Timers,,,,implemented,stack-based,languages,Created by User:Rphii in 2021. Timers is an Esolang that is stack based.
GridJSON,https://esolangs.org/wiki/GridJSON,,,,,,languages,GridJSON is an esoteric language based on JSON as scope/function syntax.
Clart,https://esolangs.org/wiki/Clart,2021,prototype-based paradigm; object-oriented paradigm,turing complete,implemented,,languages; high-level,Clart is an object-oriented mildly esoteric programming language designed and implemented by User:PolySaken.
Mini-Flak,https://esolangs.org/wiki/Mini-Flak,2016,,turing complete,implemented; output only,stack-based,languages; low-level,"Mini-Flak is a derivative/minimisation of Brain-Flak, created in 2016, most likely by User:Wheatwizard."
Blood32,https://esolangs.org/wiki/Blood32,2021,,turing complete,implemented; educational,cell-based,languages; high-level,"Blood32 is a language designed to simulate a Turing machine with terse syntax. 
It is a language designed for experimentation with abstract, low-level computation. Programming in this language is challenging, as it does not feature many of the constructs common to high-level imperative languages, such as functions, variables, and structures."
()s,https://esolangs.org/wiki/()s,2021,,unknown computational class,implemented,,languages,{}s (pronounced: Sets) is an esolang made by User:AmNow.
StackLang,https://esolangs.org/wiki/StackLang,2021,,,implemented,stack-based,languages,StackLang is a Stack-based esoteric programming language made by Dominicentek. StackLang executes it's instructions depending on a value in the stack.
YATDEL,https://esolangs.org/wiki/YATDEL,,,,implemented,stack-based,languages; two-dimensional languages,"YATDEL (Yet Another Two-Dimensional Esoteric Language) is, obviously, a two-dimensional stack-based esoteric language created by User:HecknTarnation. Code is executed starting at an S. The pointer, then, moves right and continues to execute code. This language supports multiple files, called Abstracts."
Pops Are Overrated,https://esolangs.org/wiki/Pops Are Overrated,2021,,turing complete,implemented,stack-based,languages,Pops are overrated or PAO for short is an esolang where there isn't a direct command for popping off the stack. PAO was created by User:AmNow.
WinReg,https://esolangs.org/wiki/WinReg,2021,,,,,,"WinReg is an esoteric programming language created by User:Dominicentek. It's syntax is similar to his other language called FolderCode. Instead of it being a folder structure, it is a tree of keys and values in the Windows Registry."
BitCode/PicCode,https://esolangs.org/wiki/BitCode/PicCode,,,,,,languages,"Bitcode is an image programming language.
It uses pixels in an image as characters for code, unlocking the ability to use a normal image, like one of a sunset, as code.
With advanced programs you might even end up with a rainbow!"
BullScript,https://esolangs.org/wiki/BullScript,,,,total,,languages,"BullScript is a language used for creating libraries for DoFor,"
V++,https://esolangs.org/wiki/V++,2016,functional paradigm; object-oriented paradigm,turing complete,implemented,graphical output,languages; high-level,"V++ is a small programming language made for fun. It is an interpreted, strongly-typed language. It has functions, advanced math and IO support."
"=,-&~","https://esolangs.org/wiki/=,-&~",2021,,turing complete,implemented,stack-based,languages,"=,-&~ is an esolang made by User:AmNow. =,-&~ makes the code look like a lot of dashes."
8,https://esolangs.org/wiki/8,2021,,turing complete,implemented,,languages,8 is an esoteric programming language made by User:AmNow.
!aoQ):,https://esolangs.org/wiki/!aoQ):,2021,,,unimplemented,stack-based,languages; golfing language,!aoQ>: (pronunciation: Not a golfing language) is meant to be a golfing language made by User:AmNow. !aoQ>: tries to take as many ideas from many different languages as possible.
A Slow Language,https://esolangs.org/wiki/A Slow Language,,,,implemented,stack-based,languages; two-dimensional languages,"A Slow Language is a 2D esoteric Fungeoid made for a Truttle1 Esolang Jam. You control a turtle on an infinite grid. And since turtles are slow, it randomly takes 1 to 3 seconds before it moves on to another cell."
Bedroom,https://esolangs.org/wiki/Bedroom,,,,implemented,,languages; thematic,Bedroom is an esolang made by User:AmNow
¢%,https://esolangs.org/wiki/¢%,,,turing complete,,stack-based,languages; low-level,¢% is an esolang made by User:AmNow.
AMiaBF’!?,https://esolangs.org/wiki/AMiaBF’!?,2021,,unknown computational class,implemented,,languages,Content div not found
JBFM7L,https://esolangs.org/wiki/JBFM7L,,,,output only; implemented,cell-based,languages,"JBFM7L - ""Jitejix, But For Masohists 7th Level""."
),https://esolangs.org/wiki/),,,,unimplemented,,languages,) is an esoteric programming language made by User:AmNow.
Knight,https://esolangs.org/wiki/Knight,,,,implemented,,languages; programming languages using polish notation,"Knight is an imperative programming language created by Sampersand in April 2021. It was designed to be easy to write interpreters for, while still being usable. There are over 20 official interpreters."
⫵,https://esolangs.org/wiki/⫵,2021,,,implemented; unusable for programming; output only,,languages,⫵ is a Zero Instruction Set Computer made by User:AmNow.
Common-S3C,https://esolangs.org/wiki/Common-S3C,,,,implemented,,languages,"Every interpreter version of SSSC is written in Python.
Online interpreter. Remember to replace what is in the  read( ) function with your code like:  ""!poop haha;"" or ""=100/;"""
MoveIt,https://esolangs.org/wiki/MoveIt,,,,,,languages,"MoveIt is an esoteric programming language made by User:AmNow, MoveIt moves bytes around, hence the name."
REXS,https://esolangs.org/wiki/REXS,2021,,,implemented; output only,,languages; high-level,REXS is an esoteric programming language created by User:Uellenberg built to simplify reading and writing regular expressions (especially complex ones).
1͏͢,https://esolangs.org/wiki/1͏͢,,,,unimplemented,,languages,"1͏͢ is an esoteric programming language made for the purpose of designing adventure games, made by User:AmNow."
Ascii²,https://esolangs.org/wiki/Ascii²,2021,,,implemented,,languages,"Created by User:Rphii in 2021. Ascii², Ascii2 or AsciiAscii is an Esolang."
Slot,https://esolangs.org/wiki/Slot,2021,,,,,languages,Slot is a one-dimensional esoteric programming language invented in 2021 by User:CarterNotSteve.
RHOVL,https://esolangs.org/wiki/RHOVL,,,turing complete,implemented,,languages,"RHOVL (Register, Heap, One Variable Language) is an esolang created by Andrew Phillips in 2021.
RHOVL is a simplistic imperative language that utilizes 26 variable registers a-z for data storage, a heap for function storage, and a single variable position for manipulating data. All data in RHOVL is u8, although the python implementation does not abide by this."
F²,https://esolangs.org/wiki/F²,2021,,bounded-storage machine,unimplemented,,languages,F² is an esoteric programming language made by User:AmNow. F² resembles Rubik’s cube notation.
BinaryBefunge,https://esolangs.org/wiki/BinaryBefunge,,,push-down automata,implemented,,languages; two-dimensional languages,"BinaryBefunge is an esoteric programming language written by Dominicentek. It's a clone of Befunge. It's like Befunge, but all the characters are represented as binary."
XAH,https://esolangs.org/wiki/XAH,,,,,,languages,prints hello world
GolfScratch,https://esolangs.org/wiki/GolfScratch,,,,implemented,stack-based,languages; golfing language,GolfScratch - language for Code Golfing Made By User:ChuckEsoteric08
IGNORED,https://esolangs.org/wiki/IGNORED,,,,implemented; total; unusable for programming,,joke languages; languages,IGNORED - Esolang made by User:ChuckEsoteric08 That ignores every program!
FlinnScrip,https://esolangs.org/wiki/FlinnScrip,2021,,turing complete,unimplemented,stack-based,languages; high-level,FlinnScrip is a programming language created in 2021 by User:Dtuser1337. The program syntax is inspired by Jug.
Something,https://esolangs.org/wiki/Something,2021,,turing complete; turing tarpits,implemented,cell-based,languages; low-level,Something is a low level programming language created by User:PixelatedStarfish. The only error message in the language is the phrase Oops! Something went wrong!
IG,https://esolangs.org/wiki/IG,,,push-down automata,,,languages; low-level,"IG - Esoteric programing language by ChuckEsoteric08.
Language Named after 2 first commands that has been add."
Focal-2D,https://esolangs.org/wiki/Focal-2D,,,,,,languages; two-dimensional languages,Focal-2D programming language.
Boxes,https://esolangs.org/wiki/Boxes,,,,implemented,stack-based,languages,Boxes is an esoteric programming language created by User:Dominicentek. It's code is stored in several boxes which can be put anywhere in the source code.
NUMBRS++,https://esolangs.org/wiki/NUMBRS++,,,,implemented,,languages; two-dimensional languages,NUMBRS - Two-dimensional made in Scratch esolang by ChuckEsoteric08.
DotSF,https://esolangs.org/wiki/DotSF,2021,,unknown computational class,implemented,stack-based,languages; low-level,"DotSF is a stack based esoteric programming language created by user:ArthroStar11 that was heavily inspired by brainfuck, Befunge, with a few elements derived from Intercal."
INF)xO,https://esolangs.org/wiki/INF)xO,2021,,turing complete,unimplemented,,languages,INF>xO is an esoteric programming language made by User:AmNow. INF>xO was made so that you can have infinite output without loops.
Tock,https://esolangs.org/wiki/Tock,2021,,turing complete,output only; implemented,,languages,"Tock is an esolang/model of computation created by User:Silver. The name is because it puts a lot of focus on working in discrete steps, and Tick was taken."
Numbers,https://esolangs.org/wiki/Numbers,2021,,turing complete,implemented,stack-based,languages,"Numbers is an esoteric programming language created by User:Xorol. The main gimmick is that all of the commands (with some exceptions) are numbers. It uses two stacks, but only one can be used at a time."
Gödelang,https://esolangs.org/wiki/Gödelang,,,turing complete,implemented,,languages; brainfuck derivatives,"Gödelang is an esolang created by User:TJC games. It's based off of Gödel numbering, and it's just another Brain**** clone."
Tack,https://esolangs.org/wiki/Tack,2021,,turing complete,unimplemented,stack-based,languages,"Tack is an esoteric programming language, with only one symbol: !. Tack was made by User: AmNow."
Inse,https://esolangs.org/wiki/Inse,,,,implemented,,languages,Inse is an esoteric programming language where code can be stored in memory as strings and can be run later. Its syntax is similar to BASIC where a command is followed by a space and then the arguments. Inse commands end with a period.
ISEW2C,https://esolangs.org/wiki/ISEW2C,,,,,,languages,"ISEW2C (It Is Esolang With 2 Commands) is an esolang for imitating a Turing machine, comprehending merely two commands, and invented by the User:ChuckEsoteric08!"
Woodchuck,https://esolangs.org/wiki/Woodchuck,2021,,turing complete; turing tarpits,output only; implemented,,languages; brainfuck derivatives,"Woodchuck is a brainfuck derivative by User:Rdococ. Instead of the memory model being an infinite tape of numbers, it is an unlabelled binary tree."
Pith,https://esolangs.org/wiki/Pith,2021,,turing complete,implemented,stack-based,languages; high-level,"pith is a 3-stack esolang themed around vectors, designed by User:ZippyMagician."
Calligulan Assembly,https://esolangs.org/wiki/Calligulan Assembly,2021,,unknown computational class,implemented,,languages; low-level,Calligulan Assembly is an esoteric programming language created by User:ArthroStar11 that is written entirely in Roman Numerals
Ark,https://esolangs.org/wiki/Ark,,,,implemented,,languages,"note: when printing a string like this: !B !L !A !H, you must put a space in between each instruction."
Tsaf,https://esolangs.org/wiki/Tsaf,,,,implemented,,languages,tsaf is the esolang version of fast.
Repetition Legitimizes,https://esolangs.org/wiki/Repetition Legitimizes,2021,,,,,low-level; joke languages,"Repetition Legitimizes is a joke esolang created by Larho#9031 with only 2 commands. It has a memory of infinite cells that overflow once the value in them goes over 255. Once the program ends, it will print the entire memory as ASCII characters."
StairCase,https://esolangs.org/wiki/StairCase,2021,,turing complete,implemented,cell-based,languages; low-level; thematic,Esoteric programming language created recreationally to just add one more weird language to Esolangs and learn a little bit about creating NPM packages and publishing them
TextGarbage,https://esolangs.org/wiki/TextGarbage,,,,implemented,,languages,TextGarbage (previously named Gibberish but that's already taken) is an esoteric programming language created by User:Dominicentek. It's commands are only 1 character long making the code look like gibberish.
Back Alley,https://esolangs.org/wiki/Back Alley,,,,implemented,,languages; thematic,"Have you ever wanted to worry about your program getting jumped by a criminal?
Ever wanted to juggle programming with constantly not getting arrested?"
IWANNADIE,https://esolangs.org/wiki/IWANNADIE,2021,,,implemented,,languages,"IWANNADIE or IWD is an esoteric programming language created in 2021 by Antikore written in python, and it was inspired by assembly code and bash, with the goal to be as confusing as possible but avoiding the use of arbitrary letters and characters to do stuff. All programs must end with the command die, which is used to close the program. 
It's name comes from the concept that, if anyone uses this language, they don't love themselves pretty much."
MCBlocks,https://esolangs.org/wiki/MCBlocks,2021,,,implemented,stack-based; multi-dimensional languages,languages,"MCBlocks is a three dimensional esoteric programming language created by User:Dominicentek. It's code is written as a build in a Minecraft world with each block representing a command that the interpreter follows. The interpreter accepts .nbt files exported by Structure Blocks. The command pointer starts at XYZ 0 0 0 of the structure moving in X+ direction. Because of the Structure Block limit, each program is limited to 48x48x48 grid."
LCode,https://esolangs.org/wiki/LCode,,,,implemented,,languages,"LCode (aka LoserCode) is a ""coding language"" made by User:Nitrogen_Dioxide as a joke.
The ""official"" interpreter is made in C#."
Backrooms,https://esolangs.org/wiki/Backrooms,2021,,turing complete,implemented,cell-based,languages; low-level,"backrooms uses a 3D memory space that holds a single Extended ASCII character per room “cell”.
It has 10 registers and 2 built in stacks per conscious ""thread"". Rules “instructions” can be more than one character long.
It also has 5 data types that can be used with the registers and stacks.
Data can be stored across multiple rooms and can be read as instructions during run-time or be re-read into data."
LOLSUS,https://esolangs.org/wiki/LOLSUS,,,,unimplemented,,languages,
ReadWrite,https://esolangs.org/wiki/ReadWrite,2021,,,implemented,,languages,ReadWrite is an esoteric programming language written by User:Dominicentek. It only has 2 instructions. Reading from memory or writing to memory.
IncLoop,https://esolangs.org/wiki/IncLoop,2021,,,total; no io; unusable for programming; implemented,,languages,IncLoop in a programming language designed to have short programs that might never halt if you run it on a real computer though theoretically an infinite loop is impossible
Headass,https://esolangs.org/wiki/Headass,2021,,turing complete,implemented,,languages,Headass is an esoteric programming language by TheJonyMyster.
Unhaltingfuck,https://esolangs.org/wiki/Unhaltingfuck,2021,,,,cell-based,languages; brainfuck derivatives,"UnHaltingFuck is a language very much like Brainfuck, with one key difference: instead of loops stopping when the value in the current cell is zero, they stop when the value in the current cell is the Gödel number of an UnHaltingFuck program that doesn't halt. The specific Gödel encoding is not specified since it doesn't affect any interesting properties of the language."
Haltingfuck,https://esolangs.org/wiki/Haltingfuck,2021,,,,cell-based,languages; brainfuck derivatives,"HaltingFuck is a language very much like Brainfuck, with one key difference: instead of loops stopping when the value in the current cell is zero, they stop when the value in the current cell is the Gödel number of a HaltingFuck program that halts. The specific Gödel encoding is not specified since it doesn't affect any interesting properties of the language."
AsciiFunc,https://esolangs.org/wiki/AsciiFunc,2021,,,implemented,,languages; high-level,"AsciiFunc is an esoteric programming language, developed by Ucrash and DexterHill0. It consists of 19 commands, each represented with it's own ascii character (Example: $, #, etc). Commands can also have arguments, that can either be identifiers, numbers, booleans, strings or pointers. Commands also cannot be put inside each other, they have to be followed one after another. The language mostly ignores whitespaces and indentation, apart from these rules: there has to be no whitespace between the command character and the corresponding opening parenthesis; there has to be whitespace between commands."
SussyLang,https://esolangs.org/wiki/SussyLang,,,,implemented,stack-based,languages,SussyLang is a stack based esolang for all my bakas 🥵️
Cpy,https://esolangs.org/wiki/Cpy,2021,,turing complete; turing tarpits,implemented,cell-based,languages,cpy (from memcpy) is a Turing tarpit designed by User:ZippyMagician.
Todo,https://esolangs.org/wiki/Todo,2021,,unknown computational class,unimplemented,queue-based,languages,"Todo is an esoteric programming language made by thejonymyster, where functions are called from a queue. Functions are defined and subsequently added to the queue, and can be called when on the top of the queue. The function which defines functions (function 0) is also on the queue. The program starts with only function 0 on the queue, and the variable 0 defined as the value 0."
Functionality,https://esolangs.org/wiki/Functionality,2021,,turing complete,unimplemented,,languages,Functionality is an esoteric programming language written by User:Dominicentek with the goal being having the most functionality as possible.
Heck,https://esolangs.org/wiki/Heck,2021,,turing complete,implemented,stack-based,languages,
Smileyface,https://esolangs.org/wiki/Smileyface,,,,implemented,cell-based,languages,":) is an esolang created by User:Martsadas that only uses smileys

Valid tokens are :), :P, :], :>, :D, and :O."
NoCode,https://esolangs.org/wiki/NoCode,,,,implemented; unusable for programming,,languages,NoCode is an esoteric programming language written by User:Dominicentek. It doesn't have any source code.
Sokolang,https://esolangs.org/wiki/Sokolang,2021,,,,stack-based,languages,Sokolang is a programming language created by FLeckami that use Sokoban gameplay to execute commands.
\ELLOWOS,https://esolangs.org/wiki/\ELLOWOS,2021,,turing complete,,,languages,"\ELLOWOS is an esoteric programming language created by Christopher Strickland in 2021. It was made to be a better brainfuck. There are no comments in \ELLOWOS, unlike most languages because Strickland was too lazy to add them. The syntax of \ELLOWOS is entirely characters from the latin alphabet. The name comes from an error while making an interpreter for \ELLOWOS. Instead of outputting ""HELLO WO"" (going to be HELLO WORLD) it output ""\ELLOWOS""."
Cammy,https://esolangs.org/wiki/Cammy,2021,,,implemented,,languages,"Cammy is a basic syntax for expressions of wikipedia:categorical logic. Cammy expressions can be interpreted in any category with the appropriate features. The current documented syntax addresses any wikipedia:Cartesian closed category which has wikipedia:categorical sums, a natural numbers object, and free monoids (lists)."
Why Does This Towel Smell Different Each Time I Use It,https://esolangs.org/wiki/Why Does This Towel Smell Different Each Time I Use It,2021,,,implemented,stack-based,languages,"Why Does This Towel Smell Different Each Time I Use It is an esolang created by User:LarhoCherqi, with other names being WDTTSDETIUI or Towellang. WDTTSDSETIUI's data structure consists of infinite stacks and a register called mem. mem starts at 0 and can be used to replace any value name in a command."
Flooding Waterfall Model,https://esolangs.org/wiki/Flooding Waterfall Model,2021,,turing complete,no io; implemented,,languages; low-level,"Flooding Waterfall Model is a modification of The Waterfall Model, first observed by Deedlit11 and with a name coined by User:FortyTwo. It was inspired by an attempt to implement a Turing-complete language in Magic: the Gathering: the existing constructions for implementing The Waterfall Model make use of the card ""Dralnu's Crusade"", but there are reasons to want a Turing-completeness construction that does not require that card, and if it is removed, the constructions for implementing The Waterfall Model end up implementing Flooding Waterfall Model instead."
Matrixfuck,https://esolangs.org/wiki/Matrixfuck,2021,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; low-level; two-dimensional languages,"Matrixfuck is a superset of brainfuck made by User:Heptor, with the only change being the memory and tape is a 2-dimensional array."
Pefunge,https://esolangs.org/wiki/Pefunge,2007,,,implemented,,languages,"Pefunge is a Befunge-derivered language proposed by mame in 2007.
It is Befunge with Pi-calculus."
LispNTI,https://esolangs.org/wiki/LispNTI,2019,functional paradigm,,,,languages,"LispNTI (an acronym meaning ""Listen, It's Shit, Please Never Try It"") is a minimal Lisp-like language created by Katrina Scialdone. The language's primary conceit is that instead of implementing a proper list parser, its interpreter implementation (written in NodeJS) uses Regex replacements to convert the program into valid JSON, which is then parsed by Javascript's built-in JSON parser."
Broken Calculator,https://esolangs.org/wiki/Broken Calculator,2021,,,implemented; total,cell-based,languages; high-level,"Broken Calculator is a programming language created by User:PixelatedStarfish; it is designed such that a program has a random chance of crashing on a given line of code. The chance of crashing is always greater than 0, which ensures that every program in the language must halt. Therefore, this programming language does not meet the criteria for Turing Completeness because the Halting Problem is decidable for all possible programs. If a random error occurs, the message ""Broken Calculator!"" is printed, with an error code, and the probability of crashing."
BinPython,https://esolangs.org/wiki/BinPython,,,turing complete,implemented,,languages; high-level,The name tells it all.. Binary-Python
Malfunge,https://esolangs.org/wiki/Malfunge,2021,,unknown computational class,implemented,stack-based,languages; low-level; two-dimensional languages,Malfunge is an esoteric programming language created by User:ArthroStar11 heavily inspired by Befunge and Malbolge
Geolang,https://esolangs.org/wiki/Geolang,,,,total; unusable for programming,,languages,Geolang is a programming language made by user:TJC games for helping with geometry.
Slam,https://esolangs.org/wiki/Slam,2021,,unknown computational class,implemented,,languages; high-level; thematic,"Slam is an esoteric programming language made by User:ArthroStar11 Its syntax is meant to resemble slam poetry (hence the name) It is somewhat similar in concept to Beatnik, Length and Enjamb"
Wheel,https://esolangs.org/wiki/Wheel,2021,,turing complete,,deque-based,languages,"Wheel (WHolly ElEgant Language) was created by User:PixelatedStarfish in 2021. The syntax of the language is designed to be terse, with single character operations. The syntax is influenced by bf and Heck."
Vessel,https://esolangs.org/wiki/Vessel,2021,,turing complete,unimplemented,deque-based; stack-based; queue-based; cell-based,languages; high-level,"Vessel (Virtual machinE Simulating Stack and queuE Language) is a language designed by User:PixelatedStarfish in 2021. As the name suggests, the language is designed to simulate theoretical machines. Vessel is designed with an acceptable degree of practicality in mind. It features several high-level operations to preserve the sanity of programmers."
Grue,https://esolangs.org/wiki/Grue,2021,,unknown computational class,usability unknown; unimplemented,,languages; meta-languages,"This language is both impossible to describe and program in. Thankfully, the associated metalanguage is not quite so esoteric."
JSInstruction,https://esolangs.org/wiki/JSInstruction,2021,,,implemented,,languages,JSInstruction is an esoteric programming language written by User:Dominicentek. The language has only one built in instruction and you can add more by including JavaScript code.
Meow (Martsadas),https://esolangs.org/wiki/Meow (Martsadas),,,,,,joke languages; languages; thematic,Meow is a joke esolang created by User:Martsadas that has 2 registers that can store integers.
SUB,https://esolangs.org/wiki/SUB,2021,,,unimplemented,,languages,SUB is an esolang invented by User:Hakerh400 in 2021.
Haifuckqueue,https://esolangs.org/wiki/Haifuckqueue,,,,,stack-based,golfing language; languages,"haifuckqueue is a stack-based esolang created by User:4gboframram in September 2021. It is inspired by the concept of the traditional Japanese poem, the Haiku. However, programs in this language do not actually look like Haikus but follow a similar form."
Meowlang,https://esolangs.org/wiki/Meowlang,,,,implemented,,languages; thematic,Meowlang is an esoteric programming language designed for cats.
EPL Main,https://esolangs.org/wiki/EPL Main,,,,implemented,,languages,"EPL Main is a high-level assembler written in D by Timofeyka. EPL Main can be used as a regular language(like the same C), for osdev, it is useful in performance-critical moments, the development of microcontrollers."
")0,1(","https://esolangs.org/wiki/)0,1(",2021,,,implemented,cell-based,languages,"[0,1] or )0,1( is an esoteric programming language created by User:rphii in 2021."
Nabd,https://esolangs.org/wiki/Nabd,,functional paradigm,,implemented,,languages,"A simple, functional esoteric programming language"
StackCell,https://esolangs.org/wiki/StackCell,2021,,turing complete,implemented,stack-based,languages; low-level,StackCell is an esoteric programming language that consists of two stacks of integers and some commands to manipulate them. You also get a single cell which can be written to and read from as much as you like.
BracketsLang,https://esolangs.org/wiki/BracketsLang,2021,,turing complete,implemented,cell-based,low-level; languages,"BracketsLang is esoteric programming language invented in 2021 by user PoetLuchnik to show that brackets are better than Python tabs. Code is a sequence of atoms and blocks of sub-code. The program is always curly brackets block. Each block contains sub-code and has its own accumulator, which is zero at the beginning. Atoms have no code in, and they works with parent block accumulator. Accumulator is byte value [0..255]. Brackets are code, everything else is notes."
When the Imposter is Sus,https://esolangs.org/wiki/When the Imposter is Sus,2021,,,,deque-based,languages,When the Imposter is Sus is a deque-based OISC made by User:Maikeru51.It is based off of popular video game Among Us. Its one command consists of a colored crewmate calling another crewmate sus. It also features a buffer value.
SRlang,https://esolangs.org/wiki/SRlang,2019,,turing complete,implemented,,languages; languages; thematic,"SRlang, sometimes called Computational Amazigh or RiffiLang, is a Python-interpreted programming language created by User:Soyuzguy123!. The language is made to be translated into multiple languages in North Africa so that people who natively speak the language can write code in said language. Currently, the main plans are to translate the current English syntax to Amazigh, Darija, and Kabyle. The language is limited and as of now can only use three variables: x, y, and z.
The looping method of the language uses the ability to load another SRlang program multiple times.
Documentation is being made to ensure the language can be learned easily."
6673846770,https://esolangs.org/wiki/6673846770,2021,,,implemented,,languages,"6673846770 is an esoteric programming language created by user Larryrl, in 2021, whose name had already been used for an esoteric language, thus the name change. It operates on an array of cells,"
Senpai,https://esolangs.org/wiki/Senpai,,,,implemented,stack-based,languages,"Senpai is a stack-based, dynamically typed esolang created by User:4gboframram."
JSCall,https://esolangs.org/wiki/JSCall,2021,,turing_complete,implemented,,languages,JSCall is an esoteric subset of the JavaScript language inspired by JSFuck. JSCall is invented by User:Hakerh400 in 2021.
AutomataFuck,https://esolangs.org/wiki/AutomataFuck,2021,,linear bounded automata; finite state automata; linear bounded automata,usability unknown; implemented,particle automata; cell-based; cellular automata,,AutomataFuck is an esoteric language that requires you to think in circles created by User:GoodCoderBBoy.
Composite,https://esolangs.org/wiki/Composite,2021,,unknown computational class,implemented,stack-based,languages,Composite is an esolang created by User:ArthroStar11 All of it's commands are prime numbers (yes the name of the language is a pun)
Starstuff,https://esolangs.org/wiki/Starstuff,2021,,,implemented,,languages,"Starstuff is a (family of) programming language(s) by User:PixelatedStarfish. It is designed such that an arbitrary sequence of characters can be interpreted as source describing a program, including ASCII art, source written in other languages, and articles such as this one. This is accomplished by compiling source to a language usable for programming. This article will assume the source compiles to Astridec, but this is far from the only acceptable compiler possible. Many variations on Starstuff that compile to other languages are possible."
Astridec,https://esolangs.org/wiki/Astridec,2021,,turing complete,implemented,cell-based,languages,"Astridec is a programming language created by User:PixelatedStarfish. It is designed for Starstuff, such that any sequence of characters can be converted to runnable Astridec code. Astridec is designed to be extremely simple, with 10 instructions and virtually no errors. It is very similar to bf; memory is stored as bytes on a circular, unbounded tape (similar to a deque). Bytes wrap around such that all values must be between 0 and 255 inclusive."
Digital Miracle,https://esolangs.org/wiki/Digital Miracle,2021,,turing_complete,implemented,,languages,Digital Miracle is yet another theorem-proving esoteric programming language invented by User:Hakerh400. This axiomatic system is a mixture of combinatory lambda calculus and inductive Peano arithmetic. Natural numbers are represented as Church numerals.
Help.,https://esolangs.org/wiki/Help.,,,,,,languages,This language is created by User:WhyNot?. Based off Assembly.
Unpl,https://esolangs.org/wiki/Unpl,2021,,,unimplemented,cell-based,low-level; languages; brainfuck,"unpl operates on an array of memory cells, each initially set to zero. The array is 50,000 cells long.There is a pointer, initially pointing to the first memory cell which is cell 0. The cells 49990 to 50000 are reserved. They go with some of the instructions to make them work properly. The Instructions are:"
EXDotSF,https://esolangs.org/wiki/EXDotSF,2021,,,implemented; works-in-progress,stack-based,languages,EXDotSF (EXtended DotSF) is user:Rudolph4268's WIP extension of DotSF by user:ArthroStar11 and maintains backwards compatibility with the latter.
Hell.js,https://esolangs.org/wiki/Hell.js,,,,implemented,,languages,Hell is an esoteric subset of the JavaScript programming language that uses JavaScript's built in Proxy feature to run code.
UPE,https://esolangs.org/wiki/UPE,,,turing complete,implemented,,languages; high-level,"UPE, or Unary Python Esolang, is a language/extension of python that just makes your life impossible, to use UPE, write your program in Python3, then replace every character in the program with a three digit number containing that character's ASCII value, then stick all those character numbers back to back and add a 1 at the beginning to create a real number."
On/Off,https://esolangs.org/wiki/On/Off,2021,,,no io,,languages; joke languages,"On/Off is a zero-dimensional esoteric programming language with only two instructions, namely On and Off."
PRNGP2,https://esolangs.org/wiki/PRNGP2,2021,,turing complete,implemented,,languages; high-level,"PRNGP2, or Psuedo-Random Number Generator Python v2, is a PRNG based Python3 extension
that is made to be painful. To write in PRNGP2, use input whole numbers seperated by "";"",
and each number is used to seed a Mersenne Twister, which generates a random number
that is 32-126."
INCJ,https://esolangs.org/wiki/INCJ,,,turing complete,,,languages,The INCJ (pronounced INC-JAY) programming language is an OISC. It operates on a memory of signed unbounded integers.
BOOMOP,https://esolangs.org/wiki/BOOMOP,2021,,unknown computational class,usability unknown; unimplemented,cell-based; stack-based; multi-dimensional languages,low-level; languages,Based On Objects Made Of Polygons or short BOOMOP is an an esoteric programming language created by User:rphii in 2021.
Hoverfly,https://esolangs.org/wiki/Hoverfly,,,turing complete,implemented,,languages,"hoverfly is an esoteric, Turing-complete and purely imperative language. The name may be translated, when speaking in another language."
ImagePath,https://esolangs.org/wiki/ImagePath,,,,unimplemented,stack-based,two-dimensional_languages; languages,ImagePath is an esoteric programming language created by Dominicentek for Truttle1's Visuals Esojam. It has a pointer that executes pixels in an image as instructions. Path is randomly chosen.
SRL++,https://esolangs.org/wiki/SRL++,,,,implemented,,languages,String Replacement Language++ or SRL++ for short is an esoteric programming language developed by MattiDragon. It has an official python interpreter available on github. It's based on replacing all matches of a regex in a string with an other string. It differs from most string replacement langs due to using regex for matches and allowing usage of match groups in replacement.
Nondescript,https://esolangs.org/wiki/Nondescript,2021,,,implemented,stack-based,languages,
FU,https://esolangs.org/wiki/FU,,,unknown computational class,,cell-based,languages,"FU (Or FUUUUUUUUUUUUUUUUUUUUUUU) is an esoteric programming language created by User:Positron.
It is designed to be minimalistic and hard to understand."
Helios,https://esolangs.org/wiki/Helios,2021,,unknown computational class,implemented,stack-based,languages; low-level,"Helios is a stack based esolang created by User:ArthroStar11. It is designed to work in Starstuff by User:PixelatedStarfish such that any file can create a valid program, albeit not necessarily useful or functional."
Left-Right March,https://esolangs.org/wiki/Left-Right March,2021,,unknown computational class,implemented,cell-based,languages; low-level,"Left‐Right March is an esoteric programming language created by User:DigitalDetective47. It works by having a pointer moving across the program, executing instructions as it goes. It canonically uses the extension .lrm for scripts."
YoptaScript,https://esolangs.org/wiki/YoptaScript,,,turing complete,,,languages; thematic; thematic,"YoptaScript is a language created by Semyon Gozman, Georgy Mkhitaryan and Mikhail Belozersky. It's JavaScript, but all on Russian foul language. This language doesn't insult anyone. It created to help gopniks to know how to programming."
BrainSoup,https://esolangs.org/wiki/BrainSoup,2021,,,implemented,,languages; brainfuck equivalents; meta-languages,"BrainSoup is a language that translates any  trivial bf substitution
into bf. User:PixelatedStarfish is the author of this metalanguage.
The first 8 lines of any BrainSoup program are reserved for bf command substitutions. Line 9 is a newline. Source code in the bf equivalent can be written from Line 10. The file extension for source is .bsou"
Rrreplace,https://esolangs.org/wiki/Rrreplace,,functional paradigm,,implemented,,languages,rrreplace is an esoteric language that uses string substitution in a functional way.
Brainfuckn't,https://esolangs.org/wiki/Brainfuckn't,,,turing complete,implemented,,languages,"Brainfuckn't is a tape-based esolang created by user:4gboframram. The goal of the language was to make a language that is more frustrating to use than brainfuck, but at the same time to have a just as simple instruction set. Like brainfuck, this language's name should be written in all lowercase unless at the start of a sentence."
GPTLang,https://esolangs.org/wiki/GPTLang,2021,,unknown computational class,unimplemented,,languages; generated by ai,GPTLang is an esoteric programming language invented by the GPT neural network.
.⍸.,https://esolangs.org/wiki/.⍸.,2021,,turing complete,unimplemented,,languages,".⍸. (pronounced: nose) is an esoteric programming language made by User:AmNow, It was directed to look like emoticons with noses."
ICBINB,https://esolangs.org/wiki/ICBINB,2021,,unknown computational class,,stack-based,languages; brainfuck derivatives; low-level,"ICBINB (short for I Can't Believe It's Not Brainfuck) is an esolang made by User:ArthroStar11 the code entirely uses valid Brainfuck tokens however the language behaves very differently, not least of which that it is a stack based language."
Where,https://esolangs.org/wiki/Where,2021,,,implemented,cell-based,languages,Where is an esoteric programming language created by User:Ketok.
Keystone,https://esolangs.org/wiki/Keystone,2021,,,unimplemented,,languages,"Keystone is an esoteric programming language made by User:AmNow, and was made for the purpose of creating and checking product keys."
KonamiCode,https://esolangs.org/wiki/KonamiCode,2021,,turing_complete,implemented,cell-based,brainfuck derivatives; languages,"KonamiCode is an esoteric programming language that is designed to be similar to BrainFuck but slightly easier to use. Its name comes from its commands, all of which represent buttons on a game controller. (except for the parenthesis). This means that you can program in it using a game controller with a D-Pad, 4 buttons, and a Select and Start button."
MadLad,https://esolangs.org/wiki/MadLad,2021,,,implemented,,languages,"MadLad is an esoteric programming language meant to be similar to C# but with a twist. MadLad is a very angry language and will yell at you for everything. Featuring screaming syntax and unhelpful error messages, this language hates everything and will express it with rage."
Mash,https://esolangs.org/wiki/Mash,,,,implemented,,languages; low-level,"Mash is a esoteric programming language made by User:Twingamerdudes(myself). It was made in C# In around 1-2 weeks (Can't remember when I started it).
This wiki page will teach you how to use Mash and its Syntax, plus more."
Arepo,https://esolangs.org/wiki/Arepo,,,,unimplemented,,languages; two-dimensional languages,"Arepo is an esoteric programming language invented by User:DoggyDogWhirl on October 15, 2021.
It is a two-dimensional programming language inspired by Befunge, and by the concept of ""time inversion"" from Christopher Nolan's movie Tenet."
Expressions,https://esolangs.org/wiki/Expressions,2021,,unknown computational class,usability unknown; unimplemented,,languages; high-level,Expressions is an esoteric programming language created by User:DigitalDetective47 based around re‐defining the results of calculations. It has a syntax similar to that of non‐esoteric programming languages.
Zoophilia,https://esolangs.org/wiki/Zoophilia,2021,,turing complete,,,brainfuck equivalents; brainfuck derivatives; brainfuck; low-level; languages,"This is a full brainfuck equivalent language, because I was too lazy to come up with more than 8 instructions. The compiler for this language is a machine learning algorithm of your choice (the linked github uses google's InceptionV3 model, pretaught several objects) that interprets images of animals as brainfuck instructions. The images must be in the linked folder, and in the correct lexigraphical order (I have also created and linked a handy brainfuck-to-Zoophilia compiler). For convenience's sake, (And the fact that I dont want to upload 50 pictures) I have re-used the same image for every instance of an instruction, but since the compiler is powered by a machine learning algorithm, I encourage you to use a different, hand selected image for each individual instruction!"
G85,https://esolangs.org/wiki/G85,2021,,unknown computational class,no io; implemented,queue-based,languages; low-level,"G85 is a programming language originally created in 2018 by User:danielle, but not refined until 2021. The name is inspired by the word Gates, referring to the loops, and the fact that it only uses 5 symbols (Gates -> Gate5 -> G85)"
Dashes,https://esolangs.org/wiki/Dashes,2021,,turing complete,implemented,cell-based; stack-based,languages; low-level,Dashes is an esoteric programming language created by User:DigitalDetective47 where all instructions are comprised of dashes. It canonically uses the extension .dash for scripts.
SplitFuck,https://esolangs.org/wiki/SplitFuck,2021,,turing complete,,,languages; brainfuck derivatives; low-level,"SplitFuck is a derivative of Brainfuck whose commands make use of a byte split into two four-bit nibbles, which denote a command and the behavior of that command. This functionality is adapted from the 3-bit/5-bit command/behavior split of Brainfuck Assembly Language (BAL). Like BAL, it is meant to make hardware implementation of Brainfuck easier. However, it is also split in a sense that a portion of the 16 possible commands are directly inherited from Brainfuck (with the added functionality of BAL), while another portion are adapted to manipulate the memory pointer beyond incrementing and decrementing, and a few are adapted to manipulate the instruction pointer beyond loops. This is roughly adapted from and inspired by the additional commands of BrainGuck, and is also meant to make the language easier to use."
BoolX,https://esolangs.org/wiki/BoolX,2008,,turing complete,implemented,cell-based; queue-based,languages; low-level,BoolX is an esoteric programming language that works with binary numbers. The cool part is that it allows to do arithmetics and other operations with numbers of theoretically infinite length. Every instruction in BoolX is an ASCII character.
TISolang,https://esolangs.org/wiki/TISolang,2021,,turing complete,,,languages,"TISolang (or simply, ""TIS-o-lang"") is a esoteric programming language that created by McDude73  in 2021 that was implemented based on the game TIS-100 by Zachtronics."
Highways,https://esolangs.org/wiki/Highways,2021,,turing complete,unimplemented,cell-based; concurrent programming,languages; two-dimensional languages; low-level,Highways is an esoteric programming language created by User:DigitalDetective47 where the program is a highway network.
GridRun,https://esolangs.org/wiki/GridRun,2021,,unknown computational class,unimplemented,,languages,In GridRun instructions are laid out along paths on a grid and are read by HEAD(s) moving along those paths.
Fairytale,https://esolangs.org/wiki/Fairytale,2021,,,unimplemented,,languages,"Fairytale is an esoteric programming language created by User:Doubi. It is designed in a way, that the code can be a fairy tale at the same time. It is inspired by Rockstar."
Duh,https://esolangs.org/wiki/Duh,,,,implemented,cell-based,languages,duh is an experimental deterministic cell-based esolang created by User:~blu256 written just for fun.
LOLGraphics,https://esolangs.org/wiki/LOLGraphics,2020; 2021,,unknown computational class,implemented,,high-level; joke languages,"LOLGraphics is an esoteric programming language loosely based on lolcode only with graphics. Version 0.1 with only 4 commands was released in itch.io in December 9th, 2020, and the final version 3.4 was released in June 1st 2021. According to a commenter in the itch page, the language is taught as part of the school curriculum in Eritrea, however the reliability of the source is under debate."
ShiftbB,https://esolangs.org/wiki/ShiftbB,2021,,,implemented,cell-based,low-level,"ShiftbB (meaning ""Shift bit Byte"") is a cell-based esoteric programming language that uses 2 data units without explicit types: bits and bytes. The move pointer instructions are bit-sized and most of the other instructions are byte sized. The current byte is from your_position to your_position+8. Because there are no proper increment/decrement operators, setting a value involves manually setting the bits, and an ""overflow region"" where any extra data is destroyed."
PRG,https://esolangs.org/wiki/PRG,2021,,,unimplemented,,languages; high-level,PRG is a weirdlang created by User:DigitalDetective47 where the entire program is made of three‐letter tokens.
Syllad,https://esolangs.org/wiki/Syllad,,,turing complete,implemented,,languages,"Syllad is a language that is programmable in a usual way, but has a 'quirks mode' (up to commit ca5b34e of the repo) that lets you program in it in a way similar to JSFuck.
You trigger this by putting an = at the start of your program.
Ex: +[] returns -1 in quirks mode"
Labra,https://esolangs.org/wiki/Labra,2021,declarative paradigm,,unimplemented,,languages,Labra is an esoteric programming language created by User:DoggyDogWhirl.
Binary ///,https://esolangs.org/wiki/Binary ///,,,,unimplemented,,languages,"Binary /// is a derivative of slashes that operates directly on bits, and only uses 1 and 0, the equivalents of / and \."
Minil,https://esolangs.org/wiki/Minil,,,,,,languages,"Minil is a small language by User:Exeon that relys mostly on a stack pointer, a register, a boolean register, and printing ASCII codes"
UCanCode,https://esolangs.org/wiki/UCanCode,2021,,,implemented,,languages,"UCanCode is a programming language created in 2021 for Windows Poop Edition 3.0, an operating system by CrapOS. Out of context, Windows PE is a series of fake operating system simulators created by User:Viba, who also created UCanCode. The original implementation transpiles code into Lua and runs it. The language consists primarily of commands that are structured almost like plain English, and are influenced by Scratch."
DG,https://esolangs.org/wiki/DG,,,,output only,,languages,"DG (named after a great computer-science teacher) is a language designed with principles known from lisp.
All programms are written in normal text-files."
^^ 16h 35014ng 15 th15,https://esolangs.org/wiki/^^ 16h 35014ng 15 th15,,,,unimplemented,,languages; thematic,"^^_16h_35014ng_15_th15 is an esoteric programming language made by User:Epidemic7. It's commands are based off of what the Challenger crew said before exploding, because.
The stack is 10 high, cause THIS.. IS.. ESOLANG!!"
APOL,https://esolangs.org/wiki/APOL,,,,implemented,,languages; golfing language; programming languages using polish notation,APOL (Another Polish Golfing Language or APOL's a Poor Golfing Language) is a golfing language that is based off of Lisp and uses entirely polish notation for its instructions (+ 1 1 instead of 1 + 1.)
UponThem,https://esolangs.org/wiki/UponThem,,,,implemented,,languages; thematic,int loop = 0;
Apollo Guidance Computer,https://esolangs.org/wiki/Apollo Guidance Computer,,,,implemented,cell-based,languages; low-level,"The Apollo Guidance Computer (AGC) is a real computer architecture from the 1960s that was used in the Apollo moon landing missions of NASA, as well as some other space exploration missions afterwards.  The AGC was developped by MIT's Instrumentation Lab."
Seas,https://esolangs.org/wiki/Seas,2021,,,unimplemented,,languages; two-dimensional languages,Seas is a 2D esoteric programming language made by User:AmNow and was made for TeamSeas.
AnalLang,https://esolangs.org/wiki/AnalLang,,,turing complete,implemented,,languages; high-level,"AnalLang is an esoteric joke programming language made by Unzor. Its interpreter is written in Node.js, and the language itself is the emojis ""🍑🍆"" repeated in a sequence that translates to JavaScript."
Posset,https://esolangs.org/wiki/Posset,2014,declarative paradigm,unknown computational class,no io; unimplemented; unusable for programming,concurrent programming,languages; high-level,Posset is BarryNL's attempt to create the perfect programming language and the name is an abbreviation from Possibility Set. The programming language itself and also this wiki page are still under construction.
Moaiscript,https://esolangs.org/wiki/Moaiscript,2021,,turing complete,implemented,stack-based,languages; low-level,Moaiscript is a stack-based language created by Dtp09 in which the only acceptable characters to use are the Moai Emoji (🗿) and the newline character (\n). Moaiscript was inspired by Chicken and has interpreters written by users Dtp09 and Eiim.
Snak,https://esolangs.org/wiki/Snak,2021,,unknown computational class,usability unknown; implemented,,languages; two-dimensional languages; thematic,"Snak is an esolang by User:Quintopia in 2021 based on ideas by Esolangs Discord user thejonesymyster. Programs consist of an infinite grid of fruit on which a vast Snake Game is played. In short, it is a language of sneks getting snaks."
ParamNO,https://esolangs.org/wiki/ParamNO,,,unknown computational class,implemented,,languages,ParamNO is an esoteric programming language invented by codingMASTER398 in 2021.
Lamp,https://esolangs.org/wiki/Lamp,,,,output only; implemented,,languages,"Lamp is an imperative, boolean based, esoteric programming language."
Echo,https://esolangs.org/wiki/Echo,2021,,unknown computational class,implemented,,languages; high-level,"Echo is a programming language created by User:Charon25 consisting of instructions, executed one after the other, that create and receive sounds, sent from an audio source, which bounces off walls. They all contain a number value, and can be manipulated to make more complex operations."
Ensemencer,https://esolangs.org/wiki/Ensemencer,2021,,unknown computational class,implemented,,languages,"Uses the standard Mersenne twister implementation MT19937, to seed its main memory space. Named after the French verb meaning to sow (seeds)."
Fool,https://esolangs.org/wiki/Fool,2021,,turing complete,no io; implemented,cell-based,languages; low-level,"Fool is an esoteric programming language created by User:DigitalDetective47. Its name comes from the common abbreviations func and bool, which are the only concepts that the language defines. It also references the fact that anyone who would attempt use this language for anything productive is a fool."
BF Lite,https://esolangs.org/wiki/BF Lite,,,,implemented; no io; total; unusable for programming,cell-based,languages; brainfuck derivatives; low-level,"BF Lite (or Brain**** Lite) is BF without input, output and arrays.."
MindScuffed,https://esolangs.org/wiki/MindScuffed,,,,implemented,,languages; brainfuck derivatives,"Mind Scuffed is just an ""improved"" brainfuck clone"
This,https://esolangs.org/wiki/This,2021,,,implemented,cell-based; queue-based,languages,"this(alternatively, Fareen) is an esoteric programming language made by Alluseri, following the idea of Celsee about only using numbers."
"For(T,R,A,N","https://esolangs.org/wiki/For(T,R,A,N",2020,,,implemented,,languages,"For(T,R,A,N is an esoteric subset of the TI-BASIC programming language on the TI-83 series of graphing calculators created by User:kg583, where For( statements are one of the few TI-BASIC features permitted."
UGGA,https://esolangs.org/wiki/UGGA,,,,implemented,,languages,UGGA
GibMeRol,https://esolangs.org/wiki/GibMeRol,2022,,turing complete; turing tarpits,implemented,,languages; brainfuck equivalents; joke languages; low-level,"GibMeRol is a Brainfuck clone that replaces each command in Brainfuck with the letters GibMeRol. It was created for the sole purpose of getting its author, User:Milkman, the 'ESOLANG CREATOR' role in User:Truttle1's discord server. It didn't work."
THROW THIS TO THAT,https://esolangs.org/wiki/THROW THIS TO THAT,2022,,,unimplemented,,languages,"THROW THIS TO THAT is an esoteric language created by the User:Esolang1. This language is heavily based on FROM HERE TO THERE, with the exception of not being able to handle files. So, you can expect to see some similarities with the language FROM HERE TO THERE in this page. (E1-0003)"
Byte-based Instruction Jumping,https://esolangs.org/wiki/Byte-based Instruction Jumping,2022,,turing complete,implemented,cell-based,languages; low-level,"Byte-based Instruction Jumping (BIJ, pronounced Bee-Jay) is a self-modifying esoteric programming language created by me (User:Peter). It was created during the end of 2021 and the beginning of 2022, and is inspired by 2 Bits, 1 Byte. Pretty much any string of text is a valid BIJ program, as long as it doesn't include some really unusual symbols."
Minskyfuck,https://esolangs.org/wiki/Minskyfuck,,imperative paradigm,unknown computational class,usability unknown; implemented,,languages,Minskyfuck is an esolang made by User:Otesunki (talk) based loosely on Minsky machines. It has two registers called R1 and R2.
Quiner,https://esolangs.org/wiki/Quiner,2020,,,implemented,deque-based,languages,Quiner is a simple esoteric programming language focused on using quines as a method of looping and conditional execution. Created by User:Umnikos in 2020.
Init,https://esolangs.org/wiki/Init,,,,unimplemented,,languages,This language was created by User:WhyNot?.
HASSL,https://esolangs.org/wiki/HASSL,2022,,unknown computational class,implemented,stack-based,,"HASSL (Hexadecimal, ASCII, Symbolic, and Stack-Based Language) is a stack-based esoteric programming language created in 2023 by Ethan T. Stanger."
Return()zero,https://esolangs.org/wiki/Return()zero,2022,,,unimplemented,,languages,return()->0 is a language that returns a value for everything you do.
PocketBF,https://esolangs.org/wiki/PocketBF,,,,implemented,,languages; brainfuck derivatives; brainfuck equivalents,PocketBF is a tinyBF derivative with a dedicated I/O command.
Yoctostack,https://esolangs.org/wiki/Yoctostack,2022,imperative paradigm,turing complete; turing tarpits,usability unknown; unimplemented; no io,,languages,Yoctostack is an esolang made by User:Otesunki (talk) (and further whittled down by User:Quintopia (talk)) based loosely on Minsky machines and operates on a stack.
InstructionPointerBF,https://esolangs.org/wiki/InstructionPointerBF,,,,implemented,,languages; brainfuck derivatives; brainfuck equivalents,"InstructionPointerBF is a PocketBF variant.
There are only 2 instructions, so it can take instruction in binary.
The motivation for creating InstructionPointerBF is to allow Brainfuck code to compressed by converting characters to InstructionPointerBF, so that no ASCII character is wasted."
Cratefuck,https://esolangs.org/wiki/Cratefuck,2022,,turing complete,output only; implemented,cell-based,languages; brainfuck derivatives; low-level,Cratefuck is an esoteric programming language created by User:DigitalDetective47 where you have a limited amount of data markers to use.
Π₁,https://esolangs.org/wiki/Π₁,2022,,turing complete,implemented,,languages,Π₁ is a dependently typed set-theoretic declarative programming language with inductive constructions.
Nightmare,https://esolangs.org/wiki/Nightmare,2022,,unknown computational class,unimplemented; usability unknown,multi-dimensional languages,languages,Nightmare is a language created by Otesunki (talk).
AssemblerFuck++,https://esolangs.org/wiki/AssemblerFuck++,2022,,turing complete,implemented,cell-based,languages; brainfuck derivatives,"AssemblerFuck++ is an esoteric language created by User:Esolang1. This language is AssemblerFuck, with few more features containing if statements, more loops, and an accumulator. (E1-0003)"
Advance The Wheel!,https://esolangs.org/wiki/Advance The Wheel!,2022,,turing complete; turing tarpits,implemented,queue-based,languages; low-level,"Advance The Wheel! is a turning tarpit created by User:ais523 in 2022. Its primary purpose is to create a language in which a self-interpreter can be as small as possible. It also has an unusual form of control flow: when the program reads data from memory, this does not affect the position of the instruction pointer, but rather affects the position of the wheel (thus the two branches of the equivalent of an ""if"" statement will run the same program commands, but with different meanings because they will correspond to different wheel commands)."
Binin,https://esolangs.org/wiki/Binin,,,turing tarpits; turing complete,no io; implemented,cell-based,languages; low-level,Binin is a language made by User:ChuckEsoteric08 that uses binary
Kak,https://esolangs.org/wiki/Kak,,,unknown computational class,implemented; no io,,languages,"Kak is an esolang made by User:ChuckEsoteric08 which, employing a minimalistic syntax, operates on an infinite tape of bits."
Inuck,https://esolangs.org/wiki/Inuck,2022,,turing complete,unimplemented,cell-based; multi-dimensional_languages,languages; brainfuck derivatives,Inuck is a brainfuck derivative by VilgotanL which is quite infinite.
YAASEL,https://esolangs.org/wiki/YAASEL,2022,,,implemented,stack-based,languages,"YAASEL (Yet Another Another Stack-Based Eso-Lang) is a Stack-Based Programming Language featuring 15 individual Instructions, it was created by Felix Eckert (user:Bertrahm). 
It is partly inspired by Brainfuck. It currently has a Web-Implementation written in Java-Script and a Java Implementation. The Source Code of both can be found on the YAASEL Github Repository."
Degration,https://esolangs.org/wiki/Degration,,,,implemented,cell-based,languages; brainfuck derivatives,"Degration is a Brainfuck like language created by User:Bertrahm. However, the program is stored at the start of the tape and can be modified with the language's commands. 1/16 of all data on the tape is modified randomly every 8th instruction execution."
Plurple,https://esolangs.org/wiki/Plurple,2022,object-oriented paradigm,turing complete,,,thematic,Plurple is an esoteric programming language by User:Laclale.
Apers Assembly,https://esolangs.org/wiki/Apers Assembly,2022,,,implemented,,low-level; languages,"Apers Assembly is a Assembly-like Esolang, where all instructions are anagrams of the word apers. It was created by user:Bertrahm.
An aper, according to merriam-webster.com, is a person who adopts the appearance or behavior of another especially in an obvious way."
ASCIIORb,https://esolangs.org/wiki/ASCIIORb,2022,,,implemented,stack-based,languages,"ASCIIORb is a stack-based language that follows the ""syntax"" of the @ORb language created by Threesodas."
Grammar,https://esolangs.org/wiki/Grammar,2022,,turing complete,,,,"grammar is a language created by User:Citrons. a grammar program consists of a list of symbol replacement rules and an initial sequence of symbols. the execution of the program consists of repeatedly applying the rules in order until no replacements can be made, at which point the program ends."
Turing Completer,https://esolangs.org/wiki/Turing Completer,,,turing complete,unimplemented; concepts,,languages,"Turing Completer is a theoretical language capable of generating a Turing Completeness Proof for any language. There are 2 variations for this language, one which could theoretically be implemented (Potential Completer) and one which is impossible to implement (Omnipotent Completer). It was created by user:Bertrahm."
Syncin,https://esolangs.org/wiki/Syncin,2022,,,unimplemented,,languages,"syncin is an esoteric programming language created by BowlingPizzaBall. syncin is the reverse order of insync (based off syllables), and so every single instruction must be written in reverse order. It has support for multiple lines."
CSP Spec,https://esolangs.org/wiki/CSP Spec,2021,,turing complete,implemented,,languages,"CSP Spec is a work-in-progress declarative esoteric programming language invented by User:Hakerh400 in 2021. CSP stands for Constraint satisfaction problem and Spec stands for ""Specification""."
Pair,https://esolangs.org/wiki/Pair,2022,functional paradigm,turing complete,implemented,,languages,"Pair is a functional esoteric programming language invented by User:Hakerh400 in 2022. It is designed to be very simple to understand and use, but at the same time very powerful and expressive."
BF++,https://esolangs.org/wiki/BF++,,,unknown computational class,implemented,,languages,BF++ is an esoteric programming language invented in 2022 February. The creator did not feel like Brainfuck had enough features.
ECL,https://esolangs.org/wiki/ECL,2022,,,unimplemented,,languages,"ECL (event control language)    
by bushbo"
Boyfriend.xml,https://esolangs.org/wiki/Boyfriend.xml,2022,,,,,joke languages; thematic; languages,"Boyfriend.xml is a joke esoteric programming language created by McDude73 in 2022 based on the player's main avatar from Friday Night Funkin' — Boyfriend, sometimes referred to as Boyfriend.xml because of the file format that the character was created in to pose when ""singing""."
V3i,https://esolangs.org/wiki/V3i,2022,,turing complete,unimplemented,,languages,"V3i, an abbreviation for Variable 3 Input, is an esoteric programming language created by BowlingPizzaBall which has only three variables named x, y, and z.Despite this, the language is somewhat powerful, having stuff like a wait function and the support for infinite loops."
Fractal,https://esolangs.org/wiki/Fractal,2022,,,implemented; no io,,languages,Fractal is an esoteric fractal rendering engine invented by User:Hakerh400 in 2022.
Indurate,https://esolangs.org/wiki/Indurate,2022,,unknown computational class,implemented; usability unknown,,languages,"Indurate, also known as Friable, is a subset of the Rust programming language focused on the safety, immutability, and elegance that is lost in the disgraceful, hedonistic use of Rust proper."
Xjansk,https://esolangs.org/wiki/Xjansk,2022,,,,stack-based,languages,Xjansk is a stack-based esoteric programming language under construction by DanielE (talk). It uses the following commands:
Post correspondence problem,https://esolangs.org/wiki/Post correspondence problem,,declarative paradigm,turing complete,no io; implemented,queue-based,languages; low-level,The Post correspondence problem is the task of finding a general solution to a class of decision problems that were proposed by Emil Post in 1946. Post proved that this task was impossible – any general solution would have to be uncomputable.
Gearbox,https://esolangs.org/wiki/Gearbox,2022,declarative paradigm,unknown computational class,output only; implemented,concurrent programming,languages; low-level; thematic,Gearbox is an esoteric programming language based on mechanical gears.
Тест на терпение,https://esolangs.org/wiki/Тест на терпение,2020,,,implemented,,languages,Тест на терпение is an interactive theorem prover invented by User:Hakerh400 in 2020.
Lakshayati,https://esolangs.org/wiki/Lakshayati,2020,,turing complete,implemented; output only,,languages,"Lakshayati is an esoteric programming language created in 2020 with only three operations. Its only data type is strings, and the language relies heavily on executing strings as code. Its name derives from the Sanskrit word लक्षय् meaning ""to define""."
FuckPutin,https://esolangs.org/wiki/FuckPutin,2022,,turing complete,implemented,stack-based,low-level; languages,"FuckPutin is stack based esoteric programming language invented in 2022 by user PoetLuchnik.
Stack - 65536 cells.
Cell - 32 bit integer.
Two stacks (A and B).
Program is a sequence of digits and notes.
Each digit it is offset for operation-accumulator.
Operation-accumulator can be from 0 to 9.
After offset operation-accumulator, program interpret operation-accumulator.
At the beginning operation-accumulator is zero."
Oddy,https://esolangs.org/wiki/Oddy,,,,,,languages,Oddy is a:
Punctuation,https://esolangs.org/wiki/Punctuation,,,,,,languages,punctuation is an esolang composed of only punctuation on the keyboard. It does not yet have a compiler. The purpose is for Hello World to be as annoying as possible.
1 Line Challenge,https://esolangs.org/wiki/1 Line Challenge,2016,,,,,,The 1 Line Challenge is a challenge started by Scratch-Minion in 2016. The objective is to create images defined in 1 line of code in Scratch.
Betul Betul BetulLang,https://esolangs.org/wiki/Betul Betul BetulLang,2022,,turing complete,implemented,stack-based; cell-based,languages,"Betul Betul BetulLang or just BetulLang is an esolang made by IkenusDisnem (talk) in 05/03/2022. The idea for Betul Betul BetulLang came from an iconic line of ""Betul Betul Betul!"" in the Malaysian animated TV show, Upin & Ipin. The commands are similar to Length (but instead how many charaters, it's how many Betuls). The language is both stack based and cell based as it has both a tape and a stack."
Snake Shit,https://esolangs.org/wiki/Snake Shit,2022,,,implemented,,languages; two-dimensional languages,"Snake Shit is an esoteric programming language where a snake is simulated moving around a grid.
Each step, the snake moves in the direction that it is set to. If it's head is on any of the commands below, it will execute that command. Any other characters are ignored, though using _s for places that the snake would go is good practice.
The snake can not crash into itself, but if the snake ever moves onto a space without a character, it will quit the program."
Vurl,https://esolangs.org/wiki/Vurl,2022,,,,,languages,"vurl (viba's useless rudimentary language) is a programming language created by User:Viba in 2022, for no reason other than to cure their own boredom. it is designed to feel vaguely like Scratch, but text-based."
Daydream,https://esolangs.org/wiki/Daydream,2022,,,implemented,,languages,Daydream is an esoteric programming language invented found by User:Hakerh400 in 2022.
LAIN,https://esolangs.org/wiki/LAIN,2022,,turing complete,implemented,,languages,LAIN is a esoteric language developed by User:Valtsu0 as his first language. It was designed to be a self modifying language that lacks if statements. The name LAIN is not an acronym and is only capitalized to indicate that the name is supposed to be yelled out loud.
Ger,https://esolangs.org/wiki/Ger,2022,,,implemented,stack-based,languages,Ger is a stack-based esolang.
FunctionsFTW,https://esolangs.org/wiki/FunctionsFTW,2022,,unknown computational class,unimplemented,,languages; high-level,FunctionsFTW (FFTW for short) is an esoteric programming language created by User:NutronStar45 where you should use functions for everything.
A Language Programmed While Listening to Godspeed You! Black Emperor,https://esolangs.org/wiki/A Language Programmed While Listening to Godspeed You! Black Emperor,2022,,unknown computational class,implemented,stack-based,languages,"A Language Programmed While Listening to Godspeed You! Black Emperor is an esoteric programming language written by Eve in Rust, with similar behavior to the language FORTH. The goal of the language was to make it as annoying as possible to program in, with impractical and irritating design decisions. Nothing new there, really."
Betterfunge,https://esolangs.org/wiki/Betterfunge,,,,,stack-based,languages,Betterfunge is a 2D esolang. It is based on *><> and Ly.
Swirly,https://esolangs.org/wiki/Swirly,,,,,,languages,"Swirly is a forth derivative with static types, which compiles to uxntal, created by isabelle cedar. It uses state switching to switch between a text, type, compile, and code stack."
Fragile,https://esolangs.org/wiki/Fragile,,,turing complete,,,languages,Fragile is a family of families of programming languages theorized by User:Otesunki.
Mepytaruon,https://esolangs.org/wiki/Mepytaruon,2022,,turing tarpits; turing complete,,cell-based; multi-dimensional languages,languages; two-dimensional languages; low-level,"Mepytaruon is a non-textual turing tarpit programming ""language"" based on the Multicolor Tile Puzzle from the 2015 game Undertale. The name comes from smashing together the names of two characters from Undertale, who have employed the original puzzle, Papyrus and Mettaton."
Behaviour,https://esolangs.org/wiki/Behaviour,2021,,turing complete,implemented,,languages,Behaviour is an  esoteric programming language invented in 2021 by Lince Lazuli with the objective of making a scripting language that mimics the Behaviour Tree used in artificial intelligence and robotics. This article may call Behaviour a scripting language because the original idea for Behaviour is that it is supposed to run from inside a host program.
Wave,https://esolangs.org/wiki/Wave,,,,unimplemented,,languages,"Wave is an unimplemented esoteric programming language made by User:WhoeverKnew123.
It's named wave because of the 2 input and output operators: /` and \_."
Broccoli,https://esolangs.org/wiki/Broccoli,2022,,turing complete,implemented,stack-based,languages,"Broccoli is a stack-based, semi-concatenative programming language created by mathieucaroff. It has a JS interpreter."
SOS,https://esolangs.org/wiki/SOS,2022,,turing complete,implemented,stack-based,low-level,"SOS is a purely stack based esoteric programming language. The name SOS is short for Stack Of Stacks, or it is your reaction if you need to read or write code in this language."
Opcode,https://esolangs.org/wiki/Opcode,2022,,turing_complete; turing_tarpits,,,languages; brainfuck_derivatives,Opcode is a brainfuck derived esoteric language that uses opcodes to execute commands. It was created by pptx704 on 23rd March 2022. The language has only 2 commands: ! and +. It is turing complete as it has exact same commands as brainfuck itself.
@everyone,https://esolangs.org/wiki/@everyone,2022,,unknown computational class,implemented,,languages; thematic,"@everyone Is a esoteric programming language that looks like a bit like TMMLPTEALPAITAFNFAL (but with very obviously simpler syntax), but instead of having awkward syntax or execution, its just that you can only get every variable’s value on a global scale, the language also uses commands that look like they were taken from a discord server where everyone screams at each other, no humor intended."
KS,https://esolangs.org/wiki/KS,2022,,,implemented,,languages,"KEA-stream is a language based on data streams.
The language was inspired by the EV3-g where cables are used to connect action blocks.
In its original version, the KEA-stream is first compiled in KEA, an instruction language"
Bitflipper,https://esolangs.org/wiki/Bitflipper,,,turing complete,implemented,,languages; low-level,"Bitflipper is a basic esoteric programming language created on March 23, 2022 by User:gapples2 where you flip bits.
This only has 5 instructions which makes programming in this hard and long."
◀◀SYNTHESIZE▶▶,https://esolangs.org/wiki/◀◀SYNTHESIZE▶▶,,,turing complete,unimplemented,,languages; high-level,"◀◀SYNTHESIZE▶▶ is an Esolang where the main way to modify a variable (and only strings!!!!!!) is to fuse them together or to set one equal to another. However other than that it is not too hard to program in. Other than that being the only way to modify variables, the syntax and execution is not too unusual and/or hard-to-read. Though the conditionals are intentionally cut down as much as possible and the conditionals not found are doable via the ""negate next"" command. Also, Indentation does not matter, but can be used to make the program more readable (or not, if you want to make it look bad)"
BITWISEBASE64BITWISEBASE64BITWISEBASE64BITWISE,https://esolangs.org/wiki/BITWISEBASE64BITWISEBASE64BITWISEBASE64BITWISE,2022,,unknown computational class,unimplemented,,languages,"BITWISEBASE64BITWISEBASE64BITWISEBASE64BITWISE is an esoteric programming language with understandable syntax.
At least, BEFORE it gets encrypted hella hard. the steps to encrypt any given unprocessed program goes as follows:"
SimpleBBQ,https://esolangs.org/wiki/SimpleBBQ,,,unknown computational class,,,languages,"SimpleBBQ is an esolang under construction by DanielE (talk) 13:59, 27 March 2022 (UTC) that is... well, pretty simple. You have a small barbecue that can hold only one hamburger, one little piece of beef and a nugget."
Qualm,https://esolangs.org/wiki/Qualm,2021,,turing_complete,implemented,cell-based,languages,"qualm is an esoteric programming language designed and created by User:Wilfreddv. The name ""qualm"" was chosen to reflect the uneasy feeling you get when looking at it."
LinePaint,https://esolangs.org/wiki/LinePaint,,,,,stack-based,languages,"LinePaint is an esoteric programming language created by Dominicentek. It uses 3 instructions to draw lines and shapes on a canvas. Then a pointer moves around the canvas. Based on the length before hitting an obstacle, it executes an instruction."
Q-SET,https://esolangs.org/wiki/Q-SET,2022,functional paradigm,unknown computational class,no io; unimplemented,,languages; high-level,"Q-SET is an abandoned programming language designed by User:Peter in 2022. All data consists of sets of numbers, which may or may not be structured in ordered pairs. It's named after the set of rational numbers, which contains every value that can be used in Q-SET."
Linguarcana,https://esolangs.org/wiki/Linguarcana,2022,,,implemented,,languages; thematic; high-level,Linguarcana is an esoteric programming language created by User:FrankPujo. Its aim is to create a source code that resembles an Ancient Latin text.
UBLANG,https://esolangs.org/wiki/UBLANG,2022,,unknown computational class,implemented; output only,,languages,UBLANG(Unusable language) is esolang by User:ChuckEsoteric08.
Melody,https://esolangs.org/wiki/Melody,2022,,unknown computational class,implemented,,languages,"Melody is a language that compiles to ECMAScript regular expressions, created with Rust by Yoav Lavi. The source is available here, along with the documentation and examples."
Bitgrid,https://esolangs.org/wiki/Bitgrid,,,turing complete,implemented,,languages; low-level; two-dimensional languages,BitGrid is a low-level programming language.
NumSym,https://esolangs.org/wiki/NumSym,2022,,,implemented,stack-based,languages,NumSym (short for NumberSymbol) is an esoteric programming language invented by User:Stiathirs the Protogen in 2022.
FOLDERS text,https://esolangs.org/wiki/FOLDERS text,2022,,,usability unknown; unimplemented,,markup languages; languages; thematic,"This programming langauge is not complete yet, the article will remove this sentence if one day I'll finished this"
It's not a mistake it's an esolang,https://esolangs.org/wiki/It's not a mistake it's an esolang,2022,,,implemented,cell-based,languages,it's not a mistake ✨it's an esolang✨ (shortened: INAMIAE) is a fan programming language made by IkenusDisnem (talk) with its usage to parody the it's not a mistake ✨it's a masterpiece✨ quote said by JellyBean. It is also made to 'remove the it's not a mistake ✨it's a masterpiece✨ spam'. The inspiration came when he/she was watching a JellyBean video and a sudden idea came in his/her brain to make a programming language about it's not a mistake ✨it's a masterpiece✨.
PrettyPrint,https://esolangs.org/wiki/PrettyPrint,2022,,,implemented,,languages,PrettyPrint is an esoteric language where whitespace is sensitive and the whitespace used somehow figures into the types of expressions.  It was invented for SIGBOVIK 2022.
Uzumaki,https://esolangs.org/wiki/Uzumaki,2022,,turing complete,implemented,queue-based,languages; two-dimensional languages,Spirals... This language is contaminated by spirals...
CLAG,https://esolangs.org/wiki/CLAG,2022,,turing complete,implemented,cell-based,joke languages; low-level; brainfuck derivatives,"CLAG is yet another brainfuck derivative language. It has been created to be particularly difficult to read, as every command is made from nearly identical Unicode characters, being the Cyrillic ""о"", the Latin ""o"", the Armenian ""օ"", and the Greek ""ο"", hence the name CLAG."
TurtleDigits,https://esolangs.org/wiki/TurtleDigits,2022,,,output only; implemented,graphical_output,high-level,TurtleDigits is an esoteric programming language that is built on top of turtle. It only uses the digits 1-9 for commands.
2ds,https://esolangs.org/wiki/2ds,,,,implemented,,languages,"2ds (standing for 2-Dimensional Stack) is a language that operates, on, as you could probably tell from the name, a 2-dimensional stack. Its syntax is inspired by Forth."
COSOL,https://esolangs.org/wiki/COSOL,,,,,stack-based,languages,"The Common Stack Oriented Language (COSOL) is a stack based esoteric programming language. It is written in Java and will have the best features of all your favourite esolangs. It is currently being worked on, meaning it is still a work in progress."
Springboard,https://esolangs.org/wiki/Springboard,,,,implemented,stack-based,brainfuck,Springboard is a brainfuck pre-processor that adds the ability to define and re-use symbols.
OISC:2,https://esolangs.org/wiki/OISC:2,2022,,turing complete,implemented,cell-based,languages; low-level,"OISC:2
(pronounced ""whiskey 2"")
Obfuscated Indirect Subleq with Coprocessor: 2 word instructions"
Piping,https://esolangs.org/wiki/Piping,,,,implemented,,languages,piping is a language that was made in a day.
FThue,https://esolangs.org/wiki/FThue,2022,,turing complete,implemented,,languages,"FThue is a programming language invented by User:LuisCR. It is similar to Thue, and adds to the same line as Thube, Thubi, Thutu and Object oriented Thue. What makes FThue different is that, instead of a ""working string"", it uses a working expression."
PIGS,https://esolangs.org/wiki/PIGS,2022,,turing complete,implemented,,,"PIGS is a minimalistic esoteric programming language that is based around pointers, made by User:Yousurname. Its name originates from the four main commands in it: P, I, G, and S."
Wasm,https://esolangs.org/wiki/Wasm,2022,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; low-level,"WASM, an acronym for Worst ASseMbly is a Turing-complete brainfuck derivative made by jan Gamecuber to be a semi-realistic assembly language that still sucks to program in. This language uses a theoretically infinite tape of unbounded integers to store data."
Cantonese,https://esolangs.org/wiki/Cantonese,2022,,,unimplemented,,languages; cjk; thematic,Cantonese is an esolang using syntax based on the grammar of the Cantonese language
A?b.,https://esolangs.org/wiki/A?b.,2022,,unknown computational class,implemented,,,A is a programming language that uses only the letter A in its source code. Its creation year is uncertain but no later than 2008.
HeacunQ9+×,https://esolangs.org/wiki/HeacunQ9+×,2022,,,unimplemented; unusable for programming; implemented,,languages,"HeacunQ9+× is an esoteric programming language derived from HQ9+, and was made by AmNow."
Bird,https://esolangs.org/wiki/Bird,,,,implemented,,low-level; languages; two-dimensional languages,Bird is a two-dimensional esoteric fungeoid invented by User:masalt in Python 3.
Tetanus,https://esolangs.org/wiki/Tetanus,2022,,turing complete; turing tarpits,implemented,,languages,"Tetanus is a language of regular expressions and suffering. Its name was inspired by its agonizing design and difficulty of use, similar to doing surgery with a rusty hacksaw."
OISC:3,https://esolangs.org/wiki/OISC:3,2022,,turing complete,implemented,cell-based; stack-based,languages; low-level,"This is a continuation and improvement of the OISC: (pronounced ""whiskey"") project.  The intent is to make a Subleq like language more powerful by intentionally obfuscating it.  Unfortunately, there is now a parser for OISC:3 that accepts command macros, so it is a bit too easy to program in.  Of course, if you want a challenge, you could still work with the raw numbers."
5code,https://esolangs.org/wiki/5code,,,turing tarpits,,cell-based,languages; brainfuck derivatives,5code is a bf derivative created by User:CodeIsEsotericWithMe.
Beskew,https://esolangs.org/wiki/Beskew,2022,functional paradigm,turing complete; turing tarpits,implemented,,languages; low-level,"Beskew is variant of combinatory logic created by User:Arctenik, based on the idea of a very minimal language that can turn itself into any other language (or, at least, any other Unicode-based syntax). In Beskew, every Unicode character is a function (though the vast majority are formulaically defined as Church numerals), which theoretically allows a Beskew program to create a function that interprets its subsequent arguments as arbitrary program source code. Whether this is possible with any degree of time-efficiency has yet to be seen."
2dFish,https://esolangs.org/wiki/2dFish,,,,implemented,,languages; two-dimensional languages,2dFish is a 2D esoteric programming language made by User:WhoeverKnew123 for fun.
EmojiLang,https://esolangs.org/wiki/EmojiLang,2022,,turing complete,unimplemented,,languages; high-level,EmojiLang is an esoteric programming language made by NumberBasher in 2022.
BrainFuck++,https://esolangs.org/wiki/BrainFuck++,2022,,turing complete,implemented,,languages; brainfuck derivatives; low-level,"Made By User:NumberBasher, 2022."
\/,https://esolangs.org/wiki/\/,2022,,unknown computational class,unimplemented,,languages,\/ is a esolang created by User:Joaozin003 which looks like a bunch of arrows.
BunnyBell,https://esolangs.org/wiki/BunnyBell,2022,,turing complete,,,languages,Renaming to Bellbase and moving off the esolangs wiki. This page is still used for drafting.
Two Four,https://esolangs.org/wiki/Two Four,2022,,,implemented,,languages,"Two Four is an esoteric programming language by User:00Her0. It is named for its Four instructions, each of which are written as Two bits."
SKM Calculus,https://esolangs.org/wiki/SKM Calculus,2022,functional paradigm,turing complete,implemented,,languages,SKM Calculus is an esoteric computational model invented by User:Hakerh400 in 2022.
SusLang,https://esolangs.org/wiki/SusLang,2022,,,total; implemented,,languages; thematic,"SusLang is an among-us-themed esolang written in C#.
It was invented by Zenonet (a German hobby programmer) in 2022.
You can find more information about SusLang here
Also there is an online interpreter available here"
BrainFuck+,https://esolangs.org/wiki/BrainFuck+,2022,,turing complete,implemented,,languages; brainfuck derivatives; low-level,"Made By User:NumberBasher, 2022."
NumLang,https://esolangs.org/wiki/NumLang,2022,,turing complete,works-in-progress,,languages,User:NumberBasher
GolfGolf,https://esolangs.org/wiki/GolfGolf,,,,unusable for programming; total; implemented,,languages,User:NumberBasher
Arrowhead,https://esolangs.org/wiki/Arrowhead,,,turing complete,unimplemented,,languages,"Arrowhead was once a fully fleshed out language, however the creator suffered a concussion and was unable to remember the details. This program was the only one written, but the compiler was not finished."
OISC:2bis,https://esolangs.org/wiki/OISC:2bis,2022,,turing complete,implemented,cell-based; stack-based,languages; low-level,"Obfuscated Indirect Subleq with Coprocessor: 2 word instruction, version 2.  (That's what 'bis' means, from the Latin.)"
Forþ,https://esolangs.org/wiki/Forþ,2022,functional paradigm,unknown computational class,implemented,stack-based,languages,Forþ is a stack based language.
Inverted Logic,https://esolangs.org/wiki/Inverted Logic,2022,,,implemented; total; unusable for programming; output only,,languages,"Inverted Logic is a language made by User:PinkysWorld that reverses booleans and flips the sign of numbers. It is like Boobeans, although their commands are different."
Scoop,https://esolangs.org/wiki/Scoop,,,finite state automata,implemented,,languages,"Scoop is an interpreted, imperative programming language that uses an 8bit integer as its only variable (Called a for the sake of simplicity), created by User:DisableGraphics"
User:Scratch,https://esolangs.org/wiki/User:Scratch,2003,,turing complete,implemented,,languages; high-level,Content div not found
Minimal assembly language,https://esolangs.org/wiki/Minimal assembly language,2022,,turing complete,implemented,,languages; low-level; low-level,"Minimal assembly language is a very low-level esoteric programming language designed by me (User:Peter). The language has eight different instructions, each taking one argument and — when compiled — one byte of space. "".masm"" is the file extension for written minimal assembly files, and "".mexe"" is the extension for computer-generated executable files."
Mark,https://esolangs.org/wiki/Mark,2022,,,,cell-based,two-dimensional languages; thematic,"Mark is a cell-based fungeoid language made by User:MeowcaTheoRange. It uses a proprietary editor written in JavaScript, HTML and Kaboom to create and edit programs."
Half-byte lisp,https://esolangs.org/wiki/Half-byte lisp,,,,implemented,,languages,"Half-Byte Lisp, also known as HBL, is a dialect of Lisp where each character takes up half a byte. See that page for more information."
Budge-PL,https://esolangs.org/wiki/Budge-PL,,,turing complete,,,languages,"Budge-PL (bʌdʒ, b’dzh) is an esoteric programming language. It uses Gödel numbering to represent registers and their values by relying on the Fundamental Theorem of Arithmetic (prime factorization). The language uses similar constructs as FRACTRAN, however, it provides a more convenient way to construct loops and uses integers rather than fractions to denote instructions. It also abstracts prime numbers in the code, allowing for direct register access. A negative integer will decrease a register’s value, while a positive integer will increase a register’s value."
Cheß,https://esolangs.org/wiki/Cheß,,,,unimplemented,cell-based; multi-dimensional languages,languages,"Cheß, pronounced ""Cheb"" for the purposes of both making a 'quirky' language name and also pissing off Germans, is technically a three dimensional language given that it is typed in one dimension, and then interpreted into two. Much like the language idea Chess or the completed language InfChessPro, Cheß is a chess based programming language. Much to the dismay of every reader, I will now explain how Cheß is more similar to Brainfuck than these other chess based examples."
Brainfuck Encoded Concatenative Calculus,https://esolangs.org/wiki/Brainfuck Encoded Concatenative Calculus,2022,,turing complete; turing tarpits,implemented,,languages,"Brainfuck Encoded Concatenative Calculus (BECC, pronounced [bɛkʰ]) is a minimalistic programming language based on Concatenative Calculus. It keeps brainfuck's eight single-character commands and maps CC operators onto them, with additional input and output operators. If you came here looking for info on the Concatenative Calculus itself check out External resources."
Meta-categorial,https://esolangs.org/wiki/Meta-categorial,2022,,,,,languages,Meta-categorial is an esolang made by User:Heav in 2022. It exists.
Turimg,https://esolangs.org/wiki/Turimg,,,turing tarpits,implemented,cell-based,languages,"Turimg is a minimalist language, meant to directly parallel how Turing machines work."
SKNPR Calculus,https://esolangs.org/wiki/SKNPR Calculus,2022,functional paradigm,turing complete,unimplemented,,languages,SKNPR Calculus is an esoteric computational model invented by User:Hakerh400 in 2022.
Z Sharp,https://esolangs.org/wiki/Z Sharp,2022,,,implemented,,languages; high-level,"Z Sharp (Z#), is an interpreted procedural programming language created by user:Sam-astro in 2022. The Z# interpreter was written in C++, and was inspired by the popular languages: C#, Python, and Java."
Color Scheme,https://esolangs.org/wiki/Color Scheme,,,,,stack-based,languages,Color scheme is a color and stack based language built up on a grid of many cells. Each cell can be divided into more than one color. Different series of colors mean and effect the program in a different way. For example O-LB(Orange-Light Blue) adds 0 top the top of the stack.
Euclid,https://esolangs.org/wiki/Euclid,2022,,push-down_automata,usability_unknown; implemented,cell-based; stack-based,languages; two-dimensional_languages; low-level,"The Euclid programming language is a stack-based / tape-based / befunge-like language created by User:TARDIInsanity. The program remembers which of a fixed set of states (spijmg) it is in, and as it comes across any instruction symbol, it performs some action based on the combination of state and symbol.
s - perform operations on the stack
p, i, j - perform operations on the program pointer, which always points to cells in the 2d program array.
i - (on finding an instruction) pop a value off the stack. if it is zero, ignore the instruction. unconditionally change state to p.
j - (on finding an instruction) perform the operation. change state to i.
m - perform operations on the memory array, which is a 1-dimensional finite tape initialized to all zeroes. Some memory instructions interact with the stack (mainly ^ which pushes the current cell and v which pops and writes from the stack)
g - perform an alGebraic operation on values from the stack. nearly all possible instructions pop two values from the stack, and most push one result value back. The instruction / represents divmod, with the following additional constraint: divmod(x, 0) = (0, x).
any of the ten digits 0-9 and the first six letters a-f (hexadecimal) are instructions.
the symbols ? = < > ^ v / ` | - x + are also instructions.
every instruction has a defined behavior for every mode.
the ` character is allowed as a substitute for the backslash character.
The creator's implementation of this language can be found here github.com/TARDIInsanity/Euclid.
Further documentation about the program's behavior is defined in the doc file. Usage notes for the implementation can be found in the readme file."
Base64,https://esolangs.org/wiki/Base64,,,,,,languages; low-level,Base64 lang is a simple esolang made by User:1048576.
Bundle,https://esolangs.org/wiki/Bundle,2022,,turing complete,implemented,,languages,"Bundle was a simple esoteric programming language created by Lanksy. Bundle was designed to be used for small programs, like Cat programs or incremental counters, hence its simple interface and shell-like functions, although this did not stop users from building more complex programs, for example FizzBuzz or 99 Bottles of Beer.
It was deleted in 6 July 2022 for being hard to maintain.[1]"
Sharp,https://esolangs.org/wiki/Sharp,2022,,turing_complete,implemented,stack-based,languages,"# (Pronounced as ""sharp"") is a stack-based, Turing-complete programing language drawing inspiration from BrainFuck and Fish. It was invented by User:Nick-1666 in 2022."
ListScript,https://esolangs.org/wiki/ListScript,,,,,,languages,// ListScript //
Zetta,https://esolangs.org/wiki/Zetta,2022,,turing complete,implemented,cell-based,brainfuck_derivatives; low-level; languages,Zetta is an awful brainf*** derivative made by User:Masalt.
Esimpl,https://esolangs.org/wiki/Esimpl,2022,,turing complete,implemented,,languages; low-level,"Esimpl is an esoteric programming language created by User:ais523 in 2022, with significant changes in 2023. Its intended purpose is as an intermediate representation for compilers and interpreters related to low-level esolangs (and Turing tarpits in particular), aiming to be powerful enough to express the typical low-level esolang easily, whilst sufficiently constrained to be easy to implement in esolangs itself. Efficiency was also a consideration in designing the language: many languages used for proving Turing-completeness, such as tag systems, tend to emulate programs written in other languages very slowly (e.g. the standard proof of Turing-completeness for tag systems incurs an exponential slowdown); Esimpl was designed to incur only a linear slowdown when compiling, e.g., brainfuck or a Turing machine into it."
Exalang,https://esolangs.org/wiki/Exalang,,,,implemented,,languages,"Exalang
a programming language which is the same as ESOPUNK"
OW-1,https://esolangs.org/wiki/OW-1,2022,,turing complete,implemented,cell-based,languages; two-dimensional languages; low-level,"OW-1 is a two-dimensional programming language invented on 12 June 2022 by User:Potato Imaginator. It is inspired from Befunge and Assembly_language. OW abbreviates for ""Old Woman""."
Targs,https://esolangs.org/wiki/Targs,2022,,unknown computational class,implemented,cell-based,languages,"Targs, also known referred to as ""EsoTargs"" by SpaceByte. The name ""Targs"" is short for ""Two Args"" or ""Two Arguments"" due to how the language contains 2 arguments per command. ""Eso"" is short for Esoteric."
Rings,https://esolangs.org/wiki/Rings,2022,,linear bounded automata,implemented,cell-based,languages; low-level,Rings is a simple programming language designed around the idea of working with rotating memory strips. The language was originally designed to compete in the June 2022 Esolang Discord competition.
AMONGUSISABIGSUSSYBAKAHAHAHAHAHATHISLANGUAGEISREALLYCOOLPLEASEUSEITMYLIFEDEPENDSONITORELSEPLSPLSPLSPLSPLSPLSPLSkahyghdfhm,https://esolangs.org/wiki/AMONGUSISABIGSUSSYBAKAHAHAHAHAHATHISLANGUAGEISREALLYCOOLPLEASEUSEITMYLIFEDEPENDSONITORELSEPLSPLSPLSPLSPLSPLSPLSkahyghdfhm,2022,,,total; implemented; unusable for programming,,languages; thematic; joke languages,"AMONGUSISABIGSUSSYBAKAHAHAHAHAHATHISLANGUAGEISREALLYCOOLPLEASEUSEITMYLIFEDEPENDSONITORELSEPLSPLSPLSPLSPLSPLSPLSkahyghdfhmILLDIEIFYOUDONTUSEITSOPLEASEUSEITALSODONATETOMYGOFUNDMEBECAUSEIMGONNADIEBECAUSEYOUWONTUSETHISLANGUAGEURTHEIMPOSTORANDTHATISSUSIMGOINGTOCALLAMEETINGONYOUYOUVENTEDYOUSUSSYBAKA, also known as AMONGUSISABIGSUSSYBAKAHAHAHAHAHATHISLANGUAGEISREALLYCOOLPLEASEUSEITMYLIFEDEPENDSONITORELSEPLSPLSPLSPLSPLSPLSPLSkahyghdfhm for short is an esoteric programming language themed to look like a public among us chat. It's interpreter can be found here, the interpreter is for Linux and Windows."
Frog,https://esolangs.org/wiki/Frog,,,,implemented; unusable for programming; total,,languages; thematic,Frog is an esoteric programming language created by Stysan (talk) that commands are based on sounds that frogs make. Syntax of this language is based on Batch syntax. Frog scripts extension is .frgp. There's also another language called Sickfrog - which is sick (in the bad meaning) version of Frog.
B,https://esolangs.org/wiki/B,2022,,unknown computational class,implemented,stack-based,languages,"B, also known referred to as ""BLang"" by SpaceByte, is an esoteric programming language consisting of only the letter B. It was created on 6/22/22, and it's interpreter is available for Linux and Windows."
Sickfrog,https://esolangs.org/wiki/Sickfrog,,,,implemented; unusable for programming; total,,languages; thematic,Sickfrog is an esoteric programming language created by Stysan (talk) that commands are based on Frog commands. Syntax of this language is based on Batch syntax. Sickfrog scripts extension is .sfrgp. This language is remake of Frog programming language.
512,https://esolangs.org/wiki/512,,,,unusable for programming; total; implemented,,languages,"512 is an esoteric programming language created by User:Stysan. Challenge was to try to create programming language in 512 bytes. Its syntax is inspired by Batch syntax. 512 scripts can be stored in any extension, but originally 512 files were stored in .512s."
Unarian,https://esolangs.org/wiki/Unarian,2021,functional paradigm; declarative paradigm,turing complete,implemented,,languages; high-level,Unarian (pronounced yoo-NAIR-eein) is an esoteric programming language based on the concept that every Unarian function computes a partial unary function over the natural numbers (hence the name Unarian) and that these functions can only be constructed as combinations of existing functions.
Lengthwise,https://esolangs.org/wiki/Lengthwise,2022,,unknown computational class,implemented; unusable for programming,,languages,"Lengthwise is an esoteric programming language consisting of only two characters. Made on 6/24/22, Lengthwise was created to be minimalistic in every way, making it's concept incredibly easy, but making the creation of programs with it much more tedious and difficult due to how the simplicity limits functionality. Lengthwise is likely to not being anywhere near Turing Complete"
GuLang,https://esolangs.org/wiki/GuLang,2022,,,implemented,cell-based,languages; low-level,"GuLang is an esoteric programming language invented by User:Turk (usually known as Camroku, Katroku or Arnolxu) in 2022."
CBIASIPOSLESWRAOTTHNRTBTSS.SATLCD,https://esolangs.org/wiki/CBIASIPOSLESWRAOTTHNRTBTSS.SATLCD,2022,,turing complete,implemented,,languages,"CBIASIPOSLESWRAOTTHNRTBTSS.SATLCD, which is short for ""COBOL but it actually serves its purpose of sounding like English speech without renaming and overcomplicating topics that have no reason to be that stupid sounding. Someone arrest the lead COBOL designer."", is an interpreted esoteric programming language created by User:SpaceByte on 6/28/22 based off of COBOLs idea of sounding like English speech. It was created due to COBOLs lack of human readability and strangeness in terms of renaming certain terms and concepts in the language. CBIASIPOSLESWRAOTTHNRTBTSS.SATLCD is esoteric due to its limited capability, small amount of functions, its impracticality, and only one storable variable type."
CraftyFunge,https://esolangs.org/wiki/CraftyFunge,2022,,turing complete,implemented,stack-based; multi-dimensional languages,languages,CraftyFunge is a 3-dimensional esoteric programming language written by placing Minecraft blocks. Programs can be run directly in Minecraft or with the external interpreter. The external interpreter accepts programs exported from structure blocks. CraftyFunge is executable in vanilla Minecraft using a world with an embedded data pack.
Cool Cell,https://esolangs.org/wiki/Cool Cell,,,,implemented,cell-based,languages,"Cool Cell(CoCe) is cell-based language by User:ChuckEsoteric08. It was created because author wanted to create version of Turing-machine which compiles to Quests, but later it become BF with limited memory which can implement BF easily"
Iframe,https://esolangs.org/wiki/Iframe,,,unknown computational class,usability unknown; unimplemented,,languages,Iframe is an esolang based on HTML iframes and the a tag target attribute.
LISPS,https://esolangs.org/wiki/LISPS,2022,,turing complete,unimplemented,,languages; joke languages,"LISPS was made by User:Yes in 2022, and stood for List Processing Sussy"
Did I Ask,https://esolangs.org/wiki/Did I Ask,2022,,,,,languages,Did I Ask was an esolang made by User:Yes in 2022
Splaytime,https://esolangs.org/wiki/Splaytime,2022,,turing_complete,usability_unknown; implemented,,low-level; languages,"Splaytime is an esoteric language designed by User:Ukeharu in 2022, that is based wholly around the concept of splay trees. The language was designed to be minimalistic in the number of command characters, with all of them being single-character in length and few in number (three less than Brainfuck). The language is loosely inspired by Brainfuck, but with many of its commands supplanted by features specific to the splay tree at its core, and the addition of a few commands."
Minimalbf,https://esolangs.org/wiki/Minimalbf,2022,,,total; output only; implemented; unusable for programming,cell-based,languages,"Minimalbf is a esoteric programming language made by User:Yes in 2022. It is their fourth esolang they have made (and shared), it was inspired by brainfuck, and was made for the purpose of a language sharing properties with brainfuck, yet minimalistic limiting the language."
Abstract,https://esolangs.org/wiki/Abstract,2022,,turing complete,implemented,stack-based,languages,"Abstract is a stack-based esoteric programming language designed by me (User:Peter). Code execution and memory management happens in the same stack, and there is no built-in control flow. Variables are simply indices in this stack, and will be replaced by constant integers in compile time. Despite its unusual concepts, Abstract is far from impossible to write complex programs in due to some useful pointer operators."
Z mjhkh,https://esolangs.org/wiki/Z mjhkh,,,unknown computational class,usability unknown,,languages; joke languages,"Z mjhkh is made by User:Yes and stands for Zebra milk just hidkh (Zebra milk just idk)

Z mjhkh's compiler is very fast. So fast, that computers are known to explode because it requires at least 500 Ghz to not explode.
The documentation only outpuuts after compiling, and User:Yes gave himself anmeisa when he was done with the compiler, so we dont know the details."
Lag,https://esolangs.org/wiki/Lag,,,turing complete,no io; implemented,,languages,Lag(Language is good) is an OISC by User:ChuckEsoteric08. it is Similar to Subleq but with variables instead of array.
Zalgo,https://esolangs.org/wiki/Zalgo,2022,,unknown computational class,implemented,stack-based,languages,"Zalgo is a stack-based, esoteric programming language developed by User:Short c1rcuit. The language operates on clusters of combining diacritical marks. The language is named after Zalgo text."
Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee,https://esolangs.org/wiki/Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee,,,finite state automata,total; implemented; unusable for programming,,languages; low-level,Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee is an esolang created by by User:Yes in 2022. It is based on virus epidemics.
Hex0,https://esolangs.org/wiki/Hex0,,,,,,bootstrapping; languages,"Hex0 is trivial to implement [1]
It just needs to read 2 hex nybbles and output a byte, you can ignore all non-hex characters but you need to support 2 types of line comments{# and ;}"
Hex1,https://esolangs.org/wiki/Hex1,,,,,,bootstrapping; languages,Hex1 is the most obvious and logical extension of the hex0 language. As the hardest part of writing programs in hex is having to manually count bytes to know the size of the offset needed for jumps and loops. So we add single letter labels (such as :a and :b) and a single sized offset pointer which will automatically populate with the offset (@a and @b)
Hex2,https://esolangs.org/wiki/Hex2,,,,,,bootstrapping; languages,Hex2 is the most complex hex based language you probably would ever want to make and is the final logical conclusion of the hex0/hex1 series of languages. Extending to support multiple pointer sizes and formats as well as alignment and word oriented features and removing the single character label restriction of hex1 and enabled long label names
M0,https://esolangs.org/wiki/M0,,,,,,bootstrapping; languages,The M0 assembly language is the simplest assembly language you can create that enables the creation of real world programs with practical application. It includes only a single keyword: DEFINE and leverages the language properties of Hex2 along with extending the behavior to populate immediate values of various difference sizes and formats.
Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee with looping,https://esolangs.org/wiki/Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee with looping,,,push-down automata,implemented,,languages; low-level,Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee with looping is a dialect of Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee by User:Yes in 2022
Double,https://esolangs.org/wiki/Double,2022,,turing complete,implemented,cell-based,,"Double is an esolang created by Lim95 on July 5th, 2022. It was programmed over the course of two hours on a livestream. Double's main feature is that each instruction must be two characters long. Comments are marked with a couble forward slashes (//)"
UBLANG/UBLANG++,https://esolangs.org/wiki/UBLANG/UBLANG++,2022,,,implemented,,languages,UBLANG++ is an extension of UBLANG created in beginning of may 2022 on purpose of making Turing-complete version of UBLANG(if it is not Turing-complete)
Betterlang,https://esolangs.org/wiki/Betterlang,,,,implemented,,languages,Betterlang(BetterFist) is an extesion of Fist by User:ChuckEsoteric08
Braingrate,https://esolangs.org/wiki/Braingrate,2022,,,implemented,cell-based,brainfuck derivatives,"Braingrate is a parody of brainfuck created by User:Aadenboy which adds seven new commands to supposedly make programs easier to work with. It is entirely written in Lua, and the interpreter is exactly 3,000 bytes big (including comments). The interpreter only accepts any .txt files named ""braingratescript""."
AddJump,https://esolangs.org/wiki/AddJump,,,unknown computational class,implemented,,languages,AddJump(Add 1 and Jump to command) is an OISC by User:ChuckEsoteric08 and inprised by FlipJump.
Smaller,https://esolangs.org/wiki/Smaller,,,turing complete,implemented,,languages,Smaller is an OISC by User:ChuckEsoteric08.
Trampolines,https://esolangs.org/wiki/Trampolines,2022,,turing complete,implemented,stack-based,two-dimensional languages,"Trampolines is a physics-based two-dimensional esoteric programming language made by User:Aadenboy. The program is ran with a single ""marble"", directed through the ""course"" with a set of pre-defined physics. See below for info on the physics."
Cogc,https://esolangs.org/wiki/Cogc,,,,implemented,stack-based,languages,Cogc (close/open/gotvat/comvar) is a asembeld langege where you need to open every stack and goto every var.
Cipher,https://esolangs.org/wiki/Cipher,,,turing complete,implemented; output only,stack-based,languages,Cipher is an programing language by User:ChuckEsoteric08.
AntiLang,https://esolangs.org/wiki/AntiLang,2022,,,implemented; unusable for programming; output only; total,,languages,"AntiLang is an esolang created by User:SpaceByte on 7/8/22 (July 8th 2022), inspired by ඞlang, made to prove a point against it. The creator, of AntiLang, believes ඞlang not to be a true esoteric programming language, and should not be considered one, this is because, the ""code"" in ඞlang, does not affect it's outputs (or inputs), in any manner, its ""interpreter"", should not be considered one, nor should its concept be considered a programming language, as it does not perform any computational actions based on any inputs, its interpreter is solely a program that receives an input, and prints a character, which should make it a program, and not a programming language. AntiLang was created to show how you can make a functional and simplistic language, very easily, by creating an interpreter in less than two minutes."
DigFiles,https://esolangs.org/wiki/DigFiles,2022,,turing complete,implemented,,languages,DigFiles is an esoteric programming language invented by User:Yamaserif.
BizOffers,https://esolangs.org/wiki/BizOffers,2022,,turing_complete,implemented,,languages,BizOffers is an esolang created by User:SpaceByte on July 10th 2022. BizOffers was inspired by C for its syntax and Uyjhmn n! for some of the aspects of the IDE / Interpreter.
Praise Unto XHUL,https://esolangs.org/wiki/Praise Unto XHUL,,,unknown computational class,,stack-based,languages,"Praise Unto XHUL is a language created by Th3BlackHole where all code must be written at run time due to the function names being completely random. The language is a stack based language where all inputs, outputs, and calculation are done through the stack. Also sometimes XHUL decides not to run your program, tough luck."
PDAsephone,https://esolangs.org/wiki/PDAsephone,,,push-down automata; turing complete,implemented,stack-based,languages,"PDAsephone (pronounced pee-duh-sef-oh-nee) is an esolang by User:BoundedBeans. PDAsephone is a language which depends on pushdown automata (something decidedly not Turing-complete) for possible Turing-completeness, and has them as first class values."
Taglate,https://esolangs.org/wiki/Taglate,,,,unimplemented,queue-based,languages,"Taglate is an esoteric programming language by User:BoundedBeans. It is based off of a tag system, but with a strange and hard-to-work-with method of expanding the queue. The name has absolutely nothing to do with a town in Saint Helena, and is instead a portmanteau of “tag” and “translate”."
Sugueziume,https://esolangs.org/wiki/Sugueziume,,,unknown computational class,,queue-based,languages,"Sugueziume (named after a procedurally generated galaxy in the game No Man’s Sky) is a self-modifying esolang by User:BoundedBeans with extremely weird operators, code-stored data, and queue-based code. It was inspired by _ and is a sequel to Execoil."
Execoil,https://esolangs.org/wiki/Execoil,,,,unimplemented,stack-based,languages,"Execoil is an esolang by User:BoundedBeans inspired by Underload and _. The code is a stack, kind of like _, but unlike _, it is a stack of strings rather than a stack of characters like _."
4est,https://esolangs.org/wiki/4est,,,,unimplemented,tree-based,languages,"4est is a tree based esolang by User:BoundedBeans featuring nested tree data structures. This was the first esolang he created, so it is quite bad."
Your stack may be eaten,https://esolangs.org/wiki/Your stack may be eaten,,,,implemented,stack-based,languages,"Your stack may be eaten is an esolang by User:BoundedBeans, developed entirely on the wiki in an hour. The stack has the potential to be eaten into the code, so watch out."
TError,https://esolangs.org/wiki/TError,,,,unimplemented,stack-based,languages,tError is an esoteric programming language by User:BoundedBeans where the only data type is errors.
2002-12-14,https://esolangs.org/wiki/2002-12-14,,,turing complete,,stack-based,languages; thematic,2002-12-14 is an upcoming esolang by User:Yes that is based on the oldest freenode #esoteric irc log he could find on logs.esolangs.org
Selt,https://esolangs.org/wiki/Selt,2022,,turing complete,implemented,,languages,Selt is a self-modifying esoteric programming language created by User:Zip.
Tuvars,https://esolangs.org/wiki/Tuvars,2022,,turing_complete,implemented,,languages,"Tuvars is an Esolang created on 7/12/22 (July 12th), by User:SpaceByte. The idea behind Tuvars is to be semi powerful, yet be limited by the only having two accessible variables. These two variables make things difficult, but still allow for operations, and interactions between both variables."
Matrixpone,https://esolangs.org/wiki/Matrixpone,,,,unimplemented,matrix-based,languages,"Matrixpone is a Mascarpone derivative by User:BoundedBeans. It uses a matrix instead of a stack, but has similar operations."
AI-Generated Esolang,https://esolangs.org/wiki/AI-Generated Esolang,,,unknown computational class,unimplemented,cell-based,languages; brainfuck derivatives; generated by ai,"AI-Generated Esolang is an esolang prompted by User:BoundedBeans and generated by InferKit, a text generating machine learning algorithm."
Mascarpone Joust,https://esolangs.org/wiki/Mascarpone Joust,,,,programming games; unimplemented,stack-based,languages,Mascarpone Joust is a programming game by User:BoundedBeans inspired by Core War and BF Joust.
DIVSPL,https://esolangs.org/wiki/DIVSPL,2016,declarative paradigm,,implemented; output only; total; unusable for programming,,,"Dustin Ingram's Very Special Programming Language, or DIVSPL, is a declarative wikipedia:domain-specific language for solving the FizzBuzz problem."
Abc!?,https://esolangs.org/wiki/Abc!?,,,,implemented,,languages,Content div not found
BigBrain,https://esolangs.org/wiki/BigBrain,,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,BigBrain is a brainfuck remake by user k written in Lua. (Github Page)
DigitLang,https://esolangs.org/wiki/DigitLang,,,,total; unusable for programming; output only; implemented,,languages,DigitLang is a simple esoteric language by User:Arahis93.
Charred,https://esolangs.org/wiki/Charred,2022,,unknown computational class,implemented,cell-based,languages,"Charred is a language created by User:SpaceByte on July 17th 2022. Charreds is an esolang like brainfuck, but with some differences, variables are stored as characters, with integer equivalents, charred does not use ASCII codes, charred only allows for spaces, and letters, charred does not have loops, instead it has if statements and goto commands, etc. Charred has a very similar base as brainfuck, but is to be considered its own original esolang."
Cscalls,https://esolangs.org/wiki/Cscalls,2022,,,implemented,stack-based,languages; thematic,An esoteric programming language that is made up of CS:GO callouts made in 2022 by User:nmcassa
Neck Sheen,https://esolangs.org/wiki/Neck Sheen,2022,,,implemented,concurrent programming,languages,"Neck Sheen is a programming language that features concurrency and
message passing."
7-8,https://esolangs.org/wiki/7-8,2022,,turing complete; turing tarpits,implemented,cell-based,joke languages; brainfuck equivalents; languages; thematic; low-level,"An esoteric programming language inspired by the 7-8 meme. Presumably, the meme appeared from VK due to posts like ""the last digit of your like will show you in the picture"", and someone took and pulled 7-8 out of context and it turned out to be an incomprehensible, but funny joke."
AHQ9+-,https://esolangs.org/wiki/AHQ9+-,,,,unusable for programming; total; implemented; output only,accumulator-based,languages,"AHQ9+- is an extension of HQ9+, which adds the following instructions:"
EsoChan,https://esolangs.org/wiki/EsoChan,2022,,turing_complete,implemented,,languages,"EsoChan is an Esolang created mostly on 7/20/22 (July 20th), by User:SpaceByte, however was released on 7/21 and began on 7/19. EsoChan is an esolang themed around stories on 4chan. In EsoChan, there are some references to 4chan storied, like for a program (also called a 'story') to be started it must recieve the line ""be program"", or else it is stuck in a frozen state. Commands must also have their first argument as a right facing arrow (>), or else it is not executed, and is considered a comment."
8BallScript,https://esolangs.org/wiki/8BallScript,2022,,,output only; unusable for programming; total,,languages; joke languages; low-level,"8BallScript is a joke esoteric programming language. It was written in 2022 by Gears and Jaegerwald (Real names unknown). 8BallScript is currently not being worked on, but there is a slight chance that it will be rewritten in the future."
Left Curly Brace Symbol,https://esolangs.org/wiki/Left Curly Brace Symbol,2022,,unknown computational class,implemented,,languages; two-dimensional languages,"Left Curly Brace Symbol is an esolang made by User:Yes in 2022
It is User:Yes's first 2D language."
Protogen,https://esolangs.org/wiki/Protogen,2022,,,implemented,,languages; low-level,By Joseppi1
Lete,https://esolangs.org/wiki/Lete,,,turing complete,unimplemented,stack-based; cell-based,brainfuck equivalents; languages; brainfuck derivatives,Lete (pronounced leet) is an esolang by User:BoundedBeans where you cannot delete previously entered code.
TPL,https://esolangs.org/wiki/TPL,2022,,turing complete,unimplemented,,languages,"This is an idea that I had, that I really think is cool."
Tense,https://esolangs.org/wiki/Tense,,,,unimplemented,,languages,"Tense is an esoteric programming language is an unimplemented concept for a programming language based on temporal logic. That is, the programmer reasons not only about the current state of the program, but also what states the program was in previously, as well as making assertions about the potential future state of the program (within the boundaries of what is computable with a Turing Machine; i.e. undecidable statements like the halting problem are still impossible). In essence, it can be thought of as the complete antithesis to functional programming, which aims to remove the notion of state as much as possible; meanwhile, Tense embraces it."
Denver-Augusta-Harrisburg,https://esolangs.org/wiki/Denver-Augusta-Harrisburg,2022,,,implemented,,languages,"Denver-Augusta-Harrisburg is a concurrent-message-passing programming
language."
G arD^EN CorUtY@rD,https://esolangs.org/wiki/G arD^EN CorUtY@rD,,,turing complete,implemented,queue-based,languages; two-dimensional languages,G_arD^EN CorUtY@rD (from now on referred to as GC) is a 2-dimensional esolang by User:BoundedBeans that doesn't follow traditional flow control standards.
99 bottles of pain,https://esolangs.org/wiki/99 bottles of pain,,,unknown computational class,unimplemented,,languages; thematic,99 bottles of pain is an esoteric programming language by User:BoundedBeans with the syntax based around the output of a common programming problem.
Deadfish PDA,https://esolangs.org/wiki/Deadfish PDA,,,push-down automata,implemented,stack-based,languages,Deadfish PDA is a version of Deadfish by User:BoundedBeans that resembles a push-down automaton.
ExtendedPig,https://esolangs.org/wiki/ExtendedPig,,,turing complete,unimplemented,cell-based,languages,ExtendedPig is an extension of Pig and its derivatives by User:BoundedBeans.
Daffodil,https://esolangs.org/wiki/Daffodil,,,turing complete,unimplemented,,languages,"Daffodil is an esoteric programming language by User:BoundedBeans. It is a clone of Subleq. That means every command is 3 memory locations, which ran through the following procedure: Subtract m2 - m1, store result in m2, if m2 <= 0: jump to m3."
Enrtopy,https://esolangs.org/wiki/Enrtopy,2022,,,unimplemented,,languages,Enrtopy is an esoteric language created by the User:Esolang1. It was designed to be a version of Entropy where the data doesn't change. The name is a reference of Truttle1's youtube video explaining Entropy. (link below). (E1-0003)
Deadfish TM,https://esolangs.org/wiki/Deadfish TM,2022,,turing complete,implemented,cell-based,languages,"Deadfish TM is a sequel to Deadfish PDA by User:BoundedBeans, both derivatives of Deadfish. Deadfish PDA describes push-down automata, while Deadfish TM describes Turing machines."
4cell,https://esolangs.org/wiki/4cell,2022,,,unusable for programming; total; implemented,cell-based,languages,"4cell is an esoteric programming language developed by User:Legoninjaenoch. Its name comes from the four cells that can be manipulated with commands. They are a, b, c, d. They can be increased, decreased, added, subtracted, cleared, copied, randomized, and printed."
Genesis,https://esolangs.org/wiki/Genesis,2022,,turing complete,implemented,cell-based,languages,"Genesis 𐤁 is an interpreted, procedural, and Turing-complete diacriticless Paleo-Hebrew programming language."
Chess Code,https://esolangs.org/wiki/Chess Code,,,,implemented,,languages; thematic,"Chess Code  is a programming language made by the user Boinga15 in August 2022. Chess Code uses chess-like moves to write programs that are similar in capability to Brainfuck. While Chess Code cannot interpret actual games, the syntax used is similar to how chess moves are displayed in games."
RoundAbout,https://esolangs.org/wiki/RoundAbout,2022,,unknown computational class,works-in-progress,stack-based,two-dimensional_languages‏‎,This page is still being worked on!
MASL,https://esolangs.org/wiki/MASL,2022,,,implemented,,languages,Matto's Assembly-Styled Language[1] is an interpreted esoteric programming language that looks like assembly but really isn't assembly. It was made by Matto. The first version (v1.0.0-beta1) was released on August 5th 2022 and the latest version (v1.0.0-beta6.1) was released on September 1st 2022. The language is still in beta development. There have been a total of 8 releases and pre-releases.
++C,https://esolangs.org/wiki/++C,2022,,,,,languages,++C (alternatively called PostC) is a C++ based esoteric programming language created by User:Yee haw in 2022. The premise of ++C is using postfix notation with the traditional  C++ syntax.
PriLogic,https://esolangs.org/wiki/PriLogic,,,,unimplemented,queue-based,languages,PriLogic is an esolang by User:BoundedBeans using priority queues as its only data structure.
Bidiroop,https://esolangs.org/wiki/Bidiroop,,object-oriented paradigm,turing complete,unimplemented,,languages,Bidiroop is an esolang by User:BoundedBeans where objects and classes have a different sort of relationship than usual.
2022,https://esolangs.org/wiki/2022,,,unknown computational class,unimplemented; usability unknown,,languages,"2022 is a string-rewriting esolang by User:BoundedBeans. It is not a derivative of 2014. 2022 is different from other string-rewriting esolangs in that it only has one rewriting rule, but what varies is where that rule is applied. The rule is that 2 is replaced with 2022."
Jav,https://esolangs.org/wiki/Jav,,,,implemented; unusable for programming; total; output only,,languages,"Jav is a low level language made by BrickLikesCoding as a side project.
This was kind of made as a important language, like it was a actual attempt but I gave up so this is the result"
Thrillodendron,https://esolangs.org/wiki/Thrillodendron,,object-oriented paradigm,turing complete,unimplemented,,languages,Thrillodendron is an esolang by User:BoundedBeans featuring object orientation completely contained within a string syntax.
!!brainfeed,https://esolangs.org/wiki/!!brainfeed,2022,,,total; implemented; unusable for programming,cell-based,,!!brainfeed is a simple esoteric programming language created by User:Ari.
Loopnest,https://esolangs.org/wiki/Loopnest,,,,,multi-dimensional languages,languages,"Loopnest is a Turning tarpit that can be modeled by an infinitely nested torus-like shape, embedded in 3d euclidean space. The pointer is essentially a particle with an initial velocity; the instructions build the nested structure that the particle will traverse by giving a rotation angle that will rotate the nested loops so that they will align with the pointer's trajectory. The last instruction will be a special one: nest, which will create a subloop, as well as change the velocity of the pointer. The multiples of complete rotations to reach the nest instruction will determine the amount of nested loops created. When the particle reaches a nest instruction it will be taken down into the sub-loop, and then return. The program ends when the pointer completes one cycle of the initial loop."
Befucked,https://esolangs.org/wiki/Befucked,,,,,,languages; two-dimensional languages,"Befucked is a programming language inspired by Brainfuck and Befunge. Befucked programs are written in a two-dimensional grid of ASCII characters, where the flow of the program is mostly linear with the exception of branches and control flow characters. A program ends when no character can be followed, or when a character that requires branches doesn't receive any branches. Instructions outside the flow of a program are interpreted as comments (unless these contain the character N, which would cause an error, as N is the character that determines where a program starts.)"
Diexponae,https://esolangs.org/wiki/Diexponae,,,,unimplemented,cell-based,languages,"Diexponae is the first esolang in its computational class. It was made by User:BoundedBeans. It's not combinational logic, finite state, push-down, linear bounded, or Turing-complete, but something completely different. It is a Quadratic Bounded Automata."
"Thief, Police and the Building","https://esolangs.org/wiki/Thief, Police and the Building",2022,,,implemented,,languages,"Thief, Police and the Building is a newly invented programming language but it isn't started to use by programmers, possibly because it's not so convenient."
Cuboid,https://esolangs.org/wiki/Cuboid,2022,,,implemented; total; unusable for programming; output only,,languages; two-dimensional languages,"Cuboid is created by User:Username1234 in Aug, 2022."
To The Top Right Corner,https://esolangs.org/wiki/To The Top Right Corner,,,,total; unusable for programming; unimplemented,,languages,ToTheTopRightCorner is an esolang which you need to write from the bottom left to the top right corner. You can use these symbols:
⫸fuck,https://esolangs.org/wiki/⫸fuck,,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; low-level,"⫸fuck is a esolang. It's based on brainfuck, being a trivial brainfuck substitution that exchanges the original language's ASCII command identifiers by Unicode symbols of an approximately similar appearance."
XYZ?,https://esolangs.org/wiki/XYZ?,,,push-down automata,,stack-based,languages,Content div not found
HQ9^,https://esolangs.org/wiki/HQ9^,,,unknown computational class,unimplemented,stack-based; cell-based; queue-based,languages,"HQ9^ is an esolang by User:BoundedBeans, which is a lot like HQ9+, but capable of computation and much, much weirder."
Braimmental,https://esolangs.org/wiki/Braimmental,,,,unimplemented,cell-based; stack-based; queue-based,languages,Braimmental is a simple combination of Brainfuck and Emmental by User:BoundedBeans that drastically changes how to write programs in either one.
Classtennis,https://esolangs.org/wiki/Classtennis,,object-oriented paradigm,,unimplemented,,languages,Classtennis is an object-oriented esolang by User:BoundedBeans where programs are only a single expression.
+-= PDA,https://esolangs.org/wiki/+-= PDA,,,push-down automata,,,languages,+-= PDA is esolang inspired by Deadfish PDA created by User:ChuckEsoteric08
Cíonom,https://esolangs.org/wiki/Cíonom,2022,,,implemented,stack-based,languages,"Cíonom (\tʃi-o-nom\) is a language which was created as a test of the Genstone C-framework. It was originally called simply Cio and was designed to be a C-like language. However through its development became a more esoteric language where the only operative structure is a ""call""."
Impfish PDA,https://esolangs.org/wiki/Impfish PDA,,,push-down automata,unimplemented,,languages,Impfish PDA is an esolang by User:BoundedBeans which aims to be like Deadfish PDA but procedural rather than declarative.
LAST,https://esolangs.org/wiki/LAST,2022,functional paradigm,turing tarpits; turing complete,implemented,,languages; low-level,"LAST is an elegant encoding for lambda calculus which uses no explicit variables or indices and only 4 symbols: L, A, S, and T."
Celltail,https://esolangs.org/wiki/Celltail,,,,implemented,,languages,CellTail is a 1d-automata inspired esoteric programing language built by User:Mousetail
XERO,https://esolangs.org/wiki/XERO,2022,,,unimplemented,cell-based,languages,"XERO (the name being the amount of use you'll get out of this language before giving up) is an esolang by User:BoundedBeans which aims to be as annoying as possible, achieved through required nested try-catch blocks, a strange tritwise operation, and dynamically sized tape."
Addbig,https://esolangs.org/wiki/Addbig,,,,usability unknown; unimplemented,,languages,"Addbig is a OISC created by User:Joaozin003 which the only instruction is ""Add the values of A and B, store the result in A and branch to C if the result is bigger than zero."""
Island,https://esolangs.org/wiki/Island,2022,declarative paradigm,turing complete,unimplemented,,languages,Island is a computational model invented by User:Hakerh400 in 2022.
Turing Complete DOM Programming Language,https://esolangs.org/wiki/Turing Complete DOM Programming Language,2022,,turing complete,implemented,,languages; markup languages,Turing Complete DOM Programming Language is an esoteric programming language created by User:Andriy where every code is also an xml file. You can download it here.
SOAP,https://esolangs.org/wiki/SOAP,2022,,turing complete,implemented,,languages,"SOAP (the name standing for Set Oriented Arithmetic Programming) is an esolang by User:BoundedBeans. Many esolangs use stacks, queues, tapes, or accumulators to store data, but not many have done sets."
WindowGolf,https://esolangs.org/wiki/WindowGolf,2022,,finite state automata,unimplemented,cell-based,languages; thematic; high-level,WindowGolf is like Drive-In Window but insanely short. It was created by User:BoundedBeans.
$3COND,https://esolangs.org/wiki/$3COND,2022,,,unimplemented,stack-based,languages,$3COND is an esolang by User:BoundedBeans in which the only loop is based on real life time.
Counterfish,https://esolangs.org/wiki/Counterfish,2022,,turing complete; turing tarpits,implemented,,languages,"Based on Minsky Swap. Neither Portable Minsky Machine Notation nor Szewczyk notation for Minsky machine are suited to directly implementing two register counter machines. PMMN requires significant restructuring of some algorithms to run with only two registers (PMMN is effectively a restricted subset of the hypothetical Minsky machine language),[citation needed] and SNMM is not TC with only two registers. This is an attempt at a somewhat usable two register counter machine. It accidentally became a Deadfish reference."
Everyonelang,https://esolangs.org/wiki/Everyonelang,,,,,,languages; user edited,"Everyonelang is an esolang that everyone can add commands to it! It is not joke esolang and commands like ""if input is qypwieyriweutoiwyqeweutoweyotuwerywqeutwqeryiutoweytoweyiuweoytwqoytowerweut destroy your computer"" or ""if variable X is 73489126478235623452634753626435432756324235617293857902364902735906215972349172.217359027634723957129640-75986249723596231589 delete France from universe"" will be deleted.
The file extension for Everyonelang program is .evry"
Yet Another Musical Esolang,https://esolangs.org/wiki/Yet Another Musical Esolang,,,turing complete,unimplemented,cell-based,languages; brainfuck derivatives,Yet Another Musical Esolang (abbreviated as YAME) is an esoteric programming language that takes music notes as input.
ABPLWNL,https://esolangs.org/wiki/ABPLWNL,2022,,,total; implemented; unusable for programming,,,Who needs loops?
An unusable esolang made with an one-line interpreter and a long name,https://esolangs.org/wiki/An unusable esolang made with an one-line interpreter and a long name,,,,unusable for programming; total; output only; implemented,,languages,An unusable esolang made with an one-line interpreter and a long name is an unusable esolang made by User:Mario0Fan
Aardvark,https://esolangs.org/wiki/Aardvark,2022,,turing complete,implemented; output only,,languages; high-level,"Aardvark is a language created by DanielDG to abuse the async/await syntax. The only datatype in Aardvark is asynchronous tasks (a.k.a. futures or promises), and the only type of control flow is async/await. Despite that, Aardvark is Turing complete."
Incdecisive Machine,https://esolangs.org/wiki/Incdecisive Machine,2022,,turing complete; turing tarpits,no io; implemented,,low-level; languages,Incdecisive Machine is a Minsky Machine variation designed by Keymaker in 2022.
Alphaton,https://esolangs.org/wiki/Alphaton,2022,,,implemented; total,,languages,"Alphaton was originally a brainfuck clone, but soon became its own thing. Unlike most languages, which has punctuation, Alphaton does not use any and are skipped when running commands along with any non-functioning letters which do not have a command linked to them. Alphaton is also case-sensitive."
1line,https://esolangs.org/wiki/1line,2022,,,,,languages; joke languages,1line is a joke programming language worked on by DockedChutoy (talk) in the year 2022. It was made to be terrible.
FuckBrain,https://esolangs.org/wiki/FuckBrain,,,unknown computational class,unimplemented; unusable for programming,cell-based,joke languages; languages,"FuckBrain is a language that adds spacetime travel to brainfuck that was written by User:Esolang1. The language Timefuck is very similar to FuckBrain, but FuckBrain allows to run more than one characters while traveling spacetime. The name symbolizes the spacetime traveling feature of the language. (E1-0002)"
Motorway,https://esolangs.org/wiki/Motorway,2022,,,implemented,stack-based,languages,"Motorway is an esoteric programming language based around the British motorway network, created by User:Ninesquared81. A Motorway program describes a route along British motorways, 12 of which correspond to commands which manipulate a data stack. Other motorways can be visited to connect these command motorways, and command motorways may be visited without invoking their effects by placing them in brackets."
Cube,https://esolangs.org/wiki/Cube,2022,,,total; implemented,multi-dimensional languages; stack-based,,"Cube is an esoteric programming language made to emulate a 3D cube via a 2D text editor interface. The only files that can run Cube code end with extensions "".cube"" and "".dewy""."
CTFuck,https://esolangs.org/wiki/CTFuck,,,turing complete; turing tarpits,implemented,queue-based,languages,"CTFuck is a turing complete esolang created by User:Pro465, based on a tag system, with I/O support.
this is kinda simliar to Boolfuck, in that it operates on bits and has I/O support.
however, CTFuck is based on a tag system."
Zone,https://esolangs.org/wiki/Zone,2022,,unknown computational class,usability unknown; implemented,cell-based,languages,Zone is a programming language wherein instructions are executed in a random order and programs work by modifying their own code.
Lambda Calculus Primer,https://esolangs.org/wiki/Lambda Calculus Primer,2022,,,,,languages,"Lambda Calculus Primer is an esolang created by User:LarhoCherqi. It comprises of only four characters (any other characters are not parsed). Given how simple this is, I am very confident that a concept similar to this already exists."
Legend,https://esolangs.org/wiki/Legend,2022,,turing complete,implemented; no io,cell-based,languages,"Legend is an esolang made by User:Joe, employing a minimalistic syntax comprising of legendre symbols, operating on an infinite tape."
Rozpach,https://esolangs.org/wiki/Rozpach,2022,,turing complete,implemented,stack-based,high-level; languages,Rozpach is an esoteric programming language invented in 2022 by User:PoetLuchnik with the goal of being function-only programming language. Code is a list of function definitions. And there are only two operations: push a function or argument onto the stack and pop the function from the stack and call it.
THROBOL,https://esolangs.org/wiki/THROBOL,2022,,unknown computational class,implemented,concurrent programming,languages; thematic,THROBOL is an esolang by User:BoundedBeans inspired by bowling.
SANTA,https://esolangs.org/wiki/SANTA,2022,,,total; implemented,,joke_languages; languages; thematic,SANTA is a joke programming language created by User:Earthrulerr. The language is based off of the figure Saint Nick (commonly know as Santa Claus) To learn how to fully use SANTA refer to the #ReadMe on the GitHub: [1]
Parity,https://esolangs.org/wiki/Parity,,,unknown computational class,implemented,,languages; low-level,"Parity was created by User:imcute and is called this name due to its only 2 instruction list and its way of doing instructions
an even number means to add 1 to the place of the number divided by 2
an odd number means jump to the number in the place of the number divided by 2 without the 0.5
this language has 2 dialects:list-starts-at-0 dialect and list-starts-at-1-dialect due to technical restrictions
a count to infinity program in dialect 0 would be 4 7 0 0 while in dialect 1 it would be 6 9 0 1
the turing completeness of this is questionable due to it not having a conditional jump
implementations:
python"
ANGL,https://esolangs.org/wiki/ANGL,2022,,turing_complete; turing_tarpits,unimplemented,cell-based,languages; two-dimensional languages,"ANGL (or Abrupt Numerical Graph Language) is a semi-esoteric programming language created by Aries Powvalla. It has the capability to iterate through mathematical operations faster than most typical languages, making it somewhat practical in certain situations."
Tetra,https://esolangs.org/wiki/Tetra,2022,,,implemented; total,,languages,Tetra is a string-rewriting esolang invented by User:Hakerh400 in 2022.
HashWalk,https://esolangs.org/wiki/HashWalk,2022,,,implemented,,languages,HashWalk is an esolang invented by User:Hakerh400 in 2022.
Trichotomy,https://esolangs.org/wiki/Trichotomy,2022,,turing complete,implemented,cell-based; stack-based,languages; low-level,"Trichotomy is hack of Subleq, the one instruction language OISC.  It is named for the property that numbers can take three forms:  positive, negative, or zero.  It uses these three forms to gain eight separate functions plus indirect addressing from the three integer addresses of its instruction format."
Собачка,https://esolangs.org/wiki/Собачка,2022,,,implemented,,languages,Собачка is a string-rewriting esolang invented by User:Hakerh400 in 2022.
Night Shift,https://esolangs.org/wiki/Night Shift,2022,,turing complete,implemented,,languages,Night Shift is a string-rewriting esolang invented by User:Hakerh400 in 2022.
Velocityfuck,https://esolangs.org/wiki/Velocityfuck,2022,,turing complete,,cell-based,languages; brainfuck derivatives,"Velocityfuck is an esoteric language created by User:Esolang1. The difference from brainfuck is that the pointer can gain velocity, and it will move even when another instruction is being executed. (E1-0003)"
Enrtopy++,https://esolangs.org/wiki/Enrtopy++,2022,,,unimplemented,,languages,"Enrtopy++ is an esoteric language created by the User:Esolang1. This language is a successor to Enrtopy, which was designed to be Entropy without changing data. (E1-0003)"
!I!M!P!O!S!S!I!B!L!E!,https://esolangs.org/wiki/!I!M!P!O!S!S!I!B!L!E!,2022,,,implemented; total,,,!I!M!P!O!S!S!I!B!L!E! is an esolang made by User:Mario0Fan
GAXT,https://esolangs.org/wiki/GAXT,2022,,,total,stack-based,,"GAXT is an esoteric programming language created by Fancryer and uses two stacks: a stack for calculations (hereinafter - CalcStack) and a stack for variables (hereinafter - VarStack). Current GAXT version: v0.2-beta. There is an unfinished Java interpreter that will be publicly available after the stable release.  All supported tokens, represented as a string: abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-*/_`<=>?$:;~%{|}\^()@[].,#!."
MindVomit,https://esolangs.org/wiki/MindVomit,2022,,,output only; implemented,cell-based,brainfuck derivatives; low-level; languages,"MindVomit is an esoteric interpreted programming language designed by Mayedl10 on GitHub. Its syntax is inspired by the famous ""Brainfuck"" language. MindVomit was designed as a ""Brainfuck+-"". This means it has more features than Brainfuck, but more limitations as well."
IBSA,https://esolangs.org/wiki/IBSA,,prototype-based paradigm; object-oriented paradigm,turing complete,no io; unimplemented,,languages,IBSA (short for Interacting Binary Substitution Automata) is an esolang made by User:Simple9371. Its main idea is the method call syntax <object>.<method>(<inputs>) in Object-oriented languages.
Dathanna,https://esolangs.org/wiki/Dathanna,2022,,,implemented,cell-based; stack-based,languages,"Dathanna (Irish for ""colors"") is an esoteric programming language for Apple II emulators."
Firefly,https://esolangs.org/wiki/Firefly,2022,,,implemented,,languages,Firefly is an esoteric programming language for the BBC micro:bit.
Filska,https://esolangs.org/wiki/Filska,2022,,unknown computational class,implemented,,languages,"Filska (pronounced ""full-ska"", Shetland for ""high spirited fun"") is an esoteric programming language designed to answer the 
question: what is it like to program in a language where each subprogram can manipulate only a single memory location?"
Falsish,https://esolangs.org/wiki/Falsish,2022,,turing complete,implemented,stack-based,languages; low-level,Falsish is a superset of FALSE with the following major changes (among numerous others):
MineStax,https://esolangs.org/wiki/MineStax,2022,,finite state automata,unusable for programming; output only; implemented; total,,languages; joke languages,MineStax is a joke interpreted programming language by User:ProfNinja and his daughter designed to run in Minecraft using the mc86 architecture.
Watnoxt,https://esolangs.org/wiki/Watnoxt,2022,declarative paradigm,,implemented,cell-based,languages; brainfuck derivatives; two-dimensional languages; low-level,"Watnoxt is a binary, 2D-ish, wanna-be Turing tarpit, created by User:Vallee152 in 2022. It only has 3 reserved characters and it was initially inspired by brainfuck. It's a wanna-be Turing tarpit, because it can only ever have a predefined amount of memory and the code has to change with the addition of more bits. It would otherwise be turing complete. Its name is based off of the expression, ""what not,"" and the nature of how this language operates, ""what? 1? next line!"" Watnoxt programs use the file extension of .wn."
FlinnStack,https://esolangs.org/wiki/FlinnStack,2022,,turing complete,unimplemented,stack-based,languages; high-level,"FlinnStack is a programming language created in 2022 by User:Dtuser1337, It is a simplified version of FlinnScrip centered around the Stacks data types.
It is designed to be able to be converted to the original language as it was based on by hand easily.
It is similar to the original FlinnScrip, minus the variable and extra commands."
Unasm,https://esolangs.org/wiki/Unasm,,,,implemented,,languages; joke languages,"UnAsm is a language created by User:Normalcat, made as a joke to see how fast they could make a readable esolang. It is quite simple, while also being much more difficult to write practical programs than many other esoteric programming languages"
Brainfuck+10,https://esolangs.org/wiki/Brainfuck+10,2022,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,"Brainfuck+10 is a language created by User:Watermelyn. It is like Brainfuck but it has 10 more commands that may or may not be useful depending on how you are using them.
Name is inspired by Brainfuck+3 because I didn't know what else to call it."
Laiyes,https://esolangs.org/wiki/Laiyes,2021,,turing complete,implemented,,low-level,Laiyes is an esoteric programming language based around the idea of doing operation to a value just by typing them rather than first declaring to what variable. It also makes use of mostly single character commands to make programs shorter.
FullFuck,https://esolangs.org/wiki/FullFuck,,,,,,languages,"It is an esolang inspired by BrainFuck, intended to be as hard as possible (but failed)."
^!,https://esolangs.org/wiki/^!,2022,,turing_complete,implemented,stack-based,languages,"^! (pronounced ""caret-bang"") is a stack-based esoteric programming language created by User:Ninesquared81."
MoonScript,https://esolangs.org/wiki/MoonScript,2022,,,total; unusable for programming; implemented,,languages; generated by ai,MoonScript is a language invented by an advanced GPT AI neural network.[1] Previous experiment was GPTLang - an esolang invented by a much smaller and simpler GPT neural network.
QwertyScript,https://esolangs.org/wiki/QwertyScript,,,,implemented; total,stack-based,languages,QwertyScript is a ridiculous scripting language where the only commands are letters of QWERTYUIOP.
Cellular,https://esolangs.org/wiki/Cellular,,,,implemented,,languages,"Cellular is a esoteric language based on two dimensional cellular automata, that works on a stream of data. It is executed on a cylindrical surface, where the top is fed with the input and the bottom represents the output. Execution finishes when the input is fully consumed. The width of the cylinder is n bits, depending on the size of the input and the output."
Buffalo!,https://esolangs.org/wiki/Buffalo!,2022,,turing complete; turing tarpits,implemented,,low-level; thematic,"Supposedly, ""Buffalo buffalo Buffalo buffalo buffalo buffalo Buffalo buffalo"" is a grammatically correct sentence in English. Buffalo! takes that and runs with it."
AllChar,https://esolangs.org/wiki/AllChar,2022,,,unimplemented,stack-based,languages,"I am lazy, so I'll just put the documentation here. Currently unimplemented. Inspired by ALLSCII. I'll probably make this better soon. This language has 3 unnamed stacks."
Half-Broken Car in Heavy Web Traffic,https://esolangs.org/wiki/Half-Broken Car in Heavy Web Traffic,,,turing complete,unimplemented,cell-based,languages; two-dimensional languages,"Half-Broken Car in Heavy Web Traffic is an esolang by User:BoundedBeans as a derivative of Half-Broken Car in Heavy Traffic. If implemented, it would allow for Half-Broken Car in Heavy Traffic to be used on the web."
NNYRLD,https://esolangs.org/wiki/NNYRLD,,,,implemented,stack-based,languages; thematic,"NNYRLD (pronounced ""Nine year old"") is a Turing complete esolang created by yours truly (MopBanana). It was designed to mimic the language and humour of a 9-year-old behind an iPad, including hit humour such as ""69"", ""420"" and ""<text>!!!!!!!11!!111!11!1"". It is one-dimensional and can be highly customised to the user's liking."
SideStacks,https://esolangs.org/wiki/SideStacks,2022,,turing complete,,stack-based,low-level; languages,SideStacks is a Stack-Based programming language made by User:Myoitzi housing two stacks and two 8-bit registers.
Miscmisc2,https://esolangs.org/wiki/Miscmisc2,,,,implemented,cell-based,low-level; languages,"miscmisc2 is a low-level esolang made by User:Transoptimal with the goal of making a language that both isn't too inconvenient to use, and has a small set of instructions."
EsoFur,https://esolangs.org/wiki/EsoFur,2022,,,unimplemented,,joke_languages; languages; thematic,"EsoFur is a joke programming language created by User:TaserTheFox, partially inspired by FurASM"
SNOBOL5,https://esolangs.org/wiki/SNOBOL5,,,,implemented,,languages,SNOBOL5 is an update from SNOBOL4.  More information can be found at http://snobol5.org .
ABFC (Another BrainFuck Clone),https://esolangs.org/wiki/ABFC (Another BrainFuck Clone),2022,,turing_tarpits; turing_complete,implemented,,languages; brainfuck derivatives,"ABFC (stands for ""Another BrainFuck Clone"") is a language created in ~6 hours by User:Nurdle."
Shapes,https://esolangs.org/wiki/Shapes,,,,implemented,,languages; two-dimensional languages,Shapes is a stack-based graphical esolang created by User:Photon_Niko. A shapes program is an image file that contains shapes connected by paths.
Triliteral,https://esolangs.org/wiki/Triliteral,2022,,turing complete,implemented,,low-level; thematic,Have you ever wondered whether it'd be a good idea to have a language where every token encodes both the operation and operand? Triliteral answers that question with an emphatic NO.
Queueue,https://esolangs.org/wiki/Queueue,2022,,,unimplemented,queue-based,languages,Queueue (intentional misspelling of Queue) is an esoteric programming language made by User:Rehydratedmango.
Sailing By,https://esolangs.org/wiki/Sailing By,2022,,turing complete,unimplemented,cell-based,low-level; thematic,"And now the Shipping Forecast, issued by the Met Office on behalf of the Maritime and Coastguard Agency at 0645 today."
Fash,https://esolangs.org/wiki/Fash,2022,,turing complete,unimplemented,,languages,Not to be confused with Bash
ACCUMULATOR,https://esolangs.org/wiki/ACCUMULATOR,2022,,,implemented; total; unusable for programming; output only,,languages,"ACCUMULATOR is a programming language designed by UndoneStudios. It was designed mainly to solve the uselessness problem of the accumulator in most languages that have an accumulator. It is a very basic language, though the creator has an interest in developing and improving the language; the last addition was in 20/11/2024, where the E function was added to the JavaScript interpreter. It has 8 operations (in order of addition; the oldest is first):"
6chars,https://esolangs.org/wiki/6chars,,,,,,languages,"6chars is an esolang with exactly 6 characters. (Count by yourself! '6', 'c', 'h', 'a', 'r', 's'.)"
Gottlob,https://esolangs.org/wiki/Gottlob,2019,,,implemented,,languages; thematic,"Gottlob is an imperative programming language with unusual syntax created by Matthew Dockrey in 2019.  It has unusual syntax, based on Gottlob Frege's logic notation from his 1879 book “Begriffsschrift: A formula language, modeled on that of arithmetic, of pure thought”.  The source code is written not in plain text, but drawn as a tree in two dimensions, similar to Plankalkül or early drafts of APL.  There is an implementation with a specialized interactive editor for the source code."
Pointerfuck,https://esolangs.org/wiki/Pointerfuck,2022,,,implemented,,low-level,pointerfuck is a brainfuck derivative made by User:Transoptimal.
Movi,https://esolangs.org/wiki/Movi,2022,,bounded-storage machine,unimplemented,cell-based,languages; low-level,Movi is an esoteric programming language designed by User:Yousurname in 2022. It is a one-instruction language inspired mainly by the mov instruction.
RapLan,https://esolangs.org/wiki/RapLan,2023,,turing tarpits,unimplemented,,languages; low-level,RapLan is a black language.
′,https://esolangs.org/wiki/′,2023,,unknown computational class,unimplemented,,languages,"′ (pronounced ""nothing prime"") is an esoteric programming language made by User:Rehydratedmango designed to have as few symbols as possible. In ′, every function is a string of prime symbols."
Flasmi,https://esolangs.org/wiki/Flasmi,2022,,turing complete,unimplemented,,,"Flasmi is a language where each command operates on the commands right after it. It doesn't have loops; instead, the program can extend itself infinitely."
Multidodecagony,https://esolangs.org/wiki/Multidodecagony,,,,unimplemented,stack-based,languages,"Multidodecagony is a language made by Joaozin003 inspired by Hexagony, which is laid out in dodecahedrons. Ugh!"
Ditch,https://esolangs.org/wiki/Ditch,2023,,,unimplemented,stack-based,languages,Ditch is an esolang by User:BoundedBeans where syntax is irreversibly changed periodically.
Cathain,https://esolangs.org/wiki/Cathain,2023,,unknown computational class,implemented; output only,,languages,"Cathain (Irish Gaelic for ""when"", /kəˈhɪnʲ/ ""kah-HIN"" or /ˈkahənʲ/ ""KAH-huhn"") is an esolang created by Nurdle. Inspired by languages like Slashes and Thue, its main function is text replacement, however, instead of text, it's actually bits represented as hexidecimal. It also introduces goto-labels and ""timelines""."
Arís,https://esolangs.org/wiki/Arís,2023,,turing complete,works-in-progress; unimplemented,concurrent programming,stubs; low-level; languages,"Arís (Irish Gaelic for ""when"", [əˈɾʲiːʃ] ""uh-REESH"") is an esoteric programming language made by Nurdle. Arís is based off the timeline concept of Cathain, the main difference is that Arís grants control over the timelines."
Listack,https://esolangs.org/wiki/Listack,2023,,turing complete,implemented,stack-based,languages,"Listack is a dynamically typed, symmetric, flat, concatenative, polymorphic, interpreted programming language.  Like most concatenative languages, it is stack based.  Listack was inspired by the stack-based languages Factor, False, XY, and Forth.  The manual scope system was inspired by Fish.  The dependent type system for objects was inspired by Euphoria.  This document refers to words (the traditional concatenative language term) interchangeably with functions and procedures.  Listack is an impure functional language, in which functions are data, data are functions, and every element contains a validity marker."
GRPE,https://esolangs.org/wiki/GRPE,2023,,,implemented; output only,graphical output,low-level,"GRPE (GRaphics Producing Esolang) was designed for one purpose, to generate graphics from code.
The output from the Javascript interperter is 512 x 512 pixels, with the actual caluclated pixels being either 256 x 256 or 64 x 64, but in theory the resolution does not matter as long as the x and y coordinates are treated as going from 0 to 255.
Because of the graphical output it is pointless to do mathematical calculations with the intent of reading the output."
++C+=C++ + ++C;,https://esolangs.org/wiki/++C+=C++ + ++C;,,,turing complete; turing tarpits,,,languages; brainfuck derivatives; low-level,This is still a work in progress. It may be changed in the future.
Electra,https://esolangs.org/wiki/Electra,,,turing complete,implemented,stack-based,languages; thematic; two-dimensional languages,
BooleanFunge,https://esolangs.org/wiki/BooleanFunge,2023,,push-down automata,unimplemented,stack-based,languages; two-dimensional languages; low-level,BooleanFunge is a fungeoid based on boolean values. Has 2D program and stores data in stack with booleans.
Motherf,https://esolangs.org/wiki/Motherf,,,turing complete,implemented,cell-based; stack-based,languages; brainfuck derivatives,Motherf is a programming language inspired by Brainfuck. It compiles any BF program and extends its syntax with a variety of 1 character commands.
UserNo,https://esolangs.org/wiki/UserNo,2023,,,implemented; total,,languages; joke_languages,UserNo is a propaganda esolang against User:Yes as a joke.
OATMEAL,https://esolangs.org/wiki/OATMEAL,2023,,,unimplemented,cell-based,languages,"OATMEAL (Oat-Activated Tape-based Multiprogramming Engine At Last) is a programming language by User:BoundedBeans which prides itself on also being a short notation for oatmeal platters (You know, if you're having guests over and you want to serve them all oatmeal, but you want each bowl to be different...). It's based on a dream the author had in vivid detail."
LRONETWO,https://esolangs.org/wiki/LRONETWO,,,,implemented,,,"LRONETWO is single instruction machine created by SophiaCristina that uses a pretty simple logic to work.
I think that it is very unlikely that this machine is remotely useful considering that there is no way to receive an input of its own without modifying it completely to the point of making the code unreadable for the correct operations.
It would be interesting if someone could do something useful with this."
Monofuck,https://esolangs.org/wiki/Monofuck,,,finite state automata,,,brainfuck derivatives; languages,"Monofuck is a derivative of Brainfuck. It only handles one cell, and it is a boolean cell. the + and - and merged into *."
CatCode,https://esolangs.org/wiki/CatCode,2022,,,,,languages,"CatCode is a programming language made by DevBadger10 from 2022 - 2023, as its development started near New Years. More info is available at its GitHub Wiki link."
TimeWaste,https://esolangs.org/wiki/TimeWaste,2023,,,,,languages,"TimeWaste is an esolang that was created by User:Nathi1235.
It's a python3 based programming language with one minor twist...
certain keywords can only be executed at certain times"
Binary Brainfuck,https://esolangs.org/wiki/Binary Brainfuck,,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; low-level,Binary Brainfuck(BBF) is an esoteric programming language intented to show the complexity of programming.
Queen,https://esolangs.org/wiki/Queen,,,unknown computational class,,queue-based,languages,"Queen is a WIP Language by User:Pro465, based on a call queue."
WTFCode,https://esolangs.org/wiki/WTFCode,2023,,,implemented,,languages; high-level,"WTFCode is an esoteric programming language created by User:Asicosilomu on the 3rd of Feburary 2023, with the goal of over-complicating the simplest of tasks."
Capsule,https://esolangs.org/wiki/Capsule,,,turing complete,implemented,stack-based,languages,"Capsule is an esoteric programming language featuring an 8*8 grid of integers (named ""capsules"") and two stacks, the whole ""gimmick"" is that most commands can only move values to a capsule's neighbours. Its orignal compiler was made in C# by User:Leol22, it executes programs from a text file in command line."
Baguette,https://esolangs.org/wiki/Baguette,,,,implemented,,languages; thematic,The Baguette# programming language is an esoteric programming language created to be BASIC-like but with name of pastries!
Tupilled,https://esolangs.org/wiki/Tupilled,2023,functional paradigm,,usability unknown; unimplemented,,languages; high-level,"Tupilled is a high-level, functional programming language based on tuples and lambdas by User:Ashli Katt and User:Proxxa. All values are tuples or lambdas, so there are no true types, and thus there is no compile-time type checking. Tupilled is highly inspired by Haskell."
GoDDS - Graph of Distributed Data Structures,https://esolangs.org/wiki/GoDDS - Graph of Distributed Data Structures,2023,,turing complete,implemented,,,"This page does not contain the documentation, it can be found on the GitHub repository, here."
Trilangle,https://esolangs.org/wiki/Trilangle,2023,,turing complete,implemented,stack-based,languages; two-dimensional languages,"Trilangle is a 2-D, stack-based programming language. It is Turing-complete, as it can interpret Qdeql."
Hexcellent,https://esolangs.org/wiki/Hexcellent,,,,implemented,,languages,Hexcellent is an esoteric binary programming language that works on hex bytes rather than text[1]
Tenshi C,https://esolangs.org/wiki/Tenshi C,2023,,turing complete,implemented,,languages; low-level,Tenshi C or TenC is an esolang created by User:Richard565
ButWhy,https://esolangs.org/wiki/ButWhy,2023,,unknown computational class,unimplemented,,two-dimensional languages; languages,"ButWhy is an esoteric language created by User:Rehydratedmango, designed to cause programmers to repeat the language's name as many times as possible while using it.
Commands in ButWhy are represented in binary, encoded in base-64. Each base-64 character is placed on a grid, and the program starts reading characters from the top left. The / and \ characters divert program execution like mirrors. Once 4 bits of information have been read, the corresponding command is executed. The ? character will skip over the following character if the stack has a 0 on top.
An example of program flow:"
Object oriented Lambda Calculus,https://esolangs.org/wiki/Object oriented Lambda Calculus,,object-oriented paradigm,,,,languages,Object-oriented Lambda Calculus is an esolang created by User:Joaozin003 which extends Lambda-calculus by adding classes.
Down the Mountain,https://esolangs.org/wiki/Down the Mountain,,,,unimplemented,,languages; thematic,"Down the Mountain is an esolang made by Joaozin003, in which the code is a mountain for a ski to slide down."
Dorklang,https://esolangs.org/wiki/Dorklang,2023,imperative_paradigm,push-down_automata; turing complete,implemented,stack-based,languages,Dorklang is an esoteric programming language created by James Smith.
EchoLang,https://esolangs.org/wiki/EchoLang,,,,works-in-progress,stack-based; cell-based,languages,"EchoLang is an esolang created by I rember in February 2023. It's kind of a mix between ><> and BASIC. It is stack-based, tape-based, AND variable-based, but mostly stack-based."
Matrexp,https://esolangs.org/wiki/Matrexp,2023,,unknown computational class,unimplemented,matrix-based,languages,Matrexp is an esolang by User:BoundedBeans. It focuses on a matrix-based expression system.
Preparation,https://esolangs.org/wiki/Preparation,2023,,unknown computational class,implemented,,languages,Preparation is an esolang invented by User:Hakerh400 in 2023.
Kwert,https://esolangs.org/wiki/Kwert,2023,,turing complete,no io; implemented,,languages; low-level,"Kwert is a language designed by User:Arctenik to correspond closely to certain aspects of the DEFLATE compression format. It involves a self-modifying program that is repeatedly evaluated, with commands that create copies of previous commands and/or cause following commands to be skipped."
SHRUB,https://esolangs.org/wiki/SHRUB,,,unknown computational class,unimplemented,,languages,"SHRUB (SHift Right, set Uppermost bit and Branch on discarded bit) is an OISC found by User:ZM in late 2022."
Graph Oriented Fictional Computer,https://esolangs.org/wiki/Graph Oriented Fictional Computer,2023,,turing complete,implemented,,,"Graph Oriented fictional computer is a fictional computer with a graph-based memory as opposed to a linear one. It was designed by User:Andriy who also implemented an emulator in Java. Each node is referred to by a capital English letter, and each node can have up to 26 child nodes which are also referred as a capital English letter. In the context of this fictional computer, the address of a node refers to the path you have to go through in order to reach it. For example child C of child B of node A is a node with the address ABC. Using the command redirect, it's possible for a node to have multiple correct addresses. Each node can store a one byte value. However, values that take larger space can also be stored by utilizing the child node C, then CC, and so on. It's possible to store strings, 8 bit integers which can be stored as big endian or as little endian, and fractions (like double variables in Java)."
Legasm,https://esolangs.org/wiki/Legasm,1998,,,implemented,,languages,"The Legasm Virtual Machine is a RISC virtual machine implemented in software, invented by Philippe Clavel and David Madore in 1998.  The machine was originally intended to serve some purpose in the Legendes II game engine, but eventually got abandonned, then later development of the game engine got abandonned too.  Legasm is thus arguably not esoteric nor a toy language."
RifL,https://esolangs.org/wiki/RifL,2023,imperative paradigm,turing complete,implemented,cell-based; stack-based,languages; low-level; two-dimensional languages; low-level,"RifL is a tactile self-modifying imperative esoteric coding language. Tactile means that RifL can be fully represented with real-world objects: RifL is written in playing cards. You can spread cards out on a table and perform RifL code by hand. RifL was developed as an educational tool, to allow students who learn physically to run algorithms by hand."
Fungeball,https://esolangs.org/wiki/Fungeball,,,,,,languages; two-dimensional languages,"A two-dimensional multi-""threaded"" language inspired by Befunge."
(SIASL)²,https://esolangs.org/wiki/(SIASL)²,2023,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives,"(SIASL)² is an Esolang belonging to the Turing tarpit family of languages.
It takes inspiration from Brainfuck.The most simple way to descripe (SIASL)² would be as a 2d Brainfuck
see Generic 2D Brainfuck and 2DFuck for reference.
The main thing separating (SIASL)² from these languages is that a (SIASL)² instruction is a combination of two characters instead of one."
HELOWOR,https://esolangs.org/wiki/HELOWOR,,,,implemented; output only; unusable for programming; total,,languages,HELOWOR is an esolang made by emelchenko.
Qwerty,https://esolangs.org/wiki/Qwerty,2023,imperative paradigm|imperative,turing complete,implemented,stack-based; cell-based,languages,"Qwerty, an esoteric programming language designed so you can easily translate other languages into it."
Omicron,https://esolangs.org/wiki/Omicron,2023,imperative paradigm,turing complete,implemented,cell-based,,"Omicron is a Turing-complete esoteric programming language made by Dr. Kilobyte in 2023. Full implementation at GitHub
Subject to change with further development"
LogicGate,https://esolangs.org/wiki/LogicGate,,,,works-in-progress,,languages,"This language is inspired by logic gates, by using simple alphabet you could make a program."
Ogham++,https://esolangs.org/wiki/Ogham++,2020,,turing complete,implemented,,brainfuck derivatives,"Ogham++ is a Turing-complete language optimized for reliable long-term
storage of source code. It was created by Kevin Scannell.
Programs are intended to be carved into
standing stones using the so-called
Ogham script,
originally used to carve
inscriptions written in early varieties of the Irish language
between the 4th and 9th centuries, and now repurposed for the benefit of computer programmers everywhere."
Loss,https://esolangs.org/wiki/Loss,,,,,cell-based,languages; joke languages,Loss has 4 commands:
Segfuck,https://esolangs.org/wiki/Segfuck,2023,,unknown computational class,unimplemented,,brainfuck derivatives,Segfuck is a variant of brainfuck which encourages frequent segmentation faults.
Luafuck,https://esolangs.org/wiki/Luafuck,2021,,,implemented,,languages,"Luafuck is an esoteric subset of the Lua language. It uses 12 distinct characters in the source code. The characters are []()#._Gchar.
The creation of Luafuck was inspired by JSFuck."
Hippopotomonstrosesquipedalian,https://esolangs.org/wiki/Hippopotomonstrosesquipedalian,,,,,,languages,Hippopotomonstrosesquipedalian is a programming language based on two words:
Alphab,https://esolangs.org/wiki/Alphab,2023,,,,,languages,Alphab [ˈæl.feɪb] uses every latin alphabet letter. It was created in 2023 by CreeperBomb.
Pe,https://esolangs.org/wiki/Pe,2023,,,implemented,,languages,|
Emanator,https://esolangs.org/wiki/Emanator,2023,,turing complete,implemented,,languages,Emanator is an esolang invented by User:Hakerh400 in 2023.
Foreach,https://esolangs.org/wiki/Foreach,2023,imperative paradigm‏‎,turing complete,implemented,,languages,"Foreach is an imperative esolang where the only data-type is arrays, and the only flow control is for-each loops and recursion."
Quassaunt,https://esolangs.org/wiki/Quassaunt,2023,,,unimplemented,stack-based,languages,Quassaunt is an esolang by User:BoundedBeans based around sets and reverse-polish notation.
Summatciin,https://esolangs.org/wiki/Summatciin,2023,,,unimplemented,,languages,Summatciin is an esolang by User:BoundedBeans which depends on summations to do looping.
IThinkMyComputerIsDrunk,https://esolangs.org/wiki/IThinkMyComputerIsDrunk,,,,,,languages,"iThinkMyComputerIsDrunk is an esolang, created by RandomIdiot.
At some point, iThinkMyComputerIsDrunk is the opposite of jQuery because its concept is ""write more, do less"".
Important tip: this article is as strange as the esolang. You will find out what this means later."
Linefuck6,https://esolangs.org/wiki/Linefuck6,,,finite state automata,implemented,cell-based,languages; brainfuck derivatives,"Linefuck6 is a version of Brainfuck, but it's only made up of 6 - not 8 - different characters, which are lines. It was invented by Random Idiot"
Scrum,https://esolangs.org/wiki/Scrum,,,,implemented,,languages; thematic,SCRUM is designed for being a language which is understandable for business as well as for developers and losely inspired by the Scrum (software development) framework (hence the name of course).
ShortO,https://esolangs.org/wiki/ShortO,2023,,unknown computational class,implemented,stack-based,languages,"ShortO (Short Output, .sho) is designed to easily output text. It was created by user:MasterWoodie in 2023"
DAWBridge,https://esolangs.org/wiki/DAWBridge,2023,,,unimplemented,,languages; two-dimensional languages,"DAWBridge is the ultimate challenge for those that are programmers, musicians, and masochists simultaneously. It was made by User:BoundedBeans."
Decleq,https://esolangs.org/wiki/Decleq,,,turing complete; turing tarpits,no io; unimplemented,,languages,Decleq (Decrement and jump if Less or Equal to zero) is an OISC by User:ChuckEsoteric08 inspired by P1eq.
...,https://esolangs.org/wiki/...,,,,implemented,cell-based,languages,... is an esolang created by randomIdiot. There are only 3 Symbols:
Functress,https://esolangs.org/wiki/Functress,2023,,turing complete,,,languages,Functress is an esolang invented by User:Hakerh400 in 2023.
Bus 581,https://esolangs.org/wiki/Bus 581,2023,,turing complete,,,languages,Bus 581 is an esolang invented by User:Hakerh400 in 2023.
Auphics,https://esolangs.org/wiki/Auphics,2023,,,unimplemented,,languages,Auphics is an esoteric programming language by User:BoundedBeans featuring:
Desmoslang,https://esolangs.org/wiki/Desmoslang,,,,,,languages,"Read Desmos-lang, it is a programming language designed to use Desmos's abilities."
SBL,https://esolangs.org/wiki/SBL,,,turing_complete,implemented,stack-based,languages,"SBL is a stack-based programming language, made by User:Alex s168, which focuses on being easy to use."
W (Viktor T. Toth),https://esolangs.org/wiki/W (Viktor T. Toth),2001,,,implemented,,languages; low-level,"W is a compiled low-level programming language created by Viktor T. Toth in or before 2001.  The goal of the language is to have a compiler that can be run on DOS 3 computers with a small amount of memory.  The compiler host and target platform are both DOS x86 real mode with only a single segment used, so address space is limited to 64 kilobytes.  The compiler is self-hosting implemented in W, though there is a (likely unpublished) C version as well."
TAML,https://esolangs.org/wiki/TAML,2021,,turing complete,,,languages,"TAML, the Text Adventure Markup Language, is an esoteric programming language intending to lay out the program as a kind of text adventure-like tree structure."
OCOO,https://esolangs.org/wiki/OCOO,,,,implemented,,languages,OCOO is an esoteric programming language designed by User:Trap-representation. OCOO is an acronym for One Character One Operation.
Marbles,https://esolangs.org/wiki/Marbles,2023,,bounded-storage machine,implemented,cell-based; particle automata,two-dimensional languages,Marbles is an esoteric programming language based on marble circuitry.
BrainEmoji,https://esolangs.org/wiki/BrainEmoji,,,turing complete; turing tarpits,implemented,cell-based,brainfuck equivalents; joke languages; low-level; languages; brainfuck derivatives,"BrainEmoji is a  joke esoteric programming language created by Parth Patel. It is identical to Brainfuck, except that the instructions are changed into emojis that look similar. As such, it is a member of the TrivialBrainfuckSubstitution family of programming languages."
Sprupine,https://esolangs.org/wiki/Sprupine,2023,,,unimplemented,cell-based,languages,Sprupine (named after Spruce and Pine trees) is a self-modifying esolang by User:BoundedBeans with binary tree code.
Pairpointing,https://esolangs.org/wiki/Pairpointing,2023,,,unimplemented,,languages; low-level,"Pairpointing is an esoteric programming language made by User: Fazaazafg. In Pairpointing, every variable is a pair. Each pair holds two pointers, which both can point to some other pair, to nothing (also known as a null pointer), or even point to its own pair."
Xeroxer,https://esolangs.org/wiki/Xeroxer,2023,,turing complete; turing tarpits,no io; implemented,,languages,Xeroxer is an OISC by User:Pro465. it has only one command:
Hive,https://esolangs.org/wiki/Hive,2023,,,implemented,concurrent programming,languages; two-dimensional languages,"Hive is a 2D Programming Language created by User:Bsoelch, based on the idea of Hive intelligence."
"(,)","https://esolangs.org/wiki/(,)",,,turing complete,implemented,cell-based,languages; low-level,"(,) or in-parens-comma is a programming language designed with the thought that Brain-Flak has too many types of brackets.  
To run it, you use the interpreter here."
QWERTYUIOP,https://esolangs.org/wiki/QWERTYUIOP,,,,,,languages,QWERTYUIOP is a semi-joke esoteric programming language created by Cinnamony. QWERTYUIOP is designed to look like keyboard mashing.
Clandestine Endorsement,https://esolangs.org/wiki/Clandestine Endorsement,2023,,,,,languages,Clandestine Endorsement is an esolang invented by User:Hakerh400 in 2023.
Proprietary Esolang,https://esolangs.org/wiki/Proprietary Esolang,2023,,turing complete,,,languages,Proprietary Esolang is an esolang invented by User:Hakerh400 in 2023.
Computer For Number,https://esolangs.org/wiki/Computer For Number,,,turing complete,no io,queue-based,languages,"Computer For Number
A function for ""a natural number""，actually an array of interger.
All operations are on numbers,includes values,codes,variable for judgment,and instruction address."
Tsept,https://esolangs.org/wiki/Tsept,,,,implemented,stack-based; cell-based; concurrent programming,languages,"Tsept (pronounced /t͡sɛpt/) is an esolang with 28 instructions and 28 syscalls. Its name means ""Tetra Sept"" (4*7) because of the quantity, as mentioned earlier, of instructions and syscalls."
ForWhile,https://esolangs.org/wiki/ForWhile,2023,,,total; implemented,stack-based,languages,ForWhile is a minimalistic stack based Language created by User:Bsoelch.
Revapp,https://esolangs.org/wiki/Revapp,,functional paradigm,turing complete,implemented,,languages,"revapp is a programing language created by User:Abo-Junghichi.
It is based on Lambda calculus and uses call-by-need as it's evaluation strategy."
Two-instruction madness!,https://esolangs.org/wiki/Two-instruction madness!,,,turing complete; turing tarpits,,cell-based,languages,"Welcome to Two-instruction madness!
Unlike what it name says, Two-instruction madness! has three instructions. (If you want the true Two-instruction madness! experience hop over to Two-instruction madness! (fr this time)) Note that I am going to claim that this as the esolang with the least instructions.
You might say, Subleq only has 1 instruction! But, the subleq instruction has parameters. Also, you also might say, I/D machine! But the turing completeness proof DOES.NOT.MAKE.SENSE, because they need to subtract to refrence older values and because you can't subtract,you will eventually not be able to refrence older values. So I/D machine is not allowed, because it is not turing complete. All of the instructions in Two-instruction madness don't have parameters.
So, what are the 3 instructions? e, a and j. e stands for ""evaluate"" and it has two modes; mode 0 and mode 1. So, before we talk about the instructions, we need to
data pointer. Of course, the data pointer is simply a pointer in the memory. Now we can talk about the instructions! Back to the modes of e. Just kidding! The data pointer always moves in a direction specified by a value we will call the data direction. Now we can talk about the modes of e. Mode 0 will jump back two instructions in the code and flip it's mode. 
However, the e instruction will only execute 1 time, unless the e gets jumped back to from another e. Mode 1 is like mode 0, except instead of jumping back, you flip the direction of the data direction.
The a instruction is much simpler, it simply stops the data pointer from moving and add's the data direction to the current cell. (right=1, left=-1)
Also, to make this turing complete, there is j. It first checks if the value at the data pointer then if it's 0 then jumps back 3 instructions. It also activates the e like the edge case."
Goofy Ahh Esolang,https://esolangs.org/wiki/Goofy Ahh Esolang,2023,,,implemented,stack-based,languages,A stack-based esolang created by User:Dominicentek where every time you execute an instruction a goofy ahh sound plays based on the instruction. There's a 500ms delay between each instruction.
Floor,https://esolangs.org/wiki/Floor,2023,functional paradigm,,total; implemented,,languages,Floor is a programming language based on arithmetic expressions.
Simple logic,https://esolangs.org/wiki/Simple logic,2023,,turing complete,,,languages,Simple logic is an esolang invented by User:Hakerh400 in 2023.
Goto Considered Harmless,https://esolangs.org/wiki/Goto Considered Harmless,2023,,,implemented,cell-based,languages,"Goto Considered Harmless is an esoteric programming language created by User:Ninesquared81. It is named after the conditional jump operation, which is the language's only control flow construct."
Prefunge,https://esolangs.org/wiki/Prefunge,2023,,turing complete,unimplemented,stack-based,languages,Prefunge is a Befunge derivative by User:BoundedBeans.
Functional Struct Language,https://esolangs.org/wiki/Functional Struct Language,,functional paradigm,,no io; unimplemented,,languages; high-level,"The Functional Struct Language (FSL for short) is an functional esoteric programming language designed to lift the burden of predefined types and predefined functions and undefined behaviour, since this language does not contain any of these and everything you want to achieve must be programmed by hand (even types like integers and operations like addition). This makes it no longer necessary to look through the documentation of the language so often and also makes it so that there are no undefined edge cases in the language similar to division by zero in other programming languages."
ABCDirection,https://esolangs.org/wiki/ABCDirection,,,unknown computational class,unimplemented,queue-based; cell-based,languages; two-dimensional languages,ABCDirection is a 2 dimensional esolang by User:BoundedBeans.
ABCDirectionE,https://esolangs.org/wiki/ABCDirectionE,,,unknown computational class,unimplemented,,languages; two-dimensional languages,"ABCDirectionE is an esolang by User:BoundedBeans. It's identical to ABCDirection, but with an extra command allowing self-modifying. It also has the extra restriction that the code should be a power of two in size in both directions, or the E command will just act like B."
Supertape,https://esolangs.org/wiki/Supertape,,,turing complete,,cell-based,languages; low-level,"The whole program is made up of a main normal tape, containing some number of values, normal tapes, or cyclic tapes."
LstackG,https://esolangs.org/wiki/LstackG,2023,,push-down automata,implemented,stack-based,brainfuck derivatives; languages,"<stack> is an esolang created by User:None1.
It's very brainfuck-like. However, it's not Turing complete."
Sharp flat,https://esolangs.org/wiki/Sharp flat,2023,,,implemented,cell-based,brainfuck equivalents; languages,#b is a Brainfuck-equivalent esolang created by User:None1.
Brainfuck extended,https://esolangs.org/wiki/Brainfuck extended,2023,,,implemented,cell-based,brainfuck derivatives; languages; low-level,"Brainfuck extended is extended Brainfuck, which can do complicated stuff easier than Brainfuck, developed by User:None1."
B2C,https://esolangs.org/wiki/B2C,2023,,finite state automata,implemented,cell-based,brainfuck derivatives; languages,"It's Brainfuck, with 2 cells, invented by User:None1."
这不是编程语言！,https://esolangs.org/wiki/这不是编程语言！,,,turing tarpits; turing complete,implemented,cell-based,cjk; languages; brainfuck derivatives; brainfuck equivalents; low-level,"这不是编程语言！is an esolang created by User:None1.In Chinese, 这不是编程语言！ means ""This is not a programming language!"", but it is a programming language."
Death,https://esolangs.org/wiki/Death,,,,output only,,languages,"Death is my excuse to stop working on Two-instruction madness!. And what do you know? Its extremely hard. It attempts to be harder than Malbolge (or Malbolge unshackled) without employing tricks like encryption. So, here are the instructions:"
EmojiWee,https://esolangs.org/wiki/EmojiWee,2023,,,unusable for programming; implemented,,languages,"EmojiWee is a compressed version of Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee using emoji, created by User:None1."
DFS,https://esolangs.org/wiki/DFS,,,,implemented,,languages; deadfish derivatives,"DFS here doesn't stand for ""Depth First Search"", it stands for ""Deadfish"", the author named it DFS because the name DF is already taken by DateFuck."
Beditasm,https://esolangs.org/wiki/Beditasm,,,turing complete,unimplemented,,languages,"Beditasm is an assembly-like esolang created by User:None1, which runs on an imaginary binary editor."
Semqain,https://esolangs.org/wiki/Semqain,2023,,,unimplemented,queue-based; cell-based,languages,"Semqain (SElf-Modifying Queue brAINf***) is an esoteric programming language by User:BoundedBeans resembling BF, but with the code and the tape fused and queue-ified."
Deadfuck,https://esolangs.org/wiki/Deadfuck,,,,implemented,,brainfuck derivatives; brainfuck equivalents; languages,Deadfuck=DFS+brainfuck
硕鼠,https://esolangs.org/wiki/硕鼠,,,push-down automata,implemented,stack-based,cjk; languages,硕鼠 is an esolang created by User:None1.
Mendeleev,https://esolangs.org/wiki/Mendeleev,2023,,,unimplemented,,languages; thematic,Mendeleev is an esolang by User:BoundedBeans which uses weird chemistry-based expression syntax.
PTotE,https://esolangs.org/wiki/PTotE,2023,,,unusable for programming; total; implemented; output only,,languages; joke languages; thematic,"PTotE is an esolang, invented by User:None1."
Crop,https://esolangs.org/wiki/Crop,,,,unusable for programming,,languages; thematic,Crop is a 2D esolang invented by User:None1.
"Brainfuck(B,R,A,I,N,F,U,C,K)","https://esolangs.org/wiki/Brainfuck(B,R,A,I,N,F,U,C,K)",,,turing complete; turing tarpits,,cell-based,brainfuck derivatives; brainfuck equivalents; languages; low-level,"Brainfuck(B,R,A,I,N,F,U,C,K) is a Brainfuck-equivalent esolang which is invented by User:None1"
Setlang,https://esolangs.org/wiki/Setlang,,,,unusable for programming; implemented,,languages; joke languages,"Setlang is an esolang created by User:None1, inspired by the representation of Python data structures, it is very simple."
C-Shop,https://esolangs.org/wiki/C-Shop,2023,,,unusable for programming; total; implemented,,languages; thematic,"C-Shop is an esolang created by User:None1, it has nothing to do with the non-esoteric language C# except that they have similar pronounciation."
Scratch is dumb,https://esolangs.org/wiki/Scratch is dumb,2023,,turing complete; turing tarpits,implemented,cell-based; binary,languages; brainfuck derivatives; brainfuck equivalents; low-level,"Scratch is dumb is a trivial brainfuck substitution made by User:None1, it is made to response to the person who invented the esolang Esolang Simply Created To Annoy People Who Dislike Scratch, who wants to annoy people who dislike scratch. This esolang will tell you that Scratch IS useless and even dumb! Even dumber than brainfuck! Because Scratch has no ASCII table and no control characters (That means you cannot say mutiline text in Scratch)"
坑,https://esolangs.org/wiki/坑,,,,unusable for programming,,cjk; languages; joke languages,"坑 is an esolang created by User:None1, it is the same as 🕳️, but all the emojis are replaced with Chinese characters, making it easier to type."
Thue++,https://esolangs.org/wiki/Thue++,,,turing_complete,implemented,,languages,"Thue, but with RegEx (EMCAscript).
Capture groups exist, and can be accessed by the replacement text with $number."
IOFuck,https://esolangs.org/wiki/IOFuck,,,,unusable for programming; implemented,,languages; joke languages; low-level,IOFuck is an esolang invented by User:None1.
?!,https://esolangs.org/wiki/?!,,,turing tarpits; turing complete,,cell-based,brainfuck derivatives; languages,"This wiki is dedicated to the fostering and documentation of programming languages designed to be unique, difficult to program in, or just plain weird."
Kiss,https://esolangs.org/wiki/Kiss,2023,functional paradigm,turing complete,unimplemented,,languages,Kiss is an esolang invented by User:Hakerh400 in 2023.
Deadchicken,https://esolangs.org/wiki/Deadchicken,2023,,,implemented; unusable for programming; output only; total,,languages; joke languages; low-level,"Deadchicken is an esolang invented by User:None1, which is a combination of Deadfish and Chicken."
Hexdump,https://esolangs.org/wiki/Hexdump,2023,,,output only; unusable for programming; total; implemented,,languages; joke languages,Hexdump is an esolang invented by User:None1.
NOP (esolang),https://esolangs.org/wiki/NOP (esolang),,,,unusable for programming; total; no io; implemented,,languages; nope. derivatives; joke languages; low-level,"NOP is an esolang created by User:None1, and it is the world's third Nihilistic language (the first two are Nil and APLWSI)."
Restricted chicken,https://esolangs.org/wiki/Restricted chicken,,,,total; unusable for programming; output only; implemented,,languages; joke languages,"Restricted chicken is a derivative of chicken, created by User:None1"
Minimized BF,https://esolangs.org/wiki/Minimized BF,2023,,finite state automata,implemented; non-interactive io,cell-based,languages; brainfuck derivatives; low-level,"Minimized BF is brainfuck with only 4 commands +>[], created by User:None1. Despite the fact that it has only 4 commands, it's still very powerful and almost Turing complete."
ByT,https://esolangs.org/wiki/ByT,2023,declarative paradigm,turing tarpits,implemented,stack-based,languages; low-level,ByT is an esoteric programming language designed to be Turing-complete with as few commands for stack manipulation as possible.
WeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBasic,https://esolangs.org/wiki/WeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBasic,2023,,,implemented,,languages; high-level,"WeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBasic (or WeeB) is a derivative of Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee created by User:None1, which is Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee with some additional syntax."
WeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBasic++,https://esolangs.org/wiki/WeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBasic++,,,turing complete,,cell-based,languages,"WeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBasic++ or WeeB++ is a derivative of WeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeBasic, which is a derivative of Weeeeeeeeeeeeeeeeeeeeeeeeeeeeee. It's created by User:None1. The esolang is invented to implement brainfuck."
Setlang++,https://esolangs.org/wiki/Setlang++,,,,unusable for programming; unimplemented,,languages; joke languages,"Setlang++ is an esolang invented by User:None1, it is a derivative of Setlang, and its original goal is to write a Truth Machine."
I cannot understand that.,https://esolangs.org/wiki/I cannot understand that.,,,,unusable for programming; output only,,languages; joke languages,I cannot understand that. is an esolang invented by User:None1.
Idiot,https://esolangs.org/wiki/Idiot,,,finite state automata,unusable for programming,,languages; joke languages,"Idiot is an esolang created by User:None1, it is very stupid, but it can still write a cat program and a Truth Machine."
Python But Bad,https://esolangs.org/wiki/Python But Bad,,,turing complete,implemented,,languages; high-level,"Its like python,but if the interpreter detects any error,it deletes the entire code."
Logik,https://esolangs.org/wiki/Logik,2023,,,implemented; total,cell-based,languages,The Logik Programming Language is an esoteric cell-based programming language inspired by BrainFuck and Logic Gates.
Brainfun,https://esolangs.org/wiki/Brainfun,,,,,cell-based,languages; brainfuck derivatives,"Brainfun is a WIP variant of Brainf--- that was made to be simple, like an actual programming language. It takes on the same way of coding in Brainf---. You have a huge 1D array to increment and decrement values. However, in BrainFun, you have a lot more freedom and ability to code."
Restricted batch,https://esolangs.org/wiki/Restricted batch,,,,output only; unusable for programming; total,,languages; joke languages,Restricted batch is an esolang created by User:None1 based on Batch
Python but even worse,https://esolangs.org/wiki/Python but even worse,,,turing complete,implemented,,languages,"Python but even worse is like Python, but it deletes its code if it doesn't raise an error."
Stacks,https://esolangs.org/wiki/Stacks,,,,no io,stack-based,languages,This is Stacks.
So is your face.,https://esolangs.org/wiki/So is your face.,,,,total; implemented; unusable for programming; output only,stack-based,languages; joke languages,So is your face. is an esolang created by User:None1.
Goldfuck,https://esolangs.org/wiki/Goldfuck,2023,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,Goldfuck is a derivative of !!Fuck created by User:None1
Brainchicken,https://esolangs.org/wiki/Brainchicken,,,turing complete,implemented,,brainfuck derivatives; brainfuck equivalents; languages,"Brainchicken is a equivalent to brainfuck, created by User:None1."
脑操,https://esolangs.org/wiki/脑操,2023,,turing complete,implemented,,cjk; brainfuck derivatives; brainfuck equivalents; languages,"脑操 is a derivative of Brainfuck but in Chinese. It's created by User:None1, and it is a member of Trivial brainfuck substitution."
F! U! C! K! What do we appreciate!,https://esolangs.org/wiki/F! U! C! K! What do we appreciate!,,,turing complete,unimplemented,,brainfuck derivatives; brainfuck equivalents; languages,F! U! C! K! What do we appreciate! Fuck! Brain! Brainfuck!
F!,https://esolangs.org/wiki/F!,,,,output only; total; unusable for programming; implemented,,languages; deadfish derivatives,"F! is a deadfish equivalent by User:None1, but it uses character output."
BrainZ,https://esolangs.org/wiki/BrainZ,,,turing complete,,binary,languages; brainfuck equivalents; compressed_brainfuck,"BrainZ (say ""Brain zee"") is a brainfuck equivalent created by User:None1. It is brainfuck compressed with Huffman compression."
F!--,https://esolangs.org/wiki/F!--,,,,output only; total; unusable for programming; implemented,,languages; deadfish derivatives,"F!-- is the same as F! except that it has no char output, and therefore completely equivalent to Deadfish.
This article is not a stub."
Fish Code,https://esolangs.org/wiki/Fish Code,2023,,turing complete,implemented,stack-based,languages,Fish Code is an esolang invented by User:None1. It is named Fish Code because its programs are shaped like fish.
WsFuck,https://esolangs.org/wiki/WsFuck,,,,,,brainfuck equivalents; languages; brainfuck derivatives,"WsFuck is a derivative of brainfuck by User:None1. It's the same as Binaryfuck, but all the 0's are replaced with line feeds, and all the 1's are replaced with spaces."
TernLSB,https://esolangs.org/wiki/TernLSB,2023,,turing complete,implemented,steganography,languages; brainfuck derivatives; brainfuck equivalents,"TernLSB is an esolang invented by User:None1, it uses Steganography to store its program."
NOPQ,https://esolangs.org/wiki/NOPQ,,,,total; output only; unusable for programming; implemented,,languages,NOPQ is an extension of NOP (esolang) by User:None1.
",","https://esolangs.org/wiki/,",,,turing complete,implemented,,languages; joke languages,", is an esolang created by User:None1."
FJ,https://esolangs.org/wiki/FJ,,,turing complete,,,brainfuck derivatives; languages; brainfuck equivalents,FJ is a brainfuck equivalent by User:None1. Its aim is to have programs very easy to type in using a QWERTY keyboard.
C²,https://esolangs.org/wiki/C²,,,,unimplemented,,languages; low-level,"Simple low-level assembly-like programming language that focuses on being easy to ""parse"""
ᖴᑌᑎᑎEᒪIᑕ,https://esolangs.org/wiki/ᖴᑌᑎᑎEᒪIᑕ,,,,,,languages,funnelic is esotecric programming language to execute simple math functions:
Indicode,https://esolangs.org/wiki/Indicode,2023,,,unimplemented; usability unknown,concurrent programming,languages,"Indicode is a family of somewhat-concurrent esolangs that uses a social networking service (which will be further shortened as SNS) as the medium of communication. Indicode uses social features like tagging and mentioning to function, with posts as a place to input code."
QuineFuck,https://esolangs.org/wiki/QuineFuck,,,turing complete,unimplemented,,languages; brainfuck derivatives,QuineFuck is an esolang invented by User:None1.
Mazerunner,https://esolangs.org/wiki/Mazerunner,2023,,unknown computational class,implemented,stack-based,languages; two-dimensional languages,"Mazerunner is an esolang made by User:Error 27 in 2023. It was made based on the left-hand rule for solving mazes, where a rat traverses the program by always turning left when given the option. Programs are in the form of paths from a start to a goal, and the rat executes instructions as it passes them on the way to the goal. During the program the rat must also be regularly fed in order to keep it alive."
ExampleFuck,https://esolangs.org/wiki/ExampleFuck,,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents; thematic,ExampleFuck is brainfuck but every command is the name of a  popular problem.
Soallang,https://esolangs.org/wiki/Soallang,2022,,turing complete,implemented,stack-based,languages; low-level,Soallang is a stack-based esoteric programming language designed by HungKhanh0106 (talk).
UndetailedFuck,https://esolangs.org/wiki/UndetailedFuck,,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents; joke languages,UndetailedFuck is an esolang created by User:None1 and inspired by DetailedFuck and ThisIsNotARealLanguage. It is a brainfuck derivative.
Chicken you too beautiful,https://esolangs.org/wiki/Chicken you too beautiful,2023,,turing complete,,,languages; brainfuck derivatives; brainfuck equivalents,"Chicken you too beautiful or JNTM is an esolang created by User:None1, it is a Trivial brainfuck substitution."
Multiplicity,https://esolangs.org/wiki/Multiplicity,2023,,turing complete,implemented,,languages; brainfuck equivalents,Multiplicity or mul is an esolang invented by User:None1. It is inspired by Factor.
Addition Automaton,https://esolangs.org/wiki/Addition Automaton,2023,,turing complete; turing tarpits,implemented; no io,,languages; low-level,"Addition Automaton is an esoteric programming language developed/discovered by User:ais523 in 2023, after a study into how useful base-conversion operators would be for implementing Turing tarpits. It is quite similar to a one-dimensional cellular automaton (it is easy to compile between an addition and cellular automaton in either direction, although typically with a large increase in size)."
BinaryLanguage,https://esolangs.org/wiki/BinaryLanguage,2023,,turing complete; turing tarpits,implemented,,languages,BinaryLanguage is an esolang created by User:None1 which uses some simple binary operations.
AmogusScript,https://esolangs.org/wiki/AmogusScript,2023,,,,,languages; thematic; high-level,"AmogusScript is a very sussy esoteric programming language, invented on August 21, 2023 by User:Quito0567 and modified the following day. It was made to commemorate the abandoning of Amogus Wiki."
Self-modifying Brainfuck Sharp,https://esolangs.org/wiki/Self-modifying Brainfuck Sharp,2023,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,Self-modifying Brainfuck# or SMBF# is a variation of Self-modifying Brainfuck by User:None1.
Func,https://esolangs.org/wiki/Func,2023,,,unusable for programming; total; unimplemented,,languages,"Func is an esolang that can only use built-in functions, created by User:None1."
Func++,https://esolangs.org/wiki/Func++,2023,,,unusable for programming; total; unimplemented,,languages,"Func++ is an extension of Func, created by User:None1, it is backwards compatible with Func."
PocketFuck,https://esolangs.org/wiki/PocketFuck,2023,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,PocketFuck is an image version of brainfuck by User:None1. Programs in this esolang are small enough to be put in your pocket!
Brainpocalypse II,https://esolangs.org/wiki/Brainpocalypse II,2023,,turing complete,no io; implemented,cell-based,languages; low-level,"Brainpocalypse II is a modified version of Brainpocalypse, created by User:ais523 in 2023. Unlike Brainpocalypse, in Brainpocalypse II the position of the tape pointer is statically known at every point in the program (i.e. for every command, it is known which tape element it will act on); the intention is that this should make it easier to write compilers from Brainpocalypse II into other programming languages, in order to prove those languages Turing complete. Brainpocalypse II is otherwise very similar to its predecessor (although the ""decrement"" instruction needed to be tweaked slightly in order to allow the program to zero-test cells without completely forgetting what it was doing at the time)."
Pico Scheme,https://esolangs.org/wiki/Pico Scheme,2021,functional paradigm,turing complete,output only; implemented,,languages,"Pico Scheme is a minimalist purely functional version of Scheme, with all non-functional features removed. The syntax and semantics are defined both informally and in formal extended BNF and denotational semantics."
SDOTOS,https://esolangs.org/wiki/SDOTOS,2023,,turing complete,unimplemented,,languages,"SDOTOS is an esoteric programming language created by User:Infinitehexagon.
Feel free to try to find the computational class of this language and make an implementation or an interpreter
SDOTOS has 16 commands, and 8 built in instructions."
Befudge,https://esolangs.org/wiki/Befudge,2023,,push-down automata,usability unknown; implemented,,languages; two-dimensional languages,"Befudge is an esolang created by User:None1 simply because he thinks that the commands ^, <, v, and > in Befunge are unnecessary (since there are | and _)."
OISCalypse,https://esolangs.org/wiki/OISCalypse,2023,,turing complete,no io; implemented,,languages,"OISCalypse (say ""oh-ie-ES-ca-lips"") is an OISC created by User:None1. It is inspired by Subleq, Idego and Brainpocalypse."
100BF,https://esolangs.org/wiki/100BF,2023,,turing complete,,,languages; brainfuck derivatives; brainfuck equivalents,"100BF is an oOo CODE inspired, brainfuck equivalent esolang by User:None1, it is named 100BF because he realized this is the 100th esolang he created."
Boomerlang,https://esolangs.org/wiki/Boomerlang,,,,unimplemented,,languages; high-level,"Boomerlang is an esoteric programming language developed by User:Quito0567 on August 27, 2023. It uses a pointer, referred to as a boomerang, that is constantly moving in a certain direction and executing any lines of code it touches. The boomerang also reverses its direction whenever it reaches the program's top or bottom, resulting in an infinitely repeating program. Note that when the boomerang changes direction, the line # it is currently at is not re-executed."
Introduce yourself,https://esolangs.org/wiki/Introduce yourself,2023,,turing complete,unimplemented,,languages,Introduce yourself is a pseudonatural esolang created by User:None1.
Shifty,https://esolangs.org/wiki/Shifty,2023,,turing complete,,,languages; low-level,Shifty is an esoteric assembly language created by User:D. The primary operation is bit shifting.
FakeC,https://esolangs.org/wiki/FakeC,2023,,turing complete,unimplemented,,languages; brainfuck derivatives; brainfuck equivalents,"FakeC is an esolang created by User:None1, it is a brainfuck equivalent. It is made to optimize brainfuck."
PlusOrOutput,https://esolangs.org/wiki/PlusOrOutput,2023,,finite state automata,implemented; output only; unusable for programming; total,,languages,PlusOrOutput is an esolang create by User:None1 and inspired by PlusOrMinus.
TalkingHead,https://esolangs.org/wiki/TalkingHead,,,,,,languages,Talking head is a programming language where you speak instead of type. The repo is here.
UnnumericJS,https://esolangs.org/wiki/UnnumericJS,2023,,turing complete,output only,,languages,"UnnumericJS is an esolang create by User:None1 and inspired by MangularJS and JSFuck. It is JavaScript, but if your program includes digits (the characters 0~9), the program raises a syntax error."
Rhokell,https://esolangs.org/wiki/Rhokell,2023,functional paradigm; declarative paradigm,turing complete; turing tarpits,implemented,tree-based,languages; high-level,"rhokell created by User:Pro465 is a mixture of rho calculus + haskell. it consists of a list of rules separated by ;, each consisting of two untyped expressions separated by =."
This esolang is a brainfuck derivative,https://esolangs.org/wiki/This esolang is a brainfuck derivative,,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,This esolang is a brainfuck derivative is a brainfuck derivative by User:None1.
AuFI,https://esolangs.org/wiki/AuFI,2023,,,unusable for programming; total; implemented; output only,,languages; joke languages; thematic,"AuFI is like PTotE, but instead of increasing the atomic number by 9 for each element, we increase it by 8. This language is created by the author of PTotE (None1) because he found out that the character with the ASCII value of 9 (tab) is necessary, while the character with the ASCII value of 127 (delete) is unnecessary."
LambdaPython,https://esolangs.org/wiki/LambdaPython,2023,,turing complete,,,languages,"LambdaPython is Python, but if your program includes def, it raises a syntax error (that means you must use built-in functions or lambda functions instead of normal ones, thus the name). It is named by User:None1 and inspired by UnnumericJS which is inspired by MangularJS."
Czure,https://esolangs.org/wiki/Czure,2023,,turing complete,,,languages; joke languages,"Czure (pronounced as ""seizure"") is an esoteric programming language made by User:Marina. It is an equivalent to C, but every time you run a program there's a 96.217503% chance that it crashes."
Look!,https://esolangs.org/wiki/Look!,2023,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,Look! is a sound-based esolang based on brainfuck by User:None1. Its name has nothing to do with the specification of the language.
UnnumericPy,https://esolangs.org/wiki/UnnumericPy,2023,,turing complete,implemented,,languages; high-level,"UnnumericPy is an esoteric programming language created by User:Marina and inspired by UnnumericJS. It is an equivalent to Python, but if the code has any digits it will raise a syntax error."
\,https://esolangs.org/wiki/\,2023,,unknown computational class,implemented,,languages,"\ or backslash is a self-modifying esolang created by User:None1, it is originally made to create a cheating quine."
AGSPL,https://esolangs.org/wiki/AGSPL,,,,,stack-based,languages; golfing language‏‎,"AGSPL is a stack-based esoteric programming language created by Xi-816. It's inspired by Golfscript, APL and others."
Govnom Srat' Pomojet Letat',https://esolangs.org/wiki/Govnom Srat' Pomojet Letat',,,,,,languages,"Govnom Srat' Pomojet Letat'  is a programming language created by User:Xi-816. It is very simple, and has only 6 commands."
FrainBuck--,https://esolangs.org/wiki/FrainBuck--,,,,output only,cell-based,languages; two-dimensional languages; brainfuck derivatives,"FrainBuck-- is a 2-dimemsional programming language created by User:Xi-816. It's a BrainFuck derivative, but it has only 4 commands."
NULL-NONE NOTHING,https://esolangs.org/wiki/NULL-NONE NOTHING,,,,,cell-based; stack-based,languages; brainfuck derivatives,NULL-NONE NOTHING is an esoteric programming language crated by User:Xi-816.
BrainHalt,https://esolangs.org/wiki/BrainHalt,,,,,,languages; brainfuck derivatives,BrainHalt is a brainfuck derivative that solves the halting problem. It is invented by User:None1.
Nope!,https://esolangs.org/wiki/Nope!,,,turing complete,,,languages; brainfuck derivatives; brainfuck equivalents,"Nope! is an esolang created by User:None1 and inspired by NULL-NONE-BF and !!Fuck, it is a Trivial brainfuck substitution."
Obfuscated,https://esolangs.org/wiki/Obfuscated,,,finite state automata,implemented; unusable for programming,,languages,"Obfuscated is an esolang created by User:None1 and inspired by Malbolge, its goal is to make you suffer."
!!!!,https://esolangs.org/wiki/!!!!,2023,,,,,languages,"!!!! is an esoteric programming language created by User:Xi-816. It uses a stack, and a register."
Joke computer programming language,https://esolangs.org/wiki/Joke computer programming language,,,finite state automata,no io; unusable for programming; implemented,,languages,"Joke computer programming language or JCPL is an esolang created by User:None1, it runs on an imaginary joke 1-bit binary computer."
This esolang is not a push-down automata,https://esolangs.org/wiki/This esolang is not a push-down automata,2023,,push-down automata,total; implemented,,languages,"This esolang is not a push-down automata (or TEISNPDA or simple TEI) is, unlike its name, a push-down automata. It is invented by User:None1."
Dead fish,https://esolangs.org/wiki/Dead fish,2023,,finite state automata,implemented,,languages; two-dimensional languages; deadfish derivatives,"><x> (Pronounced ""Dead fish"") is a 2D esolang created by User:None1, it is a cross between Deadfish and ><>, but the i command in ><> is l in ><x>."
Tetrastack,https://esolangs.org/wiki/Tetrastack,,,turing complete; turing tarpits,implemented,stack-based,languages,Tetrastack is a stack-based esoteric programming language. Each stack has its own pop behavior. It's the 1st esolang of TS Series by User:GUAqwq
SubI machine,https://esolangs.org/wiki/SubI machine,2023,,turing complete,implemented,,languages; two-dimensional languages,"SubI machine is an virtual esomachine(can be considered as esolang) created by User:Слон из ЖЕЛЕЗА.
It operates on complex numbers, which are written in base i-1."
Albanian Laundry Machine,https://esolangs.org/wiki/Albanian Laundry Machine,2023,,turing complete,unimplemented,cell-based,languages,Albanian Laundry Machine is a cell-based programming language made in 10 minutes.
8xn,https://esolangs.org/wiki/8xn,2023,,turing complete,,,languages,8xn is an 1-dimensional esoteric programming language created by User:Infinitehexagon. It contains a special type of memory called a sequence.
Bawkbawk,https://esolangs.org/wiki/Bawkbawk,2023,,,implemented; unusable for programming; total,accumulator-based,thematic,"Bawkbawk is a programming language made by User:Lilchiky, and is for chickens. It has 14 commands, which are separated with whitespace."
1,https://esolangs.org/wiki/1,2023,,push-down automata,implemented,stack-based,languages,"1 (a.k.a one) is an esolang by User:None1, it has a stack that contains nonnegative integers of any size."
Gofe,https://esolangs.org/wiki/Gofe,2023,,turing complete,unimplemented,cell-based; stack-based; queue-based; deque-based,languages; golfing language,"Gofe is a golfing language. It is invented by User:None1, but anyone who would like to contribute can contribute it."
Die Deutsche Programmiersprache,https://esolangs.org/wiki/Die Deutsche Programmiersprache,2022,,turing complete,implemented,,joke languages,"Die Deutsche Programmiersprache (DDP, English: The German programming language) is a imperative and modular joke programming language by NotLe0n and bafto, which was designed so that programs written in it read like almost proper German."
Matag,https://esolangs.org/wiki/Matag,2023,,,unimplemented,queue-based; matrix-based,languages,Matag is an esolang which is almost a self-redefining matrix-based tag system. 'Almost' because it doesn't completely fit any of them but at the same time fits all of these descriptors to a certain degree.
+*-,https://esolangs.org/wiki/+*-,2023,,unknown computational class,no io; implemented,,languages,"+*- (say ""add star minus"") is an esolang very close to a Minsky machine, it is created by User:None1."
CharCode,https://esolangs.org/wiki/CharCode,2023,,,implemented; total; unusable for programming,,languages,CharCode is an esoteric programming language written in simple C.
NDBall Extended,https://esolangs.org/wiki/NDBall Extended,,,,,stack-based,languages,"NDBall Extended is an esoteric programming language by User:Xi-816. It is an extended version of NDBall, with more instructions."
Cheat,https://esolangs.org/wiki/Cheat,2023,,turing complete,implemented,,languages; brainfuck derivatives,"Cheat is an esolang by User:None1, it is brainfuck but an empty program is a Hello World program."
Bawkbawk²,https://esolangs.org/wiki/Bawkbawk²,2023,,turing complete,implemented,concurrent programming,,"Bawkbawk² is a variant of Bawkbawk that is much easier to read and looks more ""in the language of the chickens"", but on text. It is made by User:Lilchiky."
SCiPL,https://esolangs.org/wiki/SCiPL,,,turing complete,implemented,,languages; high-level,"The SCi programming language is a high-level, interpreted, dynamically typed programming language created by User:Alx."
Deadfish++,https://esolangs.org/wiki/Deadfish++,2023,,turing complete,,cell-based,languages; deadfish derivatives; high-level,Deadfish++ is an esolang by Europe2048 which focuses on extending Deadfish.
"I fuck, you fuck","https://esolangs.org/wiki/I fuck, you fuck",2023,,turing complete,implemented,,languages,"I fuck, you fuck is a pseudonatural esolang used for insulting others doing Project Euler problems. It is invented by User:None1."
NONE,https://esolangs.org/wiki/NONE,,,,implemented; output only; total; unusable for programming,,,"NONE is an esoteric programming language created in 2023. It can output letters, numbers and special characters and is inspired on other esoteric languages like Brainf*ck."
Genera Tag,https://esolangs.org/wiki/Genera Tag,2023,,turing complete,no io; implemented,queue-based,languages; low-level,"Genera Tag is a generalisation of tag systems and cyclic tag systems that User:ais523 almost discovered in 2018 (Genera Tag is very similar to, but not quite the same as, An Odd Rewriting System), and then subsequently discovered twice in 2023. ais523 thinks that a language that is randomly discovered multiple times is likely to be fairly fundamental, and thus worth documenting."
Grill Tag,https://esolangs.org/wiki/Grill Tag,2019,,turing complete; turing tarpits,no io; implemented,queue-based,languages; low-level; proofs,"Grill Tag is a special case of cyclic tag that User:ais523 originally studied in 2019, but did not prove Turing-complete until 2023."
Undecimal,https://esolangs.org/wiki/Undecimal,2023,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,"Undecimal is a language invented by User:None1 and it is inspired by Duocentehexaquinquagesimal, which is inspired by Golunar, which is inspired by Unary. It is the same as Duocentehexaquinquagesimal, however it is represented in base-11, in which a space represents ten."
Transet,https://esolangs.org/wiki/Transet,,,turing complete; turing tarpits,implemented,,languages,"Transet is a Set Rewriting System. There are no integers or characters in Transet, but only sets. It's the 2nd esolang of TS Series by User:GUAqwq"
SquidScript,https://esolangs.org/wiki/SquidScript,2023,,turing complete,implemented,,languages; thematic,"SquidScript is an esoteric programming language, where each keyword is a sound or noise from the Nintendo game series Splatoon."
Trianguish,https://esolangs.org/wiki/Trianguish,2022,,turing complete,implemented,concurrent programming,languages; two-dimensional languages; low-level,"Trianguish is an esoteric programming language created by Radvylf in 2022. It is almost a cellular automaton, but has additional features such as I/O support and random number generation."
¥́,https://esolangs.org/wiki/¥́,2023,,,unimplemented,,languages,"¥́ is an esolang by User:BoundedBeans intended to achieve a certain visual appearance, and to use a lot of his favorite symbol."
Brainbits,https://esolangs.org/wiki/Brainbits,2023,,,implemented,cell-based,brainfuck derivatives,"Brainbits is a brainfuck derivative created by Yb1 with 2 fewer commands.
Storing data is different, as the cells can only contain 0 and 1."
Xt,https://esolangs.org/wiki/Xt,,,turing complete,,cell-based,languages; low-level; brainfuck derivatives,"Xt is every Brainf**k derivative, on account of its odd syntax.
The name looks a little like ><+, part of the brainf**k syntax."
Jottary,https://esolangs.org/wiki/Jottary,2023,functional paradigm,turing complete; turing tarpits,no io; implemented,,languages; joke languages,"Jottary (pronounced /dʒɑteri/) is a Turing tarpit described as ""an even better Gödel-numbering"" than its sister's Jot ""sister language"" Iota. It is based on combinatory logic. Every combination of 1's is a syntactically valid Jottary program, including the null program."
X strike,https://esolangs.org/wiki/X strike,2023,,turing complete; turing tarpits,implemented,cell-based,languages,X strike is an esolang created by User:Infinitehexagon. It has 4 commands and a keyword used for separating arguments.
Ruck,https://esolangs.org/wiki/Ruck,2023,,turing complete,implemented,,languages; brainfuck derivatives,"Ruck is an esolang invented by User:None1, it has one extra command than Minimized BF: < and its tape has infinite size, making it Turing complete."
Arraything,https://esolangs.org/wiki/Arraything,2023,,,unimplemented,stack-based; cell-based,languages,"Arraything is a programming language created while in class. It uses punctuation symbols, and brackets to program."
Chefs Kiss,https://esolangs.org/wiki/Chefs Kiss,2023,,,unusable for programming; total; output only,,languages; joke languages; low-level,"Basically just +-= but with emojis, and ASCII"
?,https://esolangs.org/wiki/?,,,,implemented; total,,languages,"This wiki is dedicated to the fostering and documentation of programming languages designed to be unique, difficult to program in, or just plain weird."
Stack-based,https://esolangs.org/wiki/Stack-based,2023,,push-down automata; turing complete,implemented,stack-based|stack-based; stack-based,languages,Stack-based is a stack-based esolang invented by User:None1.
Imperator,https://esolangs.org/wiki/Imperator,2023,,turing complete,implemented,,,Imperator is an 80s-like programming language created in 2023. It was influenced by programming languages like BASIC.
Oak,https://esolangs.org/wiki/Oak,2023,,turing complete,implemented,,high-level,"Oak is a low-level translated/compiled programming language with compile-time syntax modification. This means that Oak gives you the tools to modify the way it operates. Oak relies on the symbol-transformation language Sapling. It has modern generic and package-management sybsystems, and supports the creation of dialects, or syntactically differing branches of the main language. Non-dialectical Oak code is referred to as canonical and uses the '.oak' file extension."
Odasjoi,https://esolangs.org/wiki/Odasjoi,2023,,,unusable for programming; implemented,,languages,"Odasjoi (/əʊˈdæsdʒɔɪ/) is an esolang invented by User:None1. Its name is chosen by smashing random keys, its commands are, too."
Directional,https://esolangs.org/wiki/Directional,,,turing complete,,,languages,"Directional is an esolang invented by User:None1 and inspired by TinyBF, it is actually a 2D version of TinyBF."
AWA5.0,https://esolangs.org/wiki/AWA5.0,,,,implemented,,languages; thematic,"AWA5.0 is a bubble-based esoteric programming language themed after famous Phase Connect vtuber Jelly Hoshiumi. Temp-Tempai, the hardworking and heartbreakingly handsome creator, got inspired after watching her Shenzhen I/O stream. The purpose of the language is to allow Jelly to write programs in her native language (ex. ""Awa awawa awawawa awa awa awawawa awawawawawawa...."")"
UndeadFish,https://esolangs.org/wiki/UndeadFish,,,,,,languages; joke languages,"UndeadFish is a Deadfish derivative, it is the same as Deadfish, but the commands are different:"
Punktuation,https://esolangs.org/wiki/Punktuation,2023,,,,stack-based,languages; two-dimensional languages,"Punktuation is a 2d programming language, that uses every punctuation symbol. The logo is the shortest program"
A-SCP-M,https://esolangs.org/wiki/A-SCP-M,2023,,,unimplemented,stack-based,languages; joke_languages,"A-SCP-M is an assembly language in the same vein as the SCP project. As a result, it must be contained to being an esoteric joke language, and must not under any circumstances actually be implemented or used. If you feel the vague urge to implement it, or you see that it has been implemented, please ensure that you add additional instructions or components to this page instead, preventing the language from being fully implemented."
CFuck,https://esolangs.org/wiki/CFuck,,,,,queue-based,languages; brainfuck derivatives,"CFuck is, like its name, a C extension to brainfuck. It is invented by User:None1."
Blue Hens,https://esolangs.org/wiki/Blue Hens,2023,,finite state automata,output only; implemented; total,,languages,"Blue Hens is an interpreted programming language by User:ProfNinja designed for a CTF competition, inspired by Chicken."
GangLang,https://esolangs.org/wiki/GangLang,,,,implemented,,languages; thematic,"GangLang is an esoteric programming language by Wonkanese, is a simple programming language in which the keywords are gang terms or gang related."
Pepp*erdine,https://esolangs.org/wiki/Pepp*erdine,2023,,turing complete,implemented,stack-based,languages,"Pepp*erdine is an esoteric programming language by Brody Maddox, based off of Chicken by Torbjörn Söderstedt, in which ""pep"", ""erdine"" and concatenations of 'p' are the only valid symbols."
!English,https://esolangs.org/wiki/!English,2023; 2024,,,unimplemented,,languages; high-level,"!English is a esolang made by Mihai Popa. It uses the English syntax, so any English person will understand it."
^,https://esolangs.org/wiki/^,2023,,,no io,,languages,^ is an esolang by User:None1. It is the smallest esolang that is impossible to solve the halting problem.
Pep & Chz,https://esolangs.org/wiki/Pep & Chz,,,turing complete; turing tarpits,,cell-based,languages; brainfuck equivalents; brainfuck derivatives; low-level; thematic,Pep & Chz is a brainflakes version that includes the names of my stuffed penguins
Squarebrain,https://esolangs.org/wiki/Squarebrain,,,,,graphical output,languages,"Squarebrain is a language I created after reading a book about learning coding, for children, for some reason I created this."
Output,https://esolangs.org/wiki/Output,2023,,,total; unusable for programming; implemented,,languages,Output is an esolang invented by User:None1.
TypeString,https://esolangs.org/wiki/TypeString,2023,,turing complete,implemented,,,"TypeString(or T~ in short) is a Turing complete esolang based on String Concating and String Pointer.
It's the 3rd esolang of TS Series by User:GUAqwq"
EncryptedFuck,https://esolangs.org/wiki/EncryptedFuck,,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,EncryptedFuck is an esolang invented by User:None1. It is inspired by how the notepad sometimes confuses an ASCII file into a UTF-16 file.
Golfed!,https://esolangs.org/wiki/Golfed!,2023,,,unimplemented,,languages; golfing language,"Golfed! is a esolang created by Mihai Popa. It's designed for code golfers, as it has many commands."
When The,https://esolangs.org/wiki/When The,,,,,,languages,When The is a programming language. The number thing was kinda inspired by Emmental
Assembly,https://esolangs.org/wiki/Assembly,2023,,,unimplemented,,languages; low-level,"Assembly is a esolang created by Mihai Popa (and arranged by Steve Abel). It is low-level, like real assembly languages. The instructions are:"
A very minimal esolang with a very few amount of instructions,https://esolangs.org/wiki/A very minimal esolang with a very few amount of instructions,,,,unimplemented,stack-based; cell-based; multi-dimensional languages,languages; golfing language,A very minimal esolang with a very few amount of instructions is a very minimal esolang with a very few amount of instructions.
OCPL,https://esolangs.org/wiki/OCPL,2023,,,,,languages; meta-languages,"OCPL /ˈɔkpʌl/ or One Character Programming Language is a family of programming languages. In every language, only one character is used."
Numberfuck,https://esolangs.org/wiki/Numberfuck,2023,,turing tarpits; turing complete,implemented,cell-based,languages; low-level; brainfuck equivalents; brainfuck derivatives,"Numberfuck is a esolang made by Mihai Popa. It's Brainfuck, but you only use numbers instead of symbols to make programs."
UTC+8,https://esolangs.org/wiki/UTC+8,2023,,,,,languages; cjk,"UTC+8 is a Pseudonatural, CJK esolang invented by User:None1. It's name comes from the timezone used by China (UTC+8)."
Rational,https://esolangs.org/wiki/Rational,2023,functional paradigm,turing complete,implemented,,languages,"Rational is a Turing-complete Programming Language based on Rational numbers designed by User:Cel7t.
A program in Rational is just a single Rational number, represented in Hexadecimal for convenience.
A transpiler to Unlambda can be found here: [1]"
Orbit virtual machine,https://esolangs.org/wiki/Orbit virtual machine,,,,,cell-based,languages; icfp contest,The Orbit virtual machine or Orbit VM is an esoteric programming language used in the ICFP 2009 programming contest.
IDKHIW,https://esolangs.org/wiki/IDKHIW,,,,,,languages,This is programming language made by R0fael
LibFuck,https://esolangs.org/wiki/LibFuck,,,,,,languages; joke languages; brainfuck derivatives,"LibFuck is an esolang invented by User:None1, inspired by VerboseFuck."
Stack-based+,https://esolangs.org/wiki/Stack-based+,2023,,turing complete,unimplemented,stack-based,languages,"Stack-based+ is a derivative of Stack-based, its goal is to make progrmming in Stack-based easier."
LstackG+,https://esolangs.org/wiki/LstackG+,2023,,push-down automata,implemented,stack-based,brainfuck derivatives; languages,<stack>+ is a derivative of <stack> by the same author: User:None1.
Funky,https://esolangs.org/wiki/Funky,,,,implemented,,languages,"Funky, a function-based language! It is an esolang where you can't do anything other than creating and executing functions (but I guess you can because its Javascript). The syntax is completely just Node.js's syntax (mainly because I am very lazy)."
Right,https://esolangs.org/wiki/Right,2023,,,unimplemented,queue-based,languages; two-dimensional languages,"Right is a fungeoid created by User:D in 2023. The IP cannot do much in the codespace, except for (as the name suggests) some very basic operations."
DoWhileFuck,https://esolangs.org/wiki/DoWhileFuck,2023,,,unimplemented,,languages; joke languages; brainfuck derivatives,"DoWhileFuck is an esolang invented by User:None1, inspired by brainfuck, it is actually brainfuck with do-while loops instead of while loops."
Meow (None1),https://esolangs.org/wiki/Meow (None1),2022,,turing complete,implemented,,languages; high-level,"Meow is the one and only pre-2023 esolang invented by User:None1 and developed in 7 months. The author's aim was not to write an esolang but a normal language, but it has been more and more esoteric that it became an esolang."
Incrementing machine,https://esolangs.org/wiki/Incrementing machine,,,turing complete; turing tarpits,implemented,,languages,"Incrementing machine is a variation of Minsky machine discovered by User:ChuckEsoteric08. Unlike any other counter machines it can only increment registers, but not decrementing or setting them to 0. It was discovered while author was working on Turing-completness proof for AddJump"
Hárdfish,https://esolangs.org/wiki/Hárdfish,2023,,,implemented; output only,,languages; deadfish derivatives,"Hárdfish is an esolang invented by User:None1, inspired by Hardfish."
Easyfish,https://esolangs.org/wiki/Easyfish,2023,,,unimplemented; output only; total,,languages,"Easyfish is an esolang invented by User:None1, inspired by Hardfish. Unlike its name, it it hard to use, just like Hardfish."
Saturnus,https://esolangs.org/wiki/Saturnus,,,,implemented,,languages; high-level,"Saturnus, while technically not an esolang, is a programming language that aims to have a simplified mix of Rust programming language and Lua."
Wiwa,https://esolangs.org/wiki/Wiwa,,,,implemented,stack-based,languages,"Wiwa is a stack-based, array-oriented esolang inspired by Uiua and BQN."
JamogusLamogusAmogus,https://esolangs.org/wiki/JamogusLamogusAmogus,,,,implemented,,languages; thematic; joke languages,"JamogusLamogusAmogus (refer to it as ""Jlamogus"" in formal situations) is a very ""sussy"" esoteric interpreted programming language made in python.
JamogusLamogusAmogus uses the incredibly unique file extension of ""ඞ""."
English+,https://esolangs.org/wiki/English+,2023,,turing complete,unimplemented,,languages; joke languages; high-level,English+ is an unreleased esolang designed by user:Redisnotblue
Dat is Dis,https://esolangs.org/wiki/Dat is Dis,,,unknown computational class,unimplemented,,languages,Dat is Dis (DiD)- is a version of Dis created by User:ChuckEsoteric08 which has infinite memory.
Quell,https://esolangs.org/wiki/Quell,,,,unimplemented,cell-based,languages,Quell (Queue call) - is an esolang by User:ChuckEsoteric08. It was created  as a compilation target for high-level languages which use Call Queue that could be compiled into Sque bytecode
Sound,https://esolangs.org/wiki/Sound,2023,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents,"Sound is a esolang made by Mihai Popa. You only use notes as programs, similar to Look!. But I changed the notes…"
+/-,https://esolangs.org/wiki/+/-,2023,,,unimplemented,concurrent programming,languages,+/- or IPD is a multi-threaded esoteric programming language created by User:.yazic in 2023 as an extension to +-.
\\\,https://esolangs.org/wiki/\\\,2023,,,unimplemented,,languages,"\\\ or Backslashes, is a minimalist esoteric programming language created by User:.yazic in 2023, and was inspired by /// and  Thue."
AGG,https://esolangs.org/wiki/AGG,2023,,,implemented,stack-based,languages; thematic,"AGG, (pronounced ""AAUUGHH!!!!"") is a programming language created by mmph that is meant to work like a DNA Strand, except that the codons' real purpose mean nothing in this context and only their abbreviations do."
Ribosome,https://esolangs.org/wiki/Ribosome,,,,,concurrent programming; cell-based,languages; low-level,Ribosome is a low-level concurrent esoteric programming language created by User:.yazic
BracketOnly,https://esolangs.org/wiki/BracketOnly,,functional paradigm,,,cell-based,languages,"BracketOnly is an esolang invented by User:None1, it is no longer a work in progress. It uses only two characters: Brackets! (()). Thus the name."
Rrr,https://esolangs.org/wiki/Rrr,2023,,turing complete,implemented,cell-based,languages,Rrr is a simple Turing-complete language for programming Turing machines equipped with an unbounded tape using only a binary alphabet consisting of symbols R and r. Other symbols are ignored.
Cheesecake,https://esolangs.org/wiki/Cheesecake,,,,implemented,stack-based,languages; thematic,"Cheesecake is a silly esolang that User:Nebular created in a few hours.
It is very simple and only contains 'cheese' and 'cake' (also 'cheesecake' BUT IT'S A COMBINATION OF CHEESE AND CAKE!!!)."
Next,https://esolangs.org/wiki/Next,2023,functional paradigm,turing complete,implemented,,languages,Next is an esolang invented by User:Hakerh400 in 2023.
Unary Stack,https://esolangs.org/wiki/Unary Stack,,,push-down automata,unimplemented,,languages; low-level,Unary Stack is a attempt at creating syntax for 1-symbol Push-down automaton by User:ChuckEsoteric08
Chickenfoot,https://esolangs.org/wiki/Chickenfoot,2023,,turing complete,no io; implemented,cell-based,languages; two-dimensional languages,"Chickenfoot is a two-dimensional programming language inspired by a chicken tap dance with dominos, where the chaotic rhythms of the moonlit barnyard translate into code and feathers."
FunctionaI,https://esolangs.org/wiki/FunctionaI,2023,functional paradigm,turing complete; turing tarpits,unimplemented,cell-based,languages,functional (with a capital I) is an esolang made by kiken that uses nameless functions. The capital i may look like a lowercase L in sans-serif fonts.
IncCa,https://esolangs.org/wiki/IncCa,,,bounded-storage machine,unimplemented,,languages,IncCa (Increment and jump if Carry)- is an OISC by User:ChuckEsoteric08 that is easy to implement
BallisticScript,https://esolangs.org/wiki/BallisticScript,2023,,,implemented,,languages; thematic,BallisticScript is a language created by MelonMars that is based on using a cannon to fire at the memory field to influence it.
Never Gonna Fuck You Up,https://esolangs.org/wiki/Never Gonna Fuck You Up,2023,,turing complete,implemented,,languages; thematic; brainfuck equivalents,Never Gonna Fuck You Up is a brainfuck equivalent by User:None1 based on Never Gonna Give You Up.
Informal,https://esolangs.org/wiki/Informal,2023,,unknown computational class,unimplemented,,languages,"Informal is a pseudo-natural language that uses informal English as an attempt to make an esoteric language, created by kiken."
Hexssembly,https://esolangs.org/wiki/Hexssembly,2023,,,unimplemented,,languages; low-level,Hexssembly is an esolang designed by User:Infinitehexagon to mimic assembly language.
Reference,https://esolangs.org/wiki/Reference,2023,,,output only; total,,languages,"Reference is an esolang invented by User:None1 that can read its source code, but not modify it."
PushDupAddSub,https://esolangs.org/wiki/PushDupAddSub,2023,,turing complete; turing tarpits,implemented,stack-based,languages,PushDupAddSub (PDAS) is an esolang by User:ChuckEsoteric08 inspired by Volatile.
D--,https://esolangs.org/wiki/D--,,,,implemented,,languages,D-- is a cool language so someone make minecraft in it.
SpoilerFuck,https://esolangs.org/wiki/SpoilerFuck,2023,,turing complete,,,languages; brainfuck derivatives; brainfuck equivalents,Fuck is an esolang invented by User:None1 which is a way of displaying brainfuck code with spoilers.
Op,https://esolangs.org/wiki/Op,2023,,,total,,languages; low-level,"Op is an esolang invented by User:None1, it is a shorter version of Output."
Comun,https://esolangs.org/wiki/Comun,2022,,,implemented,stack-based,languages,"Comun is a stack-based imperative toy language created by drummyfish. The author was inspired by Forth and describes the language as ""something in between Brainfuck and C"" that will hopefully be actually usable. The language became self-hosted in March 2024."
Sōap,https://esolangs.org/wiki/Sōap,2023,,turing complete,unimplemented,,thematic|thematic; languages,"Sōap (pronounced /soʊp/) or sooap is a  esoteric language made by kiken. It is based around the text at the back of the container of the liquid soaps. (yes, I made many trips to the bathroom to see my soap for this)"
TypeInt,https://esolangs.org/wiki/TypeInt,2023,,turing complete,implemented,,languages; low-level,TypeInt is a esolang which is created by User:GUAqwq. The program runs on an unbounded integer type array which is unbounded. It came out while User:GUAqwq was proving the turing completeness of TypeString:
FXYT,https://esolangs.org/wiki/FXYT,2023,,,implemented; total,graphical_output; stack-based,languages,"FXYT is a stack-based, postfix, canvas colouring language. It contains 36 commands, each represented by a single character.  FXYT code is written as a string of FXYT commands next to each other which operate on the data stack.  The output is displayed on a 256x256 graphical canvas.  The code is evaluated for each of the 65536 cells of the canvas and the result left on the stack at the end of each evaluation determines the colour of each cell."
Binary-encoded Minsky machine,https://esolangs.org/wiki/Binary-encoded Minsky machine,,,turing complete; turing tarpits,unimplemented,,languages; low-level,Binary-encoded Minsky machine (BMM) is a version of Minsky machine by User:ChuckEsoteric08
1Fish,https://esolangs.org/wiki/1Fish,,,,,stack-based,languages,"1><> (pronounced as ""one fish"") is a stack-based programming language based on Fish."
BARREN,https://esolangs.org/wiki/BARREN,2023,,,usability_unknown,cell-based,languages,BARREN is a small output-only imperative language. Most of its specifications came from a hypnopompic state.
HZCode,https://esolangs.org/wiki/HZCode,2023,,,implemented,queue-based; stack-based; concurrent programming,languages; cjk; two-dimensional languages,"HZCode or HZC is perhaps the first 2-Dimensional esolang based on Chinese characters. It is invented by User:None1. It is inspired by Aheui, and derives a lot of commands from Befunge. Like Aheui, it doesn't have self-modifying."
Simplify,https://esolangs.org/wiki/Simplify,,,turing complete,,,languages; high-level,"Simplify(Also can be called as simp, just because it's funny) is an interpreted esolang made by User: Justaweirdodev, written entirely in Python.  Simplify essentially simplifies common functions and methods to one char only, including the \n char, that was replaced by the space char, mainly to be able to write everything in just one line, another proposal of the language."
JSONseq,https://esolangs.org/wiki/JSONseq,,,,implemented,,languages,"JSONseq, a JSON based language! It is made with Node.js. And this is an esolang where .json or JavaScript Object Notation files (not .jsonc files) are code instead of data (yay)!"
ASCIIfuck,https://esolangs.org/wiki/ASCIIfuck,,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck equivalents; brainfuck derivatives; low-level,ASCIIfuck is a variation of brainfuck by User:ChuckEsoteric08 which uses ASCII values of a characters.
Mazefuck,https://esolangs.org/wiki/Mazefuck,,,finite state automata,implemented,cell-based,languages; two-dimensional languages; brainfuck derivatives,GitHub
Haxell,https://esolangs.org/wiki/Haxell,2024,functional paradigm,turing complete,implemented,,languages,Haxell is an esolang invented by User:Hakerh400 in 2024.
VenetianScript,https://esolangs.org/wiki/VenetianScript,2024,,turing complete,unimplemented,,,"VenetianScript or VS for short, is a music-based esolang created by PoptartPlungerBoi in 2024. The esolang uses MIDI drums as code."
横,https://esolangs.org/wiki/横,2024,,unknown computational class,,,languages; thematic; two-dimensional languages,横 (Chinese for horizontal) is a two-dimensional esoteric programming language made by User:kiken. It is based on so-called 'generic platformers' that are usually seen on Scratch.
SAS,https://esolangs.org/wiki/SAS,2024,,,implemented,,languages,"SAS /sæs/ or Simple Assembly is an assembly language invented by User:None1 to be easy to implement and compile to another language, it is possible to write a C compiler to it."
Quinary Bueue,https://esolangs.org/wiki/Quinary Bueue,,,turing complete; turing tarpits,no io; unimplemented,queue-based,languages,Quinary Bueue is an esolang by User:ChuckEsoteric08.
Two variable language,https://esolangs.org/wiki/Two variable language,,,turing complete; turing tarpits,unimplemented,,languages,Two variable language is an esolang by User:ChuckEsoteric08 based on B2C.
SHITS,https://esolangs.org/wiki/SHITS,,,turing complete; turing tarpits,implemented,cell-based,languages,SHITS (Simple language witH bITS) is an esolang by User:ChuckEsoteric08 based on brainfuck minimalisations which uses binary tape.
Excellang,https://esolangs.org/wiki/Excellang,2024,,,,,languages,"Excellang /'eksəlæŋ/ is an esolang invented by User:None1, that uses .xlsx, .xls or .csv tables as programs. A while after creating, the author thought this was a pretty stupid idea, but he still continued it."
DAEANAAACP,https://esolangs.org/wiki/DAEANAAACP,2024,,,,,languages,"DAEANAAACP, short for Definitely An Esolang And Not An Arts And Crafts Project is an esolang created by User:PoptartPlungerBoi in 2024. The esolang uses paper and art materials to write code."
Cool And Rad,https://esolangs.org/wiki/Cool And Rad,2024,,,,,languages,Cool And Rad is an esolang created by PoptartPlungerBoi  in 2024.
RegRep,https://esolangs.org/wiki/RegRep,2024,,,implemented,,languages,RegRep is a language that can be compiled down entirely to JavaScript replaceAlls or sed expressions.
Pico,https://esolangs.org/wiki/Pico,2020,,turing complete,,,languages; brainfuck derivatives,"Pico is a two symbol language by User:Salpynx inspired by Picofuck, BF instruction minimalization, and the concept of Simple translation. It is meant to simulate bf and a range of bf-like languages, with only two symbols."
The Rink of Insanity,https://esolangs.org/wiki/The Rink of Insanity,2023,,finite state automata,unimplemented,concurrent programming,two-dimensional languages; languages; thematic,"The Rink of Insanity is a skating-themed 2d esolang designed by User:BoundedBeans. Rather than describing the control flow directly, it outlines a path for skaters to follow to perform the instruction."
Train,https://esolangs.org/wiki/Train,2024,,unknown computational class,unimplemented,,languages; two-dimensional languages; thematic,Train is a two-dimensional esoteric programming language created by User:kiken.
/path,https://esolangs.org/wiki//path,2024,,unknown computational class,implemented,stack-based,languages,"/path (or: slash-path) is a minimalistic, filename-based language, created by User:Nazalassa in 2024, in which the program is contained not in the file, but in the file path, effectively wasting no disk space."
OutputF,https://esolangs.org/wiki/OutputF,2024,,turing complete,,,languages; brainfuck derivatives,OutputF is an esolang invented by User:None1. It is a superset of Output.
Opf,https://esolangs.org/wiki/Opf,2024,,turing complete,,,languages,Opf is an esolang invented by User:None1. It is a superset of Op. It is also a shorter version of OutputF.
Reset,https://esolangs.org/wiki/Reset,,,,unusable for programming,,languages,Reset is an esolang that is based entirely off of a dream User:Infinitehexagon had about a viral programming language on the internet. This esolang is heavily inspired off of ΙΧΘΥΣ.
Braindrunk,https://esolangs.org/wiki/Braindrunk,2024,,,implemented; unusable for programming,,languages,"Braindrunk is an esolang invented by User:None1, inspired by Entropy and brainfuck. It is like brainfuck, except the cell at the pointer is slightly modified after an instruction. It is named Braindrunk because its behavior seems drunken."
Freestajlo,https://esolangs.org/wiki/Freestajlo,2024,,turing complete,unimplemented,stack-based,languages,"Freestajlo is a Turing-complete programming language made by User:LEOMOK. Its name comes from https://www.youtube.com/watch?v=EygTFFhVBf8, which is the first video uploaded by the music YouTuber Waterflame. It is inspired by other stack-based programming languages like FALSE. Whitespace is a nop and allowed anywhere."
UCHSHOPPLWANPAATILIA,https://esolangs.org/wiki/UCHSHOPPLWANPAATILIA,,,turing complete,implemented,,languages,UCHSHOPPLWANPAATILIA is a language by User:Nomad.
Brainf ck,https://esolangs.org/wiki/Brainf ck,2024,,unknown computational class,implemented,stack-based,languages; brainfuck derivatives,"Brainf*ck is an esolang invented by User:None1. Its goal is to be an esolang that is named brainf*ck but different from brainfuck. Its programs look like brainfuck programs, but they're not."
WIWH,https://esolangs.org/wiki/WIWH,2023,,turing complete,unimplemented,cell-based,languages; thematic,"WIWH (which stands for Wishing I Were Home, a song by the musician Todd Edwards, famous for having large amounts of tiny samples in his songs) is an esoteric programming language created in 2023 by User:BoundedBeans in which code is disguised as a sample find video."
Ueck,https://esolangs.org/wiki/Ueck,2023,,,unimplemented,,languages,Ueck is an expression-based esolang by User:BoundedBeans.
SpinGate,https://esolangs.org/wiki/SpinGate,,,finite state automata,implemented; no io,cell-based,languages,
ThreadFuck,https://esolangs.org/wiki/ThreadFuck,2024,,turing complete,implemented,concurrent programming,languages; brainfuck derivatives,"ThreadFuck is an esolang invented by User:None1, inspired by Bukkake and Brainfuck."
Tesseract,https://esolangs.org/wiki/Tesseract,2024,,,implemented; total,stack-based,two-dimensional languages,"Tesseract is an esoteric programming language designed to run code on a 4D hypercube. Inspired by Ethan Muchnik's Cube: https://github.com/EthanMuchnik/Cube-Language-Interpreter. Tesseract can run its own file type '.tes', as well as Cube's '.cube' & '.dewy' natively by converting a Cube file into a tesseract."
HashedPoem,https://esolangs.org/wiki/HashedPoem,2024,,turing complete,implemented,cell-based,languages,"HashedPoem is an esolang invented by User:None1, inspired by the hash function. Something interesting is that this esolang is the 24th esolang invented in the year 2024 (on this wiki)."
Reprog,https://esolangs.org/wiki/Reprog,2024,,turing complete,unimplemented,,,Reprog is an esoteric programming language. It was originally intended as a language where you can use different representations of numbers.
Minicode,https://esolangs.org/wiki/Minicode,2024,,turing complete,implemented,,languages,"Minicode language, written by User:LeonovK 19.01.2024.
Minicode executes the code line by line, first compiling it into a certain set of commands. Which makes it a classic interpreted programming language. Each line of code in minicode begins with a command, followed by an expression."
Operation,https://esolangs.org/wiki/Operation,2024,,push-down automata,implemented,stack-based,languages; thematic,"Operation is an esoteric programming language that relies on folder metadata, created by kiken."
Random-ass Turing Complete Language,https://esolangs.org/wiki/Random-ass Turing Complete Language,,,,,stack-based,languages,"You can abbreviate the title to Ratcl if the title is too long. Also, the title is always capitalized like that."
SwitchCase,https://esolangs.org/wiki/SwitchCase,2024,,turing complete,unimplemented,,languages,SwitchCase is an esolang invented by User:None1.
+-),https://esolangs.org/wiki/+-),2024,,turing complete; turing tarpits,no io; implemented,,languages,+-) is a minimalistic esolang invented by User:None1 and inspired by brainfuck.
Shitlang,https://esolangs.org/wiki/Shitlang,2024,,,,,languages,Shitlang is a language created by Simyon the 19th Jan 2024 and the 24th Jan 2024. It is currently on version 2.3.x but continues to be developed. A syntax highlighter for VSC has been developed by Fiiral during that same time and is highly recommended for programming in Shitlang.
TripletNOR,https://esolangs.org/wiki/TripletNOR,,,,,,languages,"This is an esolang created by User:ZCX islptng.
Inspired by the game Turing Complete.
It let us make computers only with NAND at first.
According to De Morgan's laws, we can start with NOR, too."
Bracket,https://esolangs.org/wiki/Bracket,2024,,,,,languages,Bracket is a programming language that only uses brackets
BrainTravel,https://esolangs.org/wiki/BrainTravel,,,,,cell-based,brainfuck derivatives; languages,BrainTravel is basically Brainfuck but with alternate dimensions and time travel. Created by User:AnotherUser05.
○,https://esolangs.org/wiki/○,,,,total; unusable for programming; output only; unimplemented,,languages,"○ (or circle) is an esolang that only accepts the characters ○, ◯, and °. Created by User:AnotherUser05."
SemiScript,https://esolangs.org/wiki/SemiScript,,,turing complete,implemented,,languages,SemiScript is an esolang using 4 different characters:
Ice box,https://esolangs.org/wiki/Ice box,,,,,concurrent programming,languages; two-dimensional languages; thematic,"Ice box is a 2D esolang (like Befunge) created by User:AnotherUser05, where instead of a cursor, there are ice boxes going around the code."
Spam,https://esolangs.org/wiki/Spam,2024,,unknown computational class,unimplemented,,languages,Spam is an esolang invented by User:None1. Its programs are to imitate a kind of spam in text massages that wastes time for people who see it by letting you eyes move between lines and ending up saying that you are fooled.
ObjLang,https://esolangs.org/wiki/ObjLang,2024,functional paradigm,turing complete,implemented,binary,languages; high-level,"ObjLang is an esolang invented by User:None1, its programs are marshalled Python nested lists and dictionaries."
HuePrism,https://esolangs.org/wiki/HuePrism,2024,,turing complete,implemented,,languages; two-dimensional languages,HuePrism is an Art-Based 2D esolang by User:Restruct.
Two-instruction madness! (fr this time),https://esolangs.org/wiki/Two-instruction madness! (fr this time),,,turing complete; turing tarpits,,cell-based,languages,Two instruction madness! (fr this time) is my first esolang after my hiatus from esolanging for a long time.
200,https://esolangs.org/wiki/200,2024,,turing complete,unimplemented,,languages; brainfuck equivalents,"200 is an esolang invented by User:None1. It is his 200th esolang, and it is again, like his 100th esolang 100BF, a brainfuck equivalent."
Flobnar,https://esolangs.org/wiki/Flobnar,2011,functional paradigm,turing complete,implemented,,languages; two-dimensional languages,"Flobnar is a two-dimensional functional language, designed by Chris Pressey in 2011
as a sort of functional-programming counterpart to Befunge, on the occasion of its 18th birthday."
Larabee,https://esolangs.org/wiki/Larabee,2008,,turing complete,implemented,,languages,"Larabee is an assembly-like programming language designed by Chris Pressey in 2008
that borrows the notion of branch prediction from computer architecture:
whenever a branch instruction is executed, the branch that is taken
is determined partly by the history of previous branches.  However, in Larabee this is not
just an optimization: the branching history actually affects the control flow in the program."
'N-DCNC,https://esolangs.org/wiki/'N-DCNC,2000,,,implemented,,languages,"'N-DCNC was an esoteric programming language designed by
Chris Pressey in 2000 and submitted to the 2001 Esoteric Awards."
Mox,https://esolangs.org/wiki/Mox,2024,,turing complete,,cell-based,languages,Mox is another cell-based esolang by User:Infinitehexagon with a short amount of instructions. Mox is made out of the letters in ther title plus a few extra instructions too. Mox is also a derivative of X strike.
Unlike,https://esolangs.org/wiki/Unlike,2024,,turing complete,,,languages; brainfuck derivatives; two-dimensional languages,"Unlike is an esolang invented by User:None1, inspired by Brainfuck, Befunge-93 and Deadfish. It is named Unlike because it has something similar to the three esolangs."
Broccosprout,https://esolangs.org/wiki/Broccosprout,2022,,turing complete,,cell-based,languages; brainfuck equivalents; thematic,"Broccosprout was User:BoundedBeans first ever true esolang. (Well, I made esolangs before then, but their specifications were not well-defined, and like this one, they were all thematic). It is a Trivial brainfuck substitution. The latest (and only) surviving specification (which according to the Date Modified column in File Explorer was last edited on January 30, 2022 at 7:05 PM) is preserved below. Note that neither the Hello World program nor the Cat program actually works since they are missing some dollar signs, but it might give you an idea of what programs look like."
Logimat,https://esolangs.org/wiki/Logimat,2021,,,implemented,,languages; high-level,"Logimat is an esoteric programming language created by User:Uellenberg which allows compiling code similar to conventional programming languages into math functions and expressions (such that they can be evaluated by a scientific calculator). Its output is in the form of LaTeX, and it supports compiling to format uses by the Desmos graphing calculator. Logimat's syntax is inspired by TypeScript and Rust. Files containing Logimat code end with the extension `.lm`."
Reso,https://esolangs.org/wiki/Reso,2024; 2018,,turing complete; turing complete,implemented,cell-based,languages; two-dimensional languages; low-level; stubs,
Recorder,https://esolangs.org/wiki/Recorder,,,,,,languages,Recorder is a programming language i made that uses extraction
SymbolLang,https://esolangs.org/wiki/SymbolLang,,,,,,languages,SymbolLang uses symbols to represent functions
-C++,https://esolangs.org/wiki/-C++,2024,,turing complete,,,languages; high-level,-C++ (say minus C plus plus) is an esoteric subset of C++ that forces programmers to abuse with overload operators and macros. It is invented by User:None1.
Ascenic,https://esolangs.org/wiki/Ascenic,2024,,turing complete,unimplemented,stack-based,languages,Ascenic is an esolang invented by User:None1. Its name is a combination of ascend and arsenic. Its name is pronounced /əˈsɛnɪk/.
Change,https://esolangs.org/wiki/Change,,,,,,languages,Change is a substitution based programming language and can be translated to lambda calculus
Config+,https://esolangs.org/wiki/Config+,,,,,,languages,"Config+ is an esoteric programming language built inside of the game Portal 2 using the custom plugin SourceAutoRecord as a base. SourceAutoRecord (also known as SAR) is a plugin mainly built for speedrunners to have some quality-of-life features in-game, including an in-game timer, reduced loading times, and configurable text HUDS, among other things. Inside of SAR is also Config+, a feature built mainly to expand on Portal 2's developer console, introducing variables, functions, and more."
DotNetOISC,https://esolangs.org/wiki/DotNetOISC,2024,,turing complete,unimplemented,,languages,DotNetOISC is an OISC-like esolang by User:BoundedBeans based off of the dotnet executable.
Circle of Life,https://esolangs.org/wiki/Circle of Life,2024,,,unimplemented,,languages,"Each Circle of Life program starts with a base operator named ""Adam"" which the user may use to build the rest of the program."
FatFinger,https://esolangs.org/wiki/FatFinger,2017,,,implemented,,languages,FatFinger is a dialect of JavaScript by User:Rottytooth that expands the language to allow typos and misspellings as valid code. Any signifier not recognized by the JS interpreter is replaced with the closest keyword or name in number of keystrokes difference.
Brainfuck+,https://esolangs.org/wiki/Brainfuck+,2024,,turing complete,implemented,cell-based,languages; brainfuck derivatives,"Brainfuck+ is an improved version of brainfuck invented by User:None1. Unlike brainfuck, the name Brainfuck+ should always be capitalized no matter its position in a sentence."
Spin4,https://esolangs.org/wiki/Spin4,2022,,turing complete,implemented,stack-based,,"spin4 is an esoteric programming language created by Michael that uses 4D rotations for computations.
spin4's main philosophy is to write programs by rotating the 4D space which encodes a state, this state is then used to increment or decrement an accumulator vector. The accumulator components can then be put on the stack, the later can also be rotated in one direction."
Mel,https://esolangs.org/wiki/Mel,2024,,turing complete,implemented; no io,,languages,Mel (Minsky machine equivalent language) is an esolang invented by User:None1.
Whendo,https://esolangs.org/wiki/Whendo,2024,,unknown computational class,unimplemented,,languages,"Whendo is an esolang invented by User:None1, inspired by Thue and 开？关！. It is very similar to Thue, but uses numbers instead of strings."
Olympus,https://esolangs.org/wiki/Olympus,2022,,,implemented,,languages,"In Olympus, we code in incantations to the gods -- it better reflects the actual power dynamic of programmer and machine. In this language, the virtual machine is Olympus itself. Instead of registers, we have a set of gods, each of which will do specific things for us if we ask them in the right way."
Cree,https://esolangs.org/wiki/Cree,,,turing complete,,,languages; thematic,"Cree# is a C#-like imperative language by Jon Corbett, which allows programming in Cree keywords using Cree concepts and metaphors. In addition to this language, Corbett's PhD research has led to his Indigenous Coding Framework, a work-in-progress that will help other Indigenous communities bring to computation not only their languages but their cultural logic and values."
Expansion,https://esolangs.org/wiki/Expansion,2024,,,output only; implemented,,languages,Expansion is an esolang invented by User:None1.
Bouncy,https://esolangs.org/wiki/Bouncy,2024,,,implemented,,languages; two-dimensional languages,Bouncy is a 2D esoteric programming language centered around controlling how the instruction pointer interacts with walls. The Bouncy programming language and its official interpreter are designed by User:Mercerenies.
¿,https://esolangs.org/wiki/¿,2024,,turing complete,implemented,binary,languages; brainfuck equivalents,¿ (U+00BF) is a brainfuck equivalent by User:None1.
Drive-In Window TC,https://esolangs.org/wiki/Drive-In Window TC,2023,,turing complete,implemented,stack-based,languages; thematic,"Drive-In Window TC is an esolang by User:BoundedBeans. It is based on Drive-In Window, but Turing-complete."
0bIN,https://esolangs.org/wiki/0bIN,,,,,,languages,A programming language that uses only binary*
Malang,https://esolangs.org/wiki/Malang,,,,implemented,,languages,Malang is an esolang that compiles down to an algebraic operation.
Interrobang,https://esolangs.org/wiki/Interrobang,2024,,turing complete,implemented,cell-based,low-level,Interrobang is a simple Tape based language aiming to balance simplicity and ease.
Hexagon says jump to line a if cell b is n and increment cell b by c if cell b equals d and output cell b is cell b equals e.,https://esolangs.org/wiki/Hexagon says jump to line a if cell b is n and increment cell b by c if cell b equals d and output cell b is cell b equals e.,2024,,unknown computational class,output only,cell-based,languages; low-level,"Hexagon says jump to line a if cell b is n and increment cell b by c if cell b equals d and output cell b is cell b equals e. is an esolang created by  Infinitehexagon which is his first OISC. Unfortunately, there is a spelling error at ""output cell b is cell b equals e"" where ""is"" is supposed to be an ""if""."
OOTPL,https://esolangs.org/wiki/OOTPL,,,turing complete,,,languages; high-level,"OOTPL (Only One Token Per Line), created by Noedig101 (talk) 18:24, 4 March 2024 (UTC), has the exact same syntax as Python. However, you can only have one token or value per line. If more than one token or value appears on the same line, a syntax error will be given. Line continuation is necessary for certain commands. Any braces or mathematical operators must be at the end of a line and must have at least three spaces between them and the token or value on that line. It is recommended that these are placed in the same position vertically for readability."
IDIJ,https://esolangs.org/wiki/IDIJ,2024,,turing complete,,,languages,IDIJ (Increment Decrement If Jump) is an OISC by User:None1.
"Thief, Police and the Building extended","https://esolangs.org/wiki/Thief, Police and the Building extended",2024,,,unimplemented,,languages,"Thief, Police and the Building extended is an esolang invented by User:None1, it is an extension to Thief, Police and the Building."
++Ↄ,https://esolangs.org/wiki/++Ↄ,2024,,,,,languages,++Ↄ is basically C++ but every program must be written in one line and in reverse order.
Readable,https://esolangs.org/wiki/Readable,2024,,,,,languages,"Readable is a language invented by User:None1 and inspired by Unreadable. Unlike its name, programs in this language are very unreadable because it uses the characters − (U+2212) and - (U+002D), which looks exactly the same in some fonts."
-Output,https://esolangs.org/wiki/-Output,,,,unimplemented,stack-based,languages,"-Output (pronounced ""minus output"") is a stack-based, Befunge-styled esolang invented by User:Evylah. Its main feature is that there is no output command, or a standard way to output to a console."
Fuckhard,https://esolangs.org/wiki/Fuckhard,,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,"Fuckhard is yet another brainfuck derivative, made by User:Umnikos. It aims to just be brainfuck but harder to use."
啊！,https://esolangs.org/wiki/啊！,,,turing complete; turing tarpits,implemented,cell-based,languages; joke languages; brainfuck derivatives; brainfuck equivalents; low-level; cjk,"""啊！"" is a Esolang same as ""Ook!""."
日本語,https://esolangs.org/wiki/日本語,,,,,,languages; cjk,"In fact, this title can be change with JaPaNeSe."
中文（简体，中国大陆）,https://esolangs.org/wiki/中文（简体，中国大陆）,2024,,,,,languages; cjk; high-level,中文（简体，中国大陆） is also called Chinese.
一丁丂七丄丅丆万丈三上下丌不与丏丐丑丒专且丕世丗丘丙业丛东丝丞丟丠両丢丣两严並丧丨丩个丫丬中丮丯丰丱串丳临丵丶丷丸丹为主丼丽举丿乀乁乂乃乄久乆乇么义乊之乌乍乎乏,https://esolangs.org/wiki/一丁丂七丄丅丆万丈三上下丌不与丏丐丑丒专且丕世丗丘丙业丛东丝丞丟丠両丢丣两严並丧丨丩个丫丬中丮丯丰丱串丳临丵丶丷丸丹为主丼丽举丿乀乁乂乃乄久乆乇么义乊之乌乍乎乏,2024,,unknown computational class,unimplemented,stack-based,cjk; joke languages,This article's title is not correct title 'cause the original title is too long(technical limitations). The correct title is 一丁丂七丄丅丆万丈三上下丌不与丏丐丑丒专且丕世丗丘丙业丛东丝丞丟丠両丢丣两严並丧丨丩个丫丬中丮丯丰丱串丳临丵丶丷丸丹为主丼丽举丿乀乁乂乃乄久乆乇么义乊之乌乍乎乏锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷锟斤拷小尐少尒尓尔尕尖尗尘尙尚尛尜尝尞尟尠尡尢尣尤尥尦尧尨尩尪尫尬尭尮尯尰就尲尳尴尵尶尷尸尹尺尻尼尽尾尿局屁层屃屄居屆屇屈屉届屋屌屍屎屏屐屑屒屓屔展屖屗屘屙屚屛屜屝属屟屠屡屢屣層履屦屧屨屩屪屫屬屭屮屯屰山屲屳屴屵屶屷屸屹屺屻屼屽屾屿岀岁岂岃岄岅岆岇岈岉岊岋岌岍岎岏岐岑岒岓岔岕岖岗岘岙岚岛岜岝岞岟岠岡岢岣岤岥岦岧岨岩岪岫岬岭岮岯岰岱岲岳岴岵岶岷岸岹岺岻岼岽岾岿峀峁峂峃峄峅峆峇峈峉峊峋峌峍峎峏峐峑峒峓峔峕峖峗峘峙峚峛峜峝峞峟峠峡峢峣峤峥峦峧峨峩峪峫峬峭峮峯峰峱峲峳峴峵島峷峸峹峺峻峼峽峾峿崀崁崂崃崄崅崆崇崈崉崊崋崌崍崎崏崐崑崒崓崔崕崖崗崘崙崚崛崜崝崞崟崠崡崢崣崤崥崦崧崨崩崪崫崬崭崮崯崰崱崲崳崴崵崶崷崸崹崺崻崼崽崾崿嵀嵁嵂嵃嵄嵅嵆嵇嵈嵉嵊嵋嵌嵍嵎嵏嵐嵑嵒嵓嵔嵕嵖嵗嵘嵙嵚嵛嵜嵝嵞嵟嵠嵡嵢嵣嵤嵥嵦嵧嵨嵩嵪嵫嵬嵭嵮嵯嵰嵱嵲嵳嵴嵵嵶嵷嵸嵹嵺嵻嵼嵽嵾嵿嶀嶁嶂嶃嶄嶅嶆嶇嶈嶉嶊嶋嶌嶍嶎嶏嶐嶑嶒嶓嶔嶕嶖嶗嶘嶙嶚嶛嶜嶝嶞嶟嶠嶡嶢嶣嶤嶥嶦嶧嶨嶩嶪嶫嶬嶭嶮嶯嶰嶱嶲嶳嶴嶵嶶嶷嶸嶹嶺嶻嶼嶽嶾嶿巀巁巂巃巄巅巆巇巈巉巊巋巌巍巎巏巐巑巒巓巔巕巖巗巘巙巚.
C++++,https://esolangs.org/wiki/C++++,,,,unimplemented,,languages; high-level,C++++ is more update from C++.
Addit,https://esolangs.org/wiki/Addit,2024,,turing complete,unimplemented,cell-based,languages,Addit is a language where data is stored in an infinite grid of crumbs (quaternary digits).
脑子爆掉,https://esolangs.org/wiki/脑子爆掉,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk; low-level,脑子爆掉 is a Chinesified Trivial brainfuck substitution by User:PrySigneToFry.
AnyGolf,https://esolangs.org/wiki/AnyGolf,2024,,turing complete,,,languages; golfing language; user edited,"AnyGolf is an esolang invented by User:None1, you can add anything to it as long as:"
AzureHeartC,https://esolangs.org/wiki/AzureHeartC,2024,,,unimplemented,,languages,AzureHeartC(or abbr as AHC) is most not esoteric in Esolangs.
AZZTURBLICHINORTYEUSIACNOSIPTYRUTIEOSUNEMEEETIRMSPLAORRRRRRRRRRRRRRHSIFUGISSFGIUUUUUUUUUUUUGUIGSEIUFGYUSGNYGNXWGNYX123456789012345678901145141919810TROSHPPAOCONALMELANGUAGE,https://esolangs.org/wiki/AZZTURBLICHINORTYEUSIACNOSIPTYRUTIEOSUNEMEEETIRMSPLAORRRRRRRRRRRRRRHSIFUGISSFGIUUUUUUUUUUUUGUIGSEIUFGYUSGNYGNXWGNYX123456789012345678901145141919810TROSHPPAOCONALMELANGUAGE,,,,unimplemented,,languages; joke languages; low-level,AZZTURBLICHINORTYEUSIACNOSIPTYRUTIEOSUNEMEEETIRMSPLAORRRRRRRRRRRRRRHSIFUGISSFGIUUUUUUUUUUUUGUIGSEIUFGYUSGNYGNXWGNYX123456789012345678901145141919810TROSHPPAOCONALMELANGUAGE (aka AMONGUSLICHINORTYEUSIACNOSIPTYRUTIEOSUNEMEEETIRMSPLAORRRRRRRRRRRRRRHSIFUGISSFGIUUUUUUUUUUUUGUIGSEIUFGYUSGNYGNXWGNYX123456789012345678901145141919810TROSHPPAOCONALMELANGUAGE) is a language based on Assembly Language.
锟斤拷烫烫烫fuck,https://esolangs.org/wiki/锟斤拷烫烫烫fuck,,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk; low-level,锟斤拷烫烫烫fuck is a Trivial brainfuck substitution.
TREE(3),https://esolangs.org/wiki/TREE(3),,,turing complete; turing tarpits,unimplemented,,languages; joke languages; cjk; alien,Tree(3) is a language based on Chinese and Korean.
BrainPi,https://esolangs.org/wiki/BrainPi,2024,,turing complete,implemented,,languages; brainfuck derivatives; brainfuck equivalents; thematic,BrainPi is an esolang invented by User:None1 on the Pi day of 2024 (2024/3/14). It is like Goldfuck except that it uses Pi instead of phi.
汐撅撅,https://esolangs.org/wiki/汐撅撅,,,,unimplemented,,languages; cjk; high-level,汐撅撅 is a CJK-ized C++. This is the Version J.
Z++,https://esolangs.org/wiki/Z++,2024,,,unimplemented,,high-level; cjk,Z++ is the language that from C++.
只因你太美,https://esolangs.org/wiki/只因你太美,2024,,turing complete,,,languages; brainfuck; brainfuck derivatives; brainfuck equivalents; cjk,只因你太美 is a language based on Chicken you too beautiful.
Inuktitut,https://esolangs.org/wiki/Inuktitut,2024,,,unimplemented,,languages; joke languages,ᑖᓐᓇ ᑕᒻᒪᖅᓯᒪᔪᖅ ᑕᐃᔭᐅᔾᔪᓯᖅ. ᑕᒻᒪᖓᙱᑦᑐᖅ ᑕᐃᒎᓯᖓ ᐃᓄᒃᑎᑐᑦ.
Монгол хэл,https://esolangs.org/wiki/Монгол хэл,,,,,,languages,"For ease of use, I'm going to go ahead and use the wrong title."
العربية,https://esolangs.org/wiki/العربية,,,,,,languages,العربية is a language based on Arabics.
Spoiler肏,https://esolangs.org/wiki/Spoiler肏,2024,,turing complete,,,languages; low-level; brainfuck derivatives; cjk,肏你妈的 is brainfuck language based on Fuck and 脑子爆掉.
IPAfuck,https://esolangs.org/wiki/IPAfuck,2024,,,unimplemented,,languages; joke languages,IPAfuck is a Brainfuck language based on IPA.
0widthnonjoiner,https://esolangs.org/wiki/0widthnonjoiner,,,,no io,stack-based,languages,"For ease of use, I'm going to go ahead and use the wrong title."
.not required,https://esolangs.org/wiki/.not required,,,push-down automata,unimplemented,stack-based,languages,Made by Unicodes
Brainalpha,https://esolangs.org/wiki/Brainalpha,2024,,,implemented,,languages; brainfuck equivalents,Brainalpha is an esolang invented by User:None1.
CodemaoC++,https://esolangs.org/wiki/CodemaoC++,,,,,,languages,"CodemaoC++ is C++ based language that IS TEXTUAL, NOT VISIBLE."
Ferntape,https://esolangs.org/wiki/Ferntape,2024,,turing complete,implemented,queue-based,languages,"Ferntape is a single queue Turing complete coding language made by user:RainbowDash on March 19th 2024. Ferntape consists of 1 register, and 1 queue. The queue can only be ""Pulled"" left, so that the last item in the queue is now the first item, like a circular tape with instructions on it. Every command here follows queue logic, First in first out. Ferntape however can read item 0 in the queue. The ""tape"" can be made longer or shorter at the user's will."
+Output,https://esolangs.org/wiki/+Output,,,,implemented,stack-based,languages,"+Output is exactly the same as -Output, however there is now an output command. Everything else is still the same, and all -Output programs are compatible with +Output. Read -Output for the basic idea."
Flow Uncontrolled,https://esolangs.org/wiki/Flow Uncontrolled,,,turing complete,unimplemented,,languages,Flow Uncontrolled is a language that requires self modification to do pretty much anything.
한국어,https://esolangs.org/wiki/한국어,,,,,,languages; cjk; high-level,한국어 is a language based on Hangul letters(Korean).
Free Esolang,https://esolangs.org/wiki/Free Esolang,2024,,,,,languages; user edited,You are free to edit this Esolang.
退！退！退！,https://esolangs.org/wiki/退！退！退！,,,,,,languages,"退！退！退！ is a Esolang which is only has ""退！"" as program and other is all annotation."
BittyLang,https://esolangs.org/wiki/BittyLang,2024,,,implemented; total,accumulator-based,languages; brainfuck derivatives; generated by ai,BittyLang is an esolang prompted by User:None1 and generated by the Cursor AI:
A Triple Sharp,https://esolangs.org/wiki/A Triple Sharp,,,,,,languages,"A𝄪# is A triple sharped(A, bB, B, C), So its syntax is same as C. (I added something in it.)"
Self-replicating marbles,https://esolangs.org/wiki/Self-replicating marbles,2024,,,unimplemented,,languages; two-dimensional languages,"Self-replicating marbles is an esolang by User:Joaozin003, which as the name says, uses self-replcating marbles."
Symbol+Lang,https://esolangs.org/wiki/Symbol+Lang,2024,,,unimplemented,stack-based,languages; two-dimensional languages,"Symbol+Lang is an esolang made by Mihai Popa. The goal of this is to have a language that looks slimiar to Fish and Befunge. Whitespace, tabs and line-feeds are not required but these make the code better to read."
Satarcrimp,https://esolangs.org/wiki/Satarcrimp,2024,,turing complete,usability unknown,,languages,"Satarcrimp is a Esolang which is a full of WMHO*MCW(:PRCUDOS*E:UFSJU(EP$UT(PEK""CW)P*T}W)#}#){WIOTAWLIT:WEUCF."
Stringle,https://esolangs.org/wiki/Stringle,2024,,turing complete,implemented,,languages,"Stringle is a programming language based around string manipulation created by User:Function call without parameters in 2024. Its name is a portmanteau of string and wrangle, being a language to process and modify strings."
中文,https://esolangs.org/wiki/中文,2024,,,,,languages; cjk; high-level,It is Humanized 中文（简体，中国大陆）.
Human Words,https://esolangs.org/wiki/Human Words,2024,,turing complete,,,languages; high-level; joke languages,Human Words is a Formal LOLCODE.
EsoPy Framework,https://esolangs.org/wiki/EsoPy Framework,2024,,turing complete,implemented,,languages,"EsoPy Framework is a language/framework made by User:ce2lo. It provides a Python template for building esoteric programming languages. It includes a lexer and an interpreter, and a runner that ties everything together."
Muxleq,https://esolangs.org/wiki/Muxleq,,,,implemented,,languages; low-level,"MUXLEQ is an experiment in adding a single instruction to Subleq in order to greatly speed up the virtual machine by howerj. Most programs that will run under Subleq will run under MUXLEQ. It adds an instruction that also takes three operands and performs a multiplexing operation on them (hence the name). This allows greatly sped up loading, storing, and naturally bitwise operations. This is not the only experiment in adding an instruction to Subleq (or other OISC variants), for example the paper Subleq(-): An Area-Efﬁcient Two-Instruction-Set Computer describes a two instruction variant that instead adds a bit-reversal function that greatly speeds up some code and should be trivial to implement in hardware given an already working Subleq implementation."
Mariofuck,https://esolangs.org/wiki/Mariofuck,2024,,turing tarpits; turing complete,implemented,cell-based,languages; low-level; brainfuck equivalents; brainfuck derivatives,"Mariofuck is a esolang made by Mihai Popa. It's Brainfuck, but you only use 1-letter names of Nintendo characters instead of symbols to make programs."
Readable Brainfuck,https://esolangs.org/wiki/Readable Brainfuck,2024,,,implemented,cell-based,brainfuck_derivatives; languages,Readable Brainfuck (RBF) is a remake of Brainfuck that is intended to be more readable than traditional brainfuck
啊！++,https://esolangs.org/wiki/啊！++,,,turing complete; turing tarpits,,cell-based,languages; joke languages; brainfuck derivatives; brainfuck equivalents; cjk,"""啊！++"" is a Esolang sbased on 啊！ but more higher level."
Child Script,https://esolangs.org/wiki/Child Script,2024,,unknown computational class,implemented,,languages; low-level,"Child script is a language so simple that even a 5 year-old child (Joe) could interpret it. It is composed of commands that mimic actions that most Joes would understand, yet it remains surprisingly usable. It bears some resemblance to assembly language, but the reasons for this will become clearer later on."
"Oh, fuck!","https://esolangs.org/wiki/Oh, fuck!",2024,,turing complete; turing tarpits,,,languages; brainfuck derivatives,"Oh, Fuck! is a Esolang based on Brainfuck but more commands."
Ook!+,https://esolangs.org/wiki/Ook!+,2024,,turing complete,,,languages; brainfuck derivatives,"Ook!+ is an extension to Ook! invented by User:None1, it is equivalent to Random Brainfuck."
Hanzifuck,https://esolangs.org/wiki/Hanzifuck,2024,,turing tarpits; turing complete,implemented,cell-based,languages; low-level; cjk; brainfuck equivalents; brainfuck derivatives,"Hanzifuck is a esolang made by Mihai Popa. It's Brainfuck, but you only use Chinese characters (Hanzi) instead of symbols to make programs."
12345678,https://esolangs.org/wiki/12345678,2024,,,implemented,,languages; brainfuck equivalents; cjk,"12345678 is an esolang invented by User:None1 when he noticed that he didn't invent many Chinese brainfuck equivalents, also because he encountered one of his own brainfuck equivalents by random page."
BoVeX,https://esolangs.org/wiki/BoVeX,2024,functional paradigm,turing complete,implemented,graphical output,languages,"BoVeX is a two-goal optimization typesetting system created by Dr. Tom Murphy VII, Ph.D. in 2024.  BoVeX can automatically rewrite the wording of the article slightly if this helps the paragraphs look nicer when the best line breaks are applied to it.  BoVeX uses a tunable parameter to decide the importance of two goals: the paragraphs looking nicer, and the rephrasing preserving more of the wording."
Poololoop,https://esolangs.org/wiki/Poololoop,2024,functional paradigm,turing complete,no io; implemented,,languages,"Poololoop is a programming language whose source code is the programmer running a path, measured with a GPS.  The loops in the running path encode a lambda calculus program.  The language is defined in this article:"
Onione,https://esolangs.org/wiki/Onione,2024,,,unimplemented,,languages,Onione is an esolang by User:BoundedBeans based on Stable Diffusion images of piles of onions.
Drive-In Window JSON,https://esolangs.org/wiki/Drive-In Window JSON,2024,,turing complete; finite state automata,unimplemented,,languages,Drive-In Window JSON is an esolang by User:BoundedBeans capturing the semantics of Drive-In Window but in JSON format.
Detour,https://esolangs.org/wiki/Detour,2024,,,implemented,cell-based,languages,Detour is a cell-based esolang where memory can only be edited indirectly.
BFasm,https://esolangs.org/wiki/BFasm,,,,,cell-based,languages; brainfuck,BFasm is a programming language that compiles to brainfuck. It is created by User:Evylah.
HZfunge,https://esolangs.org/wiki/HZfunge,2024,,push-down automata; turing complete,,stack-based,languages; two-dimensional languages; low-level; cjk,The Befunge written by Chinese Characters.
Typefuck,https://esolangs.org/wiki/Typefuck,2024,,turing tarpits; turing complete,implemented,cell-based,languages; low-level; brainfuck equivalents; brainfuck derivatives,Typefuck is developed by Steve Abel.
ごぼうとにんじん炒めたやつ,https://esolangs.org/wiki/ごぼうとにんじん炒めたやつ,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck equivalents; brainfuck derivatives,ごぼうとにんじん炒めたやつ(gobo to ninjin itameta yatsu) is an esoteric programming language invented by User:Yamaserif.
Pointstack,https://esolangs.org/wiki/Pointstack,2024,,turing complete,implemented,stack-based,languages,"Pointstack is an esoteric programming language created by User:catto.4 in 2024. It is similar to brainfuck, except that it uses a stack instead of a tape. Items on the stack can only contain numbers."
Assembliera,https://esolangs.org/wiki/Assembliera,2024,,,,,languages,"Assembliera is designed by Steve Abel. It just like a real ASseMbly Language, but is has more function."
DateTri,https://esolangs.org/wiki/DateTri,,,,unimplemented,,languages,"DateTri is an esolang by User:BoundedBeans which is designed to look like an old programming language, as well as showing off three different definitions of the word ""Date""."
3018AD,https://esolangs.org/wiki/3018AD,,,,,,languages; thematic,3018AD is a Esolang that looks like a future spacewar.
Interfacefactory,https://esolangs.org/wiki/Interfacefactory,,,,unimplemented,,languages,"in interfacefactory(made by User: Yayimhere) you use diffrent esolangs for diffrent parts of you code or ""the factory"". you start with the middle section where you write [] inside the []'s you put in piet code. on [ there is input and ] is the output. on the left side of the input you use factory and when the piet has handled that number to do any io you use puredata then to do calculus operations or https requests you use hofstadter connected to something between puredata and piet. whats between is Ensemencer. you put # in front and end of factory code and you put & around puredata code and you put / around hofstadter and you put > in front and < in the back of Ensemencer code. to connect things you use ascii dots code to move a dot with whatever the code outputs. this esolang is theoretical and not implemented"
Posthumousfuck,https://esolangs.org/wiki/Posthumousfuck,2024,,turing tarpits; turing complete,implemented,cell-based,languages; low-level; cjk; brainfuck equivalents; brainfuck derivatives,Posthumousfuck is just Brainfuck with posthumous names as its code.
Indifferent,https://esolangs.org/wiki/Indifferent,,,,,,joke languages; languages,"Indifferent (the lesser twin of of two ""Flux and Indifferent"" as Indifferent has less features compared to Flux {Indifferent code can work on a Flux interpreter but not the other way around} ) is a minimalistic approach for traditional control flow programming with around 11ish features
Indifferent prototype was compleate on April 20th, 2024 and made by user Scudmaster11 ... no IRL name sorry ;)"
Flux,https://esolangs.org/wiki/Flux,,,,,,languages; joke languages,"Flux has more features then its lesser twin (Indifferent) and the idea of Flux came first (then Indifferent got implemented first because its the same language as Flux with less features)....
(still in development by Scudmaster11)..."
大白话,https://esolangs.org/wiki/大白话,2024,,turing complete,,,languages; cjk; high-level,大白话 is Chinese Human Words.
Acc!!,https://esolangs.org/wiki/Acc!!,2015,,turing_complete; turing_tarpits,implemented,,languages; low-level,"Acc!! is a Turing tarpit built on unbounded integer math, loops, and a single accumulator."
That=this,https://esolangs.org/wiki/That=this,,,,unusable for programming,,languages,that=this is a this=That derivative where instead of saying thing like x=1 you say 1=x. and when you refrence x you do not say for example y=x you say 1=y so you can only use something you cant use but also kinda can????????????????????
Gt++fy,https://esolangs.org/wiki/Gt++fy,,,,unimplemented,cell-based; stack-based,languages,gt++fy is a fusion of two esolangs made by User: Yayimhere: Get there and F ck you that only has two extra commands:
S.B.M.F.B,https://esolangs.org/wiki/S.B.M.F.B,2024,,turing complete,implemented,stack-based; cell-based,languages; brainfuck derivatives,S.B.M.F.B(made by User: Yayimhere) stands for stack based memory for brainfuck. in S.B.M.F.B you have a stack to store brainfuck code inside. there are some simple commands in this program to add it to the stack
Bottles of beer on the wall,https://esolangs.org/wiki/Bottles of beer on the wall,2024,,turing complete,unusable for programming,,brainfuck derivatives; languages; brainfuck equivalents,Bottles of beer on the wall is a very brain-exploding brainfuck equivalent by User:None1.
O.S.M,https://esolangs.org/wiki/O.S.M,,,,unimplemented,,languages,O.S.M is a esolang made by User:Yayimhere where the program can only self modify. The name stands for only self modify. O.S.M does not include variables but if a number is put on a line with F then it is remembered as a variable
⊗,https://esolangs.org/wiki/⊗,2024,,,unimplemented,,languages; high-level; thematic,⊗ (or Signs) is a esoteric programming language created by User:Ractangle where road signs are used as code. The syntax is quite similar to python btw
Omnis Clocha Clochabilis in Clocherio Clochando Clochans Clochativo Clochare facit Clochabiliter Clochantes,https://esolangs.org/wiki/Omnis Clocha Clochabilis in Clocherio Clochando Clochans Clochativo Clochare facit Clochabiliter Clochantes,2024,,turing complete,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; low-level,"Omnis Clocha Clochabilis in Clocherio Clochando Clochans Clochativo Clochare facit Clochabiliter Clochantes (abbreviated as OC9) is a Brainfuck derivative, created by User:Nazalassa in 2024, which uses words from the following quote from Rabelais in Gargantua:"
Leftoutside,https://esolangs.org/wiki/Leftoutside,,,,,,languages,
ONLY 4 COMMANDS,https://esolangs.org/wiki/ONLY 4 COMMANDS,,,,,,languages,Just like Ａｅｓｔｈｅｔｉｃｓ but more clearly.
SR,https://esolangs.org/wiki/SR,2024,,,output only; total; implemented,,languages,SR (Seeded Random) is an esolang invented by User:None1 and inspired by Seed.
SUTRAGNEZOl,https://esolangs.org/wiki/SUTRAGNEZOl,,,,output only; unimplemented,,low-level,SUTRAGNEZOl stands for SUbtract and TRy AGain with new NUmber if Equal too Zero Or Less.SUTRAGNEZOl is a OISC. in SUTRAGNEZOl you can do one thing. it is where you have a memory adress A. then you subtract whats in memory adress B from A. if this is more than 0 we store the result in B. else if the result less than or equal too 0 we try again but with c instead of B. then if this is also lessthan or equal to 0 the memory pointer goes to D. you write this like shown below:
6,https://esolangs.org/wiki/6,2024,,,unusable for programming; implemented; output only; total,,languages; joke languages; nope. derivatives,6 is an Esolang developed by PSTF.
Mastermind,https://esolangs.org/wiki/Mastermind,2023,,turing complete,implemented,cell-based,languages; brainfuck,"Mastermind is a programming language designed specifically to create Brainfuck code. The language and compiler was created by Heath Manning in 2023 as a tool for creating optimized Brainfuck programs [1]. The Mastermind IDE includes a Rust-based compiler, which converts (compiles) Mastermind source programs into Brainfuck.
The current Mastermind compiler generates Brainfuck code assuming an infinite bi-directional tape, as well as 8-bit wrapping cells [1]."
ㄅㄆㄇㄈㄉㄊㄋㄌ,https://esolangs.org/wiki/ㄅㄆㄇㄈㄉㄊㄋㄌ,,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk; low-level,"ㄅㄆㄇㄈㄉㄊㄋㄌ, or 波泼摸佛嘚忒呢勒, or BopomofoDetelene, is Brainfuck derivative."
Ixux,https://esolangs.org/wiki/Ixux,2024,object-oriented paradigm,unknown computational class,unimplemented,,languages,Ixux is an object-oriented esolang by User:BoundedBeans inspired by Unix/Linux commands.
Scrambled,https://esolangs.org/wiki/Scrambled,,,turing complete; turing tarpits,unimplemented,,languages; joke languages; cjk; alien,Scrambled just Satarcrimp with a TREE(3)-like script.
STRong,https://esolangs.org/wiki/STRong,,,turing complete,unimplemented,,languages,STRong is a language made by User:Qawtykit to add more features to a string-rewriting paradigm.
ChinaScript,https://esolangs.org/wiki/ChinaScript,,,,,,languages; cjk; high-level,ChinaScript is a Esolang with Chinese as its script.
Brain思密达,https://esolangs.org/wiki/Brain思密达,,,turing complete; turing tarpits,,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk; low-level; alien,Brain思密达 is a Brainfuck code with TREE(3) encode.
菜就多练,https://esolangs.org/wiki/菜就多练,2024,,,implemented,,languages; joke languages; cjk; deadfish derivatives,菜就多练 is an Esolang designed by PrySigneToFry. It is derived from deadfish.
Nopstacle,https://esolangs.org/wiki/Nopstacle,2024,,turing tarpits,unimplemented; no io,,languages; low-level; two-dimensional languages,"Nopstacle is an esoteric programming language created by User:ais523 in 2024, inspired by User:Keymaker's Turnfunge. The intent was to produce a language with similar semantics to Turnfunge, but that appealed more to ais523's sense of aesthetics."
BaguaFuck,https://esolangs.org/wiki/BaguaFuck,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk; low-level,"BaguaFuck, or ☰☱☲☳☴☵☶☷Fuck, is based on Brainfuck."
Boi,https://esolangs.org/wiki/Boi,,,,,,languages,"Boi (Boilang) is a C-like programming language where all keywords contain the substring ""boi"". Boi borrows from both the procedural and functional paradigms."
Tarot,https://esolangs.org/wiki/Tarot,2024,,,implemented,stack-based,languages; thematic,"Tarot is a stack-based esolang created by User:Lown in May 2024, where programs appear as sequences of Tarot cards. It is inspired by languages like PokéBattle, Airline Food, and Shakespeare, where ornate phrases or sentences stand in for program instructions, with one difference: because the cards are being drawn from a deck, no card may be used more than once (although card names can appear in the program multiple times as long as they are only played once). One card, Wheel of Fortune, allows the previously played cards to be shuffled back into the deck, but this also resets the stack."
BRaInFUCK,https://esolangs.org/wiki/BRaInFUCK,2024,,turing complete,,,languages; thematic; brainfuck derivatives; brainfuck equivalents,"BRaInFUCK is a brainfuck equivalent that uses element symbols instead of normal symbols, separated by spaces."
Aleph-ZERO,https://esolangs.org/wiki/Aleph-ZERO,2024,,,,,languages; user edited,Aleph-ZERO is designed by PrySigneToFry. You can add your own commands here. You can also visit ℵ₀ Bytes ^_^ to look the origin page.
XOR,https://esolangs.org/wiki/XOR,2024,,,implemented,,languages,"XOR is an esoteric programing language that was created by User:Brain Boy 53.
XOR is inspired by FALSE, and just as FALSE is the creator's favorite truth value, XOR is the creator's favorite logic gate."
NoError,https://esolangs.org/wiki/NoError,2024,,,implemented,stack-based,languages,"NoError is a stack based esolang created by User:Brain Boy 53. It is designed to have accept any string of ascii characters from ascii value 32 ("" "") to ascii value 126 (""~"").
IF YOU FIND AN ERROR, GO TO THE TALK PAGE AND SEND AN ERROR REPORT IN THE GOOGLE FORM."
Ø,https://esolangs.org/wiki/Ø,,,,,cell-based; stack-based,languages,Ø(pronounced øh) is a esolang made of random characters on the mac keyboard and is very chaotic.
AH'TALIQUAE ENGLISH,https://esolangs.org/wiki/AH'TALIQUAE ENGLISH,2024,,turing complete,,,languages; thematic,"AFTER WATCHING LOLCODE'S INTERFACE, I DECIDED THAT IT WASN'T EASY ENOUGH FOR PEOPLE TO UNDERSTAND, SO I DESIGNED AH'TALIQUAE_ENGLISH."
DQ,https://esolangs.org/wiki/DQ,,,,unusable for programming; output only; total; implemented,stack-based,joke languages; languages,DQ is a esolang about duplicate and discard
TinyF,https://esolangs.org/wiki/TinyF,2024,,,implemented; total,,languages; brainfuck derivatives; generated by ai,TinyF is a brainfuck derivative created by Cursor AI and prompted by User:None1.
"6 bits, 12 bytes","https://esolangs.org/wiki/6 bits, 12 bytes",2024,,finite state automata,unimplemented,stack-based,,"6 bits, 12 bytes is the fifth ___ bits ___ bytes language and the first one to not be a joke, created by Europe2048."
Xenon,https://esolangs.org/wiki/Xenon,2024,imperative_paradigm,turing complete,unusable for programming; unimplemented,queue-based; binary,languages,"Xenon is an esolang created by Jayde M in 2024. It's written at the binary level, and looks quite compact at the byte level, but was not intended for golfing or similar purposes. Specifically, she wrote it for the intention of building a language written in binary and motivated by the concept of registers, but which isn't just a copy of assembly. Unlike assembly, there are infinitely many registers and each is unlimited in size, and unlike the infinitely many cells of a Turing machine it is impossible to build rules acting on arbitrary registers since there can be no dereferencing. Nevertheless, one can simulate Turing machines, as discussed later in this introduction."
C@++,https://esolangs.org/wiki/C@++,2024,,unknown computational class,unimplemented,stack-based,languages,"C@++ is an extension of C@ by User:BoundedBeans, made for simple text algorithms."
Yoctofunge,https://esolangs.org/wiki/Yoctofunge,2024,,turing complete,no io; unimplemented,,languages; two-dimensional languages,"Yoctofunge is a minimalization of a minimalization of Nopfunge. It is named after yocto, the smallest unit."
Qwhy,https://esolangs.org/wiki/Qwhy,2022,,,unimplemented,queue-based,two-dimensional languages; languages,"Qwhy is a fungeoid esolang by User:BoundedBeans that aims to be different than other fungeoids, while also being weird."
=?,https://esolangs.org/wiki/=?,,object-oriented paradigm,unknown computational class,unimplemented,stack-based; concurrent programming; stack-based,languages; languages,"=
if the thing being assigned is a place:"
CLFCE,https://esolangs.org/wiki/CLFCE,2024,,,unimplemented,,languages,CLFCE (or Computer Language For Code Execution. also pronounsed as self-see) is a esoteric programing language created by User:Ractangle
^English,https://esolangs.org/wiki/^English,2023; 2024,,,unimplemented,,languages; high-level,^English was designed by PSTF. It is more visual script.
Microwave,https://esolangs.org/wiki/Microwave,,,turing complete; turing tarpits,implemented,cell-based,brainfuck derivatives; languages; joke languages; low-level,"Microwave was created by Philip Naveen in 2024. It is a basic esoteric programming language based on Brainfuck, Ook!, and COW. It's extremely minimalistic, but it gets the job done."
Kava,https://esolangs.org/wiki/Kava,2024,,,,,languages,Kava is an esolang created by User:Ractangle
O(א₀),https://esolangs.org/wiki/O(א₀),2024,,,,stack-based,user edited; languages,"O(א₀) (pronounced O of alpeh null) is a esolang based on User:Yayimhere's discord username: (stack)[X, I, X, A]->[I] OR A=X which is incomplete as it is: (stack)[X, I, X, A]->(stack)[I] OR: {A=X->(stack)[A, I, A, A]}¡{? A=X -> A & X !(A & X) OR X->A}. any user can add a section with their commands and stuff. it has to be computable no running other esolangs and such. go to ∫∫∫∫∫∫∫∫∫∫∫∫∫ to add non commands and to see rules"
HQ9+ with headers,https://esolangs.org/wiki/HQ9+ with headers,2019,,,unimplemented,,languages,"HQ9+ with headers is an esolang originally thought up by User:Cortex, though the only reference to ever exist was a single example, labeled 'Print ""Hello, World!QHQQHQ""':"
Caca,https://esolangs.org/wiki/Caca,2024,,,implemented,stack-based,languages; joke languages,"""Caca"" is an esolang created by User:Mari on May 22nd, 2024. It's first (and currently only) Interpeter is written in scratch. It's namesake and commands are based on a Discord server called ""Progresscord""'s Humor, of saying ""I caca"", and sometimes using a sticker which is an edited version of Icoeye's logo with eyebrows, 1 eyebrow raised, a weird smirk and the caption ""I caca"" in the top corner in impact font. It is described as being ""crappy and likely unfunny"""
TBTBFS,https://esolangs.org/wiki/TBTBFS,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; low-level,"TBTBFS is an esolang created by Brain Boy 53 (talk) 15:16, 24 May 2024 (UTC). It stands for TMMLPTEALPAITAFNFAL but trivial brainf**k substitutions."
！中文,https://esolangs.org/wiki/！中文,2024,,,unimplemented,,languages; cjk; high-level,"！中文, or !Chinese, is designed by PSTF. It is COMPLETELY based on Chinese."
WhimsiCode,https://esolangs.org/wiki/WhimsiCode,2024,,unknown computational class,unimplemented,,languages; generated by ai,WhimsiCode is invented by PSTF and his ChatGPT.
Windows 1.0,https://esolangs.org/wiki/Windows 1.0,2024,,turing tarpits; turing complete,unimplemented,cell-based,languages; low-level; brainfuck equivalents; brainfuck derivatives,Windows 1.0 is a version of Brainfuck made by Mihai Popa but based on names of programs from Windows 1.0. Commands are 1 per line only.
FME,https://esolangs.org/wiki/FME,2024,,finite state automata,unimplemented,,languages; meta-languages,FME (short for Finite Memory Esolang) is an esolang that is made to implement esolangs with finite memory in simple but long code.
MLang (Mihai Popa),https://esolangs.org/wiki/MLang (Mihai Popa),2024,,,output only; implemented; total; unusable for programming,,languages; high-level,"mLang is a language made by Mihai Popa. It's simple, but it supports only math and printing! It has no input!!"
Befreege,https://esolangs.org/wiki/Befreege,2024,,push-down automata; turing complete,,stack-based,languages; low-level,Befreege is an Esolang invented by PSTF. You're free to edit this Esolang.
Stroke,https://esolangs.org/wiki/Stroke,2024,,finite state automata; bounded-storage machine,implemented,cell-based,languages; low-level,"Stroke, also {/|\}, is an esoteric structured programming language."
C flat --,https://esolangs.org/wiki/C flat --,,,,unimplemented,,languages,"C flat --, or C♭--, is an esolang created by User:Coder07 that is entirely composed of functions and values (e.g. ""Hello world"", 12345). It has nothing to do with C Flat."
Xdi8 aho fHL mA,https://esolangs.org/wiki/Xdi8 aho fHL mA,2024,,,unimplemented,,languages; high-level,"For ease of use, I'm going to go ahead and use the wrong title."
Stroke+-,https://esolangs.org/wiki/Stroke+-,2024,,turing complete; turing tarpits,implemented,,languages; low-level,"Stroke+-, also +{/|\}-, is an esoteric structured programming language."
脑蛇,https://esolangs.org/wiki/脑蛇,,,,implemented; output only; total; unusable for programming,,languages; joke languages; cjk,"脑蛇 is adapted from Brainthon, for ease of use."
Isomorphism,https://esolangs.org/wiki/Isomorphism,2024,,,,,languages; high-level,Isomorphism is an esoteric programming language that was invented by User:PrySigneToFry upon reading Isomorphism: The mathematics in programming.
TableLang,https://esolangs.org/wiki/TableLang,2024,,,unimplemented,,languages; high-level; two-dimensional languages,"TableLang is a esolang made by Mihai Popa, based on only tables. :)"
驫鶭,https://esolangs.org/wiki/驫鶭,2024,,turing complete; turing tarpits,,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk,"驫鶭, or BiaoFang, is invented by PSTF."
SPARCs Fly,https://esolangs.org/wiki/SPARCs Fly,2024,,,unimplemented,stack-based,languages,"SPARCs Fly is an esolang by User:BoundedBeans, made to fulfill the following design decisions:"
FizzLang,https://esolangs.org/wiki/FizzLang,2024,declarative paradigm,,unimplemented; output only; total; unusable for programming,,languages,FizzLang is a esolang made by Mihai Popa. It's a DSL (Domain-Specific Language) for solving the Fizz Buzz problem. It's inspired by DIVSPL (Dustin Ingram's Very Special Programming Language)
I am selfish,https://esolangs.org/wiki/I am selfish,2024,,turing complete; turing tarpits,no io; implemented,,languages; low-level,"I am selfish is an esoteric programming language that solely discusses itself, permitting only variations of the symbol ""I"":"
Beefydie,https://esolangs.org/wiki/Beefydie,2024,,,implemented,stack-based,languages; thematic; languages,"Beefydie is an esolang made by User:Fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff which is inspired by ArnoldC. It is stack-based, but has 3 other forms of memory.
They are 'x', memory, and garbage"
ULEX,https://esolangs.org/wiki/ULEX,2024,functional paradigm,turing complete,,concurrent programming; binary; cell-based,languages; low-level; brainfuck derivatives,ULEX is a minimalist programming language based on a variation of λ-calculus  envisioned in the 80s by Nicolaas Govert de Bruijn.
EmojiLang (Mihai Popa),https://esolangs.org/wiki/EmojiLang (Mihai Popa),2024,,,unimplemented,,languages; high-level,"EmojiLang is a esolang made by Mihai Popa, based on only emoji. :)"
Underload:^:^,https://esolangs.org/wiki/Underload:^:^,2024,,turing complete,unimplemented,stack-based,languages,"Underload:^:^ is an esolang by User:BoundedBeans. It is a derivative of Underload, but with extra features."
Pyqon,https://esolangs.org/wiki/Pyqon,,,,,,languages,"Pyqon is an esoteric subset of the programing language Python. It is inspired by JSFuck.
In it, the only allowed characters are:"
NEWS,https://esolangs.org/wiki/NEWS,2024,,,unimplemented,,languages,News is an esoteric programing language meant to look like a news cast.
Hyperbrain,https://esolangs.org/wiki/Hyperbrain,2024,,,no io; unimplemented,cell-based,languages; low-level; brainfuck derivatives,Hyperbrain is the ultimate programming language invented by User:Ttulka to decide any problem in the multiverse.
Lython,https://esolangs.org/wiki/Lython,,,,,,languages; high-level,"The entire language is Python, but with Lua syntax, for example:"
(...) IS 2D!!,https://esolangs.org/wiki/(...) IS 2D!!,2024,functional paradigm,unknown computational class,unimplemented,stack-based,languages; two-dimensional languages; high-level,(...) IS 2D!! or bracket is 2d!!(yes i am aware of the grammar error. and also i dont care) or BI2D!! as i will refer to it. and yes BI2D!! is 2d. its made by User:yayimhere
Harmonii,https://esolangs.org/wiki/Harmonii,2024,,,unimplemented,stack-based,languages,Harmonii is an esolang by User:BoundedBeans inspired by the .NET runtime patching library known as Harmony.
Dreadow,https://esolangs.org/wiki/Dreadow,2024,,unknown computational class,,cell-based; matrix-based,languages,"Dreadow is an esolang by User:BoundedBeans that looks like a flowery meadow, and is textual, thus the meaning of the code is dependent on the color of the font in each character of the code. It was created after the author caused some minor confusion on the Esolangs wiki making a MediaWiki template that made it easier to color code (after difficulty highlighting a proof concerning THROBOL). It turns out it's fully possible without the template, but annoying. And then the author got obsessed with the idea of a language that's both color-based and textual, so he came up with Dreadow the next day."
Stck,https://esolangs.org/wiki/Stck,,,,,stack-based; graphical output,low-level; languages,"Stck is a single thread, Stack based* language, in which the code itself is in the stack."
COBOLD,https://esolangs.org/wiki/COBOLD,2024,,turing complete,implemented; output only,cell-based,languages; thematic,COBOLD (also known as YipYap) is a programming language for Kobolds (who are known to make Yip and Yap noises).
COPY WITH @,https://esolangs.org/wiki/COPY WITH @,,,turing complete,implemented,stack-based,languages,COPY WITH @ or CW@ is a esolang(made by User:Yayimhere) where you copy values of a stack and increment and decrement them. the stack starts with a 1 on it.
Malbolge Reborn,https://esolangs.org/wiki/Malbolge Reborn,2024,,,unimplemented; works-in-progress,cell-based,languages,"Malbolge Reborn is an attempt to make an esolang that's even harder than Malbolge. It is currently in the prosses of being created.
Malbolge Reborn runs on an array, where each cell in the array can hold a different number of values, starting with the first one, at two values. At the start of a program, every cell except for the first one is ""locked"" which means they can't be accessed. There is a data pointer that starts off pointing at the first (and only) cell in the array. To ""unlock"" a cell, you have to unlock all cells before it in numerical order. To unlock a cell, you use the unlock command which is represented by the character ""#"". After each ""#"" command, you have to put a number of no-ops, or ""Q""s. The number of no-ops is determined by this formula: cell capacity^2 plus 3 times current 0-indexed cell value minus 3. So, to unlock the second cell you would write:"
§þłĳŧȉǩȃɖəɹ,https://esolangs.org/wiki/§þłĳŧȉǩȃɖəɹ,2024,,,,,languages,Splitikader is invented by PSTF. Note that this Esolang will controls the uncomputable commands.
SimpleCalc,https://esolangs.org/wiki/SimpleCalc,,,,,,languages,SimpleCalc is an esolang by User:Ohnoitsnoah that functions as a simple-to-read basic 4 function calculator. This is meant to be as human-readable as possible. It is also meant to be used only in a REPL.
ImTooLazyToMakeAnActuallyGoodEsolang,https://esolangs.org/wiki/ImTooLazyToMakeAnActuallyGoodEsolang,2024,,push-down automata,output only; total; unusable for programming; implemented,queue-based,languages; joke languages,"ImTooLazyToMakeAnActuallyGoodEsolang or Laziness is an esolang but the creator, User:Evylah got lazy to make a half-decent language. It is not Turing-complete and is output only. One possible use case could be to send messages to other people (even though they'd be very long)."
Brainbits+,https://esolangs.org/wiki/Brainbits+,2024,,turing complete,unimplemented,,languages; brainfuck derivatives,Brainbits+ is an extension of Brainbits that adds 1 command to make it turing complete. It is invented by User:None1.
Readability,https://esolangs.org/wiki/Readability,2024,,,,,languages,"Readability is an esolang that is 100% readable. It consists of only characters from the ASCII range \x00 to \x20 inclusive (the unprintable ASCII), along with a few other characters. It's created by User:Evylah."
"5 Bits, 20 Bytes","https://esolangs.org/wiki/5 Bits, 20 Bytes",2024,,,unimplemented,,languages,"5 Bits, 20 Bytes is an assembly language invented by User:None1 for a 5-bit CPU. It is inspired by 3 Bits, 3 Byte, which is inspired by 2 bits, 1 Byte. User:MihaiEso asked the author to invent the language. This language has all the commands in 3 Bits, 3 Bytes."
PSTF,https://esolangs.org/wiki/PSTF,2024,,,,,languages,PSTF is an Esoalng designed by PSTF.
Cheat (Gilbert189),https://esolangs.org/wiki/Cheat (Gilbert189),2024,,,unimplemented,,languages; thematic,Cheat is an esolang by User:Gilbert189 about cheating a counting game. It is inspired by redgreenandblue's TBG also called Cheat.
Wikitables,https://esolangs.org/wiki/Wikitables,2024,,unknown computational class,unimplemented,concurrent programming,languages,"Wikitables is a visual esolang invented by User:None1. It was drafted in January 2024, but forgotten until the time it was created in June 2024. It uses wikitext-like syntax."
Quagdonic numbers,https://esolangs.org/wiki/Quagdonic numbers,2024,,,implemented,,languages,"A number 



n
∈

N

,
n
≥
1


{\displaystyle n\in \mathbb {N} ,n\geq 1}

 is 



m


{\displaystyle m}

-quagdonic (



m
∈

N

,
m
≥
2


{\displaystyle m\in \mathbb {N} ,m\geq 2}

) iff there exists 



k
∈

N

,
k
≤

⌊


log

m


⁡
n

⌋



{\displaystyle k\in \mathbb {N} ,k\leq \left\lfloor \log _{m}n\right\rfloor }

 such that"
Schacalic,https://esolangs.org/wiki/Schacalic,,,,,,languages,"Schacalic, or ʂaʧʰɑlɪkʰ, is based on PLUSHIES ART."
"(,!)","https://esolangs.org/wiki/(,!)",,,unknown computational class,,cell-based,languages; two-dimensional languages,"(,!) is a esolang by yayimhere about modifying a 3 cell tape. There are only 10 commands. Its also really hard to use:) :"
REG.TYPE = STR TRUE,https://esolangs.org/wiki/REG.TYPE = STR TRUE,2024,,turing complete,,,languages; low-level,REG.TYPE = STR TRUE is a esolang (made by User:yayimhere) with a register. but the register is a string. it can be modified copied printed ect. REG.TYPE = STR TRUE or R.T=ST's goal is to see if using only a single unbounded string can there be made a turing complete esolang.
Gate,https://esolangs.org/wiki/Gate,,,,unimplemented,,languages; two-dimensional languages,"Gate is a simple automaton with gates. Here is all the syntax, created by User:Yayimhere:"
ICFP,https://esolangs.org/wiki/ICFP,2024,functional paradigm,turing complete,,,languages; icfp contest,ICFP is an esoteric programming language involved in the tasks for ICFP contest 2024.
GHost CPU,https://esolangs.org/wiki/GHost CPU,2014,,,,cell-based,languages; icfp contest,GHost CPU (GHC) is one of the languages used in the ICFP contest 2014.
General Compute Coprocessor,https://esolangs.org/wiki/General Compute Coprocessor,2014,,,,,languages; icfp contest,General Compute Coprocessor (GCC) is one of the languages used in the ICFP contest 2014.
↑→↓,https://esolangs.org/wiki/↑→↓,,,,,,low-level,↑→↓ pronounced up to down(can be shortened to UTD as ill be writing it on this page) is a esolang invented by User:Yayimhere thats a abstract machine where you create states of 3 different simulated computers who can send their states to each other. each computer runs in order from computer 1 to computer 3.
MEMORYLEEK,https://esolangs.org/wiki/MEMORYLEEK,2024,,turing complete,unimplemented,,languages; low-level,"MEMORYLEEK (also called ""MEMLEEK"" and ""MLEEK"") is a pointer-based language designed to maximize memory leakage. While the idea was only intended as a gimmick, the language could have reasonable use in learning memory management."
CGOLOE,https://esolangs.org/wiki/CGOLOE,,,turing complete,unimplemented,cell-based,languages,CGOLOE is a esolang made by User:yayimhere. its name os short for Conways Game Of Life Oriented Esolang. its a esolang made to compute conways game of life and is therefore also turing complete(since it can compute conways game of life and conways game of life is turing complete)
Messenger,https://esolangs.org/wiki/Messenger,2024,,,implemented,cell-based,languages; two-dimensional languages,"Messenger is an esolang created by squareroot12621, partially inspired by Orca. Its goal is to be the most annoying esolang."
大香蕉,https://esolangs.org/wiki/大香蕉,2024,,,,,languages; brainfuck derivatives,大香蕉 is designed by PSTF.
Roko,https://esolangs.org/wiki/Roko,2024,imperative paradigm,,unusable for programming; unimplemented,,languages; joke languages; high-level,Roko is an information hazard and programming language derived from the thought experiment Roko's Basilisk. The reason Roko was conceptualized was to incentivize other people to implement an interpreter for Roko (so User:Duoquadragesimal could get street cred for creating an esolang without doing any of the hard work coding it - though this will come at the unfortunate cost of infinite suffering).
Esolangs.org,https://esolangs.org/wiki/Esolangs.org,2024,,turing complete,examples; examples,,meta-languages; languages,"Esolangs.org is an esolang which can be any or all esolangs. It has no specific anything (apart from a few built-in instructions) and may do anything any other language can, as long as it exists on esolangs.org."
EmojiLang in Chinese,https://esolangs.org/wiki/EmojiLang in Chinese,2024,,,,,languages; cjk,"In order to make it easier for some programmers to program, I designed this programming language. (That's what I've always done!)"
Sesos,https://esolangs.org/wiki/Sesos,2016,,turing complete,implemented,cell-based,languages; brainfuck derivatives; low-level,"Sesos is an esoteric programming language created by Github user @DennisMitchell in 2016. Semantically, it is almost equivalent to brainfuck, except that it allows slightly more types of loop. The main innovation is in the syntax, which repurposes sequences of commands that would otherwise be useless (such as incrementing a cell and then immediately decrementing it) in order to allow for a very highly compressed representation of typical brainfuck code."
Da0,https://esolangs.org/wiki/Da0,,,,,concurrent programming,languages,"Da0 is an esoteric coding language that leverages a duality/parallel system. It consists of a set of symbols, operations, and unique syntax designed for complex data manipulation, encryption, and parallel processing. Da0 integrates classical computing elements with advanced parallel processing capabilities."
EHTML,https://esolangs.org/wiki/EHTML,2024,,,implemented,,high-level; languages,"EHTML is a programming language created by User:CadenC that is very syntactically similar to HTML. It was created because HTML is not a programming language, despite what people unfamiliar with programming languages might think."
Sakana,https://esolangs.org/wiki/Sakana,2024,,unknown computational class,unimplemented,accumulator-based,languages; deadfish derivatives; cjk,"Sakana (魚) means 'fish' in Japanese. It is an esoteric programming language created by User:TheCanon2. Sakana is chiefly a derivative of Deadfish, but it also takes ideas from brainfuck and ΙΧΘΥΣ."
Kalgarn,https://esolangs.org/wiki/Kalgarn,2024,,turing complete,,,languages; cjk,It is also made to simplify the programming language.
Semiconkéfalos,https://esolangs.org/wiki/Semiconkéfalos,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck equivalents; brainfuck derivatives; low-level,"Semiconkéfalos is a portmanteau of ""semicolon"" and ""enkéfalos"" (brain). It is a variant of brainfuck created by User:TheCanon2, but the only valid symbols are the semicolon and Greek question mark."
Shinda Sakana,https://esolangs.org/wiki/Shinda Sakana,2024,,,implemented; output only; total; unusable for programming,accumulator-based,languages; deadfish derivatives; cjk,Shinda Sakana (死んだ魚) means 'dead fish' in Japanese. It is an esoteric programming language created by User:TheCanon2. Shinda Sakana is a Deadfish variant. Shinda Sakana was succeeded by Sakana.
Nulla,https://esolangs.org/wiki/Nulla,2024,,push-down automata,unimplemented,stack-based,joke languages; languages; low-level,"Nulla is Latin for 'zero'. Nulla is a one dimensional stack-based programming language created by User:TheCanon2. Nulla files have the .huh extension. It can be said that Nulla has zero valid symbols, for the entire program is in the file name and not in the actual file."
GRUBBY,https://esolangs.org/wiki/GRUBBY,1995,,unknown computational class,unimplemented,,languages,"GRUBBY is a name given to an underutilized graphical ""programming language"" by User:BoundedBeans."
Simoji,https://esolangs.org/wiki/Simoji,,,,implemented,,languages,"Simoji is a language made by User: Breck, built on top of Scroll Notation and Javascript."
Pass a symbol,https://esolangs.org/wiki/Pass a symbol,2024,declarative paradigm,unknown computational class,,cell-based,meta-languages; low-level; languages,"pass a symbol or PAS (lol) is an esolang where the whole idea is you can make your own commands. Although this should not be considered a metalang (I think), it is a category anyway."
H̱,https://esolangs.org/wiki/H̱,2024,,turing complete,unimplemented,stack-based,languages,"H̱ is a variant of Chicken created by User:TheCanon2. The only valid symbols in H̱ are h, H, ẖ, and H̱, the latter two are only used to indicate the beginning of an operation."
2dL,https://esolangs.org/wiki/2dL,,,,unimplemented,stack-based; cell-based,languages; two-dimensional languages,2dL is a 2d representation of lambda calculus.its not exactly lambda calculus but.. also it was created by User:Yayimhere
XRay,https://esolangs.org/wiki/XRay,2024,,,unimplemented,,languages; high-level,XRay is designed by PSTF. It is for expanding HQ9+.
$!,https://esolangs.org/wiki/$!,2024,,,implemented; output only; total; unusable for programming,accumulator-based,languages; low-level,$! is a minimalist esoteric programming language created by User:TheCanon2.
Nebulang,https://esolangs.org/wiki/Nebulang,2024,,unknown computational class; turing complete,unimplemented,,languages; generated by ai,Nebulang is designed by PSTF and his ChatGPT.
ʘ,https://esolangs.org/wiki/ʘ,,,,unimplemented,,languages; low-level,"ʘ is an Esolang similar to C, but every character is different."
Logig,https://esolangs.org/wiki/Logig,2024,object-oriented paradigm,unknown computational class,unimplemented,cell-based,languages; low-level,logig is a esolang made by Yayimhere when he realized that + and - can be used as 1 and 0 in logic gates. the name comes from a misspelling of logic when searching
()NEST(),https://esolangs.org/wiki/()NEST(),2024,,unknown computational class,unimplemented,cellular automata,two-dimensional languages; low-level; languages,()NEST() is a very simple two command esolang/Cellular automaton(CA) made by User:Yayimhere when he was bored. Also a ()NEST() program will not halt unless its told to by the code pointer
$+-?,https://esolangs.org/wiki/$+-?,2024,,turing complete,implemented,cell-based,languages,Content div not found
Ns2dL,https://esolangs.org/wiki/Ns2dL,,,,,,languages; two-dimensional languages,Ns2dL is a esolang made for the sake of making a 2d land that does NOT use a stack. Ns2dL uses a  a list because yes. Oh also its made by Yayimhere
Tau-Alpha-Upsilon,https://esolangs.org/wiki/Tau-Alpha-Upsilon,2024,,,unimplemented,,languages; deadfish derivatives,"Tau-Alpha-Upsilon, or simply TAU(pronounces [tʰay]), is designed by PSTF and it is to expand Deadfish."
XUS,https://esolangs.org/wiki/XUS,,,,,,languages,XUS is a set esolang made by User:Yayimhere to modify some sets
BMOW 1,https://esolangs.org/wiki/BMOW 1,2009,,,implemented,,languages; low-level,"BMOW 1 (standing for Big Mess o’ Wires 1) is a computer with custom CPU made of discrete logic chips, mostly 7400-series ones, wire-wrap and a microcode ROM.  It is the first (but not only) custom CPU hardware that BMOW created.  BMOW started to design the computer in 2007, started to build the hardware in 2008, and the hardware was complete in 2009."
"∞ bits, ℵ0 Bytes","https://esolangs.org/wiki/∞ bits, ℵ0 Bytes",2024,,,,,languages,"∞ bits, ℵ0 Bytes is designed by PSTF."
Amtu,https://esolangs.org/wiki/Amtu,2024,,turing complete; turing tarpits,implemented,cell-based,languages; low-level,"Amtu (derived from the name Alan Mathison Turing) is a cell-based Turing-complete esoteric programming language created by User:TheCanon2. Amtu is designed to be used as notation for Turing machines. Amtu's alphabet consists of three symbols, blank, 0, and 1."
Turtle just want to dig,https://esolangs.org/wiki/Turtle just want to dig,,,,,,languages; thematic; two-dimensional languages,Turtle just want to dig is a esolang based on how when User:Yayimhere(the creator of the esolang) was sitting with his turtle and it just began digging.
靈符,https://esolangs.org/wiki/靈符,2024,,turing complete,implemented,,languages; brainfuck equivalents; brainfuck derivatives; generated by ai,靈符 is designed by PSTF and his ChatGPT.
BrainSplited,https://esolangs.org/wiki/BrainSplited,2024,,turing tarpits; turing complete,,cell-based,languages; brainfuck derivatives; brainfuck equivalents; low-level; generated by ai,BrainSplited is designed by PSTF and his ChatGPT. It is extended Brainfuck.
Ruckfish,https://esolangs.org/wiki/Ruckfish,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives,"Ruckfish is an esoteric programming language created by User:TheCanon2. Ruckfish is a variant of Ruck and by extension a variant of brainfuck, but with syntax that resembles Deadfish."
彁,https://esolangs.org/wiki/彁,2024,,turing tarpits; turing complete,,cell-based,languages; brainfuck derivatives; brainfuck equivalents; low-level; cjk,彁 is designed by PSTF. It is Brainfuck deriative.
.Z.6.S.,https://esolangs.org/wiki/.Z.6.S.,2023; 2024,,,unimplemented,,languages; high-level,".Z.6.S.(if you remove the points and then you read it in Shidinn, you will get [zəʊs]) is designed by PSTF. It is completely use Greek to program."
Divmeq,https://esolangs.org/wiki/Divmeq,2024,,turing complete; turing tarpits,implemented,accumulator-based,languages,"Divmeq (derived from 'DIVide and branch, if Modulo EQuals 0') is a one-instruction Turing-complete esoteric programming language created by User:TheCanon2."
Turnip,https://esolangs.org/wiki/Turnip,,,,implemented,,languages; two-dimensional languages,"Turnip is a programming language for the 2D terminal-based Turing machine sim, Turnip. Turnip code defines the starting configuration of a machine, possible states and operations performed before switching states. Many operations can be done, inspired by Turing Kara."
Ichi,https://esolangs.org/wiki/Ichi,2024,,turing complete; turing tarpits,implemented,,languages,Ichi means 'one' in Japanese. Ichi is a one-instruction Turing-complete esoteric programming language created by User:TheCanon2.
SLet,https://esolangs.org/wiki/SLet,,,,unimplemented,,languages,<- Older version | Newest version
Genewrath,https://esolangs.org/wiki/Genewrath,2022,,,unimplemented,,languages,Genewrath is an esolang by User:BoundedBeans where all data is stored in generic types.
Uxntal,https://esolangs.org/wiki/Uxntal,,,,implemented,stack-based,languages,"Uxntal is the programming language for the Uxn virtual machine. It is a stack-based concatenative assembly style language designed to be highly portable and lightweight.
It has been ported to many platforms and is well suited for creating and sharing graphical and audio tools and games."
Normalcalc,https://esolangs.org/wiki/Normalcalc,2023,functional paradigm,turing complete; turing tarpits,implemented,,languages,"Normalcalc, designed by User:Itoh Shimon in 25-26 November 2023 (JST) and appeared in 31 July 2024 (JST), is a purely functional esoteric programming language based on combinatory logic and monadic IO."
Or++,https://esolangs.org/wiki/Or++,2024,,,implemented,stack-based,joke languages; languages,Or++ is a minimalist esoteric programming language created by User:TheCanon2. It is a superset of or.
FastBrain,https://esolangs.org/wiki/FastBrain,2024,,,,,languages; brainfuck derivatives,"FastBrain is an esolang invented by User:None1, inspired by bf. It is made because of one of the weaknesses in bf: Moving to another cell in the tape is slow."
( ),https://esolangs.org/wiki/( ),,object-oriented paradigm; imperative paradigm,,output only; unimplemented,,languages; low-level,[ ]  (pronounced praces or /pʰreɪsəs/) is a very simple and very stupid esolang made by User:Yayimhere
?Q?,https://esolangs.org/wiki/?Q?,,,turing complete; turing tarpits,,,languages; low-level,"This wiki is dedicated to the fostering and documentation of programming languages designed to be unique, difficult to program in, or just plain weird."
ARMLite,https://esolangs.org/wiki/ARMLite,,,,implemented,graphical output,low-level; languages,"ARMLite is an educational assembly language based on the ARM architecture, made by Peter Higginson with help from Richard Pawson."
哮,https://esolangs.org/wiki/哮,2024,,,,,languages; cjk,“哮”是由PSTF和他的ChatGPT共同创作的。
Jello,https://esolangs.org/wiki/Jello,,,,,stack-based,languages,"jello is a two stack esolang by User:Yayimhere where the only control flow is skip, reverse and evaluate"
HZ3funge,https://esolangs.org/wiki/HZ3funge,2024,,push-down automata; turing complete,,stack-based; multi-dimensional languages,languages; cjk,HZ3funge is an Esolang designed by PSTF. It is designed for even complex Befunge.
Semafor,https://esolangs.org/wiki/Semafor,2024,,turing complete; turing tarpits,no io; implemented,,languages; low-level,"Semafor is a minimalistic, Turing-complete esoteric programming language invented by User:Ttulka."
Too Many Variables!,https://esolangs.org/wiki/Too Many Variables!,,,,implemented,,languages,"Too Many Variables! is an esolang created by squareroot12621, but you can only assign variables."
ELBOG,https://esolangs.org/wiki/ELBOG,2024,,turing complete,implemented; usability unknown,,languages; joke languages; low-level,"ELBOG (Esoteric Language Based On Guessing) is an esoteric programming language created by User:CPNK during an acid trip. ELBOG programs act as guidance to an uncertain interpreter, which guesses on which operations to perform."
Smellcode,https://esolangs.org/wiki/Smellcode,,,,unimplemented,stack-based,languages,"Smellcode is like FALSE, but smellier.
The name is a play on the phrase ""code smell""."
Stars,https://esolangs.org/wiki/Stars,2024,functional paradigm,turing complete; turing tarpits,unimplemented,,languages,"Stars is a Turing-complete esoteric programming language created by User:TheCanon2. Stars' syntax is composed entirely of asterisks and spaces, and is based on lambda calculus."
CreativeScript,https://esolangs.org/wiki/CreativeScript,2024,,,implemented; total; unusable for programming; output only,,languages; high-level,"CreativeScript is a esolang made by Mihai Popa. It's the ""succesor"" of mLang. While mLang reads 1 line only from arguments, CreativeScript reads the full program from a file!"
CreativeASM,https://esolangs.org/wiki/CreativeASM,2024,,,implemented,,languages; high-level,"CreativeASM is a esolang made by Mihai Popa. It's the succesor of CreativeScript. It's a medium-level assembly-like language. It assembles (transpiles) to Batch, not to machine code."
EsoFmt,https://esolangs.org/wiki/EsoFmt,2024,,,,,markup languages; languages,EsoFmt is an esoteric markup language invented by User:None1 because he thinks that HTML is too verbose.
"Sorry, Marvin!","https://esolangs.org/wiki/Sorry, Marvin!",2024,,turing complete; turing tarpits,no io; implemented,,languages; low-level,"Sorry, Marvin! is a failed attempt to design a programming language to simulate Minsky register machines in the simplest way possible."
Turmin,https://esolangs.org/wiki/Turmin,2024,,turing complete; turing tarpits,implemented,,languages; low-level,Turmin is neither a Turing machine nor a Minsky machine. It is a language for programming Turing machines with a minimalistic yet convenient instruction set. The explicit state machine used traditionally in description numbers of Turing machines is conveniently replaced by conditional jumps borrowed from Minsky machines.
Hyperheptefunge-98,https://esolangs.org/wiki/Hyperheptefunge-98,2024,,,,,languages; two-dimensional languages,"Hyperheptefunge-98 is a version of Funge-98 on the heptagonal tiling of the 2D hyperbolic plane by User:BoundedBeans. Funge-98 is not a single language, but rather a template language for various topologies and number of dimensions, which the official ones are Unefunge-, Befunge-, and Trefunge-98. However, Hyperheptefunge-98 is impossible to directly specify as ""Funge-98 in the heptagonal tiling in hyperbolic 2D space"", as coordinates and many other concepts work differently."
BrainfXX,https://esolangs.org/wiki/BrainfXX,2024,,,implemented,,languages; meta-languages; brainfuck derivatives,"BrainfXX is an esolang, or a family of 256 brainfuck subsets, invented by User:None1."
EINE,https://esolangs.org/wiki/EINE,2024,,,implemented,,languages,"EINE is an esolang invented by User:None1, inspired by NULL. EINE means 1 in German, as opposed to NULL, which means 0."
One-Instruction Cyclic Tag,https://esolangs.org/wiki/One-Instruction Cyclic Tag,2024,,turing complete; turing tarpits,no io; implemented,queue-based,languages,One-Instruction Cyclic Tag (OICT) is an esoteric language for programming cyclic tag systems using just a single instruction. OICT is inspired by Bitwise Cyclic Tag and its alphabet is also composed solely of two symbols: 0 and 1.
... Bottles of beer on the wall,https://esolangs.org/wiki/... Bottles of beer on the wall,2024,,turing complete,unusable for programming,,brainfuck derivatives; languages; brainfuck equivalents,"... Bottles of beer on the wall is an even more brain-exploding brainfuck derivative by User:None1. It is like Bottles of beer on the wall. But instead of numbers, you use dots!"
綠酒千杯腸已爛,https://esolangs.org/wiki/綠酒千杯腸已爛,2024,,turing complete,unusable for programming,,brainfuck derivatives; languages; cjk; brainfuck equivalents,綠酒千杯腸已爛 is an Esolang designed by PSTF which inspired from Bottles of beer on the wall.
Imprecision,https://esolangs.org/wiki/Imprecision,2024,,unknown computational class,non-interactive io; implemented,,languages,"Imprecision is an esoteric programming language created by User:ais523 in 2024, inspired by Blindfolded Arithmetic."
操脑,https://esolangs.org/wiki/操脑,2024,,turing complete,implemented,,cjk; brainfuck derivatives; brainfuck equivalents; languages,"操脑 is a derivative of ReverseFuck but in Chinese. It's created by User:None1, and it is a member of Trivial brainfuck substitution."
PostScriptum,https://esolangs.org/wiki/PostScriptum,2024,,,,,languages,"PostScriptum is an esolang invented by User:None1, it is an esolang which uses English abbrevations for tokens."
WhatLang,https://esolangs.org/wiki/WhatLang,2024,,turing complete,implemented,stack-based,languages,"WhatLang is a stack-based programming language created by User:YufangTSTSU (Yufang). Written in TypeScript, its first interpreter can be installed as a private (not published on npm) plugin for Koishi, a bot framework for QQ and other instant messaging platforms, and used by invoking the bot command whatlang or simply sending the code prefixed with a '¿'. Currently there exist web ports of the WhatLang interpreter that can be used in a browser; however, these ports do not include Koishi related functions, and currently do not provide other means of reading input from the user yet."
CALC,https://esolangs.org/wiki/CALC,,,turing complete,implemented,,languages,"CALC is an esoteric programming language based on the kinds of expression which a simple scientific calculator with memory allows. It was designed to demonstrate that the Casio FX-991EX can do arbitrary computation, despite being ""non-programmable""."
Enwokenment,https://esolangs.org/wiki/Enwokenment,2024,functional paradigm,turing complete,implemented,,languages,Enwokenment is an esolang invented by User:Hakerh400 in 2024.
掉爆子脑,https://esolangs.org/wiki/掉爆子脑,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk; low-level,掉爆子脑 is an Esolang that designed and implemented by PSTF.
Bouncy Counters,https://esolangs.org/wiki/Bouncy Counters,2024,,turing complete; turing tarpits,implemented,,languages; low-level,"Bouncy Counters is an esoteric programming language created by User:ais523 in 2024, as a reversible counter machine that is a Turing tarpit."
Savage Operator,https://esolangs.org/wiki/Savage Operator,2024,functional paradigm,unknown computational class,unimplemented,,languages,Savage Operator is a esolang created by User:Yayimhere inspired by Unlambda. as it was developed it became more focused on creating the actual lambdas and less about using the actual operators. so it becomes more like Action symbol
Istoriya,https://esolangs.org/wiki/Istoriya,2022,,,implemented,,languages,Istoriya is a language based on Ukrainian history lines from External independent evaluation for Ukrainian schools. The language is not Turing-complete.
^中文,https://esolangs.org/wiki/^中文,2024,,,unimplemented,,languages; high-level; cjk,^中文 is a special language for all Chinese people!
BubbleLang,https://esolangs.org/wiki/BubbleLang,2024,,turing complete,,,languages; high-level,BubbleLang is designed by PSTF.
死鱼,https://esolangs.org/wiki/死鱼,2024,,,implemented,,languages; joke languages; cjk; deadfish derivatives,死鱼 is designed by PSTF.
Basic,https://esolangs.org/wiki/Basic,2024,,,implemented,,languages; high-level,Basic is a pseudonatural esolang by Mihai Popa. It transpiles to BASIC!
PIX,https://esolangs.org/wiki/PIX,2024,,,output only; implemented; total; unusable for programming,,markup languages; languages,"PIX is a esolang made by Mihai Popa. He wants a ""fantasy console"" that can only show graphics, so he came with a idea, and he called it PIX!"
菜就多练一一,https://esolangs.org/wiki/菜就多练一一,2024,,,implemented,,languages; joke languages; cjk; deadfish derivatives,菜就多练-- is an Esolang designed by PSTF. It is ACTUALLY derived from deadfish.
ΞΘΔΦΩ,https://esolangs.org/wiki/ΞΘΔΦΩ,,,,unimplemented,,languages,"ΞΘΔΦΩ(XQDFW, or Xithedephou) is designed by PSTF to use another type of picture to show ぬいぐるみアート script."
思,https://esolangs.org/wiki/思,2024,,turing complete,,,languages,思 is designed by PSTF.
Path,https://esolangs.org/wiki/Path,2022,,turing complete,implemented,stack-based,languages; two-dimensional languages; low-level,Path is a two-dimensional esoteric programming language invented by User:masalt in Python 3.
Bigfun,https://esolangs.org/wiki/Bigfun,2024,,,total,,languages,Bigfun is a total esolang created by User:Pro465 in 2024 to represent fast-growing functions and large numbers. It is based on minsky machines and the fast growing hierarchy.
Turn Left,https://esolangs.org/wiki/Turn Left,2024,,turing complete; turing tarpits,no io; implemented,,languages; low-level; two-dimensional languages,"Turn Left is a reversible esoteric programming language in the 1L family which was originally created by ""averaging"" two other esoteric programming languages, Turnfunge and Nopstacle. The person who did so, User:ais523, is not convinced that averaging esoteric programming languages is a meaningful or even definable concept in most cases, but it seemed to make sense here (in Turnfunge, the IP turns if it has a non-NOP behind it; in Nopstacle, it turns if it has a non-NOP in front of it; and in Turn Left, it turns exactly on the non-NOP)."
Deadfish(),https://esolangs.org/wiki/Deadfish(),2024,,,output only,,languages; deadfish derivatives,"Deadfish[] is an esolang invented by User:None1, it is Deadfish but with while loops."
死鱼……吗？,https://esolangs.org/wiki/死鱼……吗？,2024,,,implemented,,languages; joke languages; cjk; deadfish derivatives,死鱼……吗？(sǐ yú ...... ma?) is designed by PSTF.
嘭！哐！叮！呲！咣！+,https://esolangs.org/wiki/嘭！哐！叮！呲！咣！+,2024,,push-down automata,unimplemented,,languages; cjk,"嘭！哐！叮！呲！咣！+ is an esolang invented by User:None1, it is an extension to 嘭！哐！叮！呲！咣！."
!!brainfeed++,https://esolangs.org/wiki/!!brainfeed++,2024,,turing complete,unimplemented,queue-based; cell-based,languages,!!brainfeed++ is an extension of !!brainfeed designed by User:BoundedBeans.
Genetic,https://esolangs.org/wiki/Genetic,2024,,unknown computational class,implemented,,languages; thematic,"Genetic, as you could have guessed by its name, is an esolang that only uses the letters in DNA (which is A, C, G, and T). The basic part is designed by User:iddi01."
!Romanian,https://esolangs.org/wiki/!Romanian,2024,,,unimplemented,,languages; high-level,"!Romanian is a esolang made by Mihai Popa. It's taken from the pseudocode language in many Romanian code books, but altered slightly."
Feed the Chaos,https://esolangs.org/wiki/Feed the Chaos,2024,,unknown computational class,usability unknown; no io; implemented,,languages; low-level,"Feed the Chaos is an esoteric programming language created by User:ais523 in 2024. It was inspired by some thoughts that User:int-e had about Sloopy, although the resulting language ended up somewhat more like a Stun Step derivative. The language was explicitly constructed to have a particular computational class, that has empirically been frequently observed in busy beaver champions and candidates, that is not known to be Turing-complete but also is not known to be Turing-incomplete."
10 1,https://esolangs.org/wiki/10 1,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives; brainfuck equivalents; cjk; low-level,10 1 is an Esolang designed by PSTF.
Delta Relay,https://esolangs.org/wiki/Delta Relay,2024,,turing complete; turing tarpits,no io; unimplemented,,languages; low-level,"Delta Relay is an esoteric programming language that User:ais523 had been thinking about on and off since around 2018, but did not fully work out the details until 2024. The final version of the language was created as a result of two language ideas converging: one was to create a simplification/tarpitification of Flow of Holes via removing the distinction between primary and secondary connections (instead using the values of the counters to guide control flow), and the other was to create a language similar to The Waterfall Model, but where counters had a self-reset of 0 (which requires substantial changes to the language to function correctly)."
Grid logic,https://esolangs.org/wiki/Grid logic,2024,,,implemented,,languages,Grid logic is an esolang invented by User:Hakerh400 in 2024.
IP,https://esolangs.org/wiki/IP,2024,,unknown computational class,implemented,stack-based,languages; low-level,IP is a stack-based esolang designed by User:iddi01 in which programs looks somewhat like IP addresses.
Poetic (Mihai Popa),https://esolangs.org/wiki/Poetic (Mihai Popa),2024,,turing tarpits; turing complete,unimplemented,cell-based,languages; brainfuck derivatives,Poetic is a esolang made by Mihai Popa. The programs are made of English text.
Kmid,https://esolangs.org/wiki/Kmid,2024,,turing complete; turing tarpits,no io; implemented,cellular automata,languages,"Kmid is a language created by User:Arctenik as an abstraction of Kwert. It can be thought of as a kind of string-rewriting system or cellular automaton. There are two variants of the language: Kmidt, the ""table"" variant, which is somewhat easier to write with; and Kmidi, the ""index"" variant, which can compile a bit more directly to Kwert."
LFSR CPU,https://esolangs.org/wiki/LFSR CPU,,,,implemented,,languages; low-level,"This language consists of a Virtual Machine (VM) specification for a ""weird""
processor, and less of a language. What makes this processor weird is that
instead of using a normal Program Counter (PC), one that increments with an adder to
move to the next instruction, this processor uses a Linear Feedback Shift
Register (LFSR) instead to move to the next instructions. This means
instructions are executed in a Pseudo Random order and the execution order
appears obfuscated or scrambled."
Execode,https://esolangs.org/wiki/Execode,2024,functional paradigm,turing complete,implemented,stack-based; deque-based,languages,"Execode is an esoteric programming language created in 2024 by User:iddi01 carefully designed to be easy to program in, easy to implement, easy to read, and to have ability in code golfing. Those are, of course, only relative, since maximizing one of them means losing the others. Execode is stack-based, although it can be considered as deque-based due to the reversing command."
1quad,https://esolangs.org/wiki/1quad,2024,,unknown computational class,,cell-based,languages; low-level,1quad is an esolang based on Conway's Game of Life created by User:Yayimhere. it may seem random but it was made such that 1 was a quad
Thupit,https://esolangs.org/wiki/Thupit,,,turing complete; turing tarpits,no io; implemented,,languages; low-level,"Thupit is an esoteric programming language that has been used in numerous Turing-completeness proofs over the years, but apparently without ever being named or fully specified. It was finally named by User:ais523 in 2024, but had existed long before that time, and it is unknown which year it was first used."
!한국어,https://esolangs.org/wiki/!한국어,2023; 2024,,,unimplemented,,languages; cjk; high-level,"!한국어 is designed by PSTF, and it is tottally and directly derivatived from ！中文 and ^English."
Brain-Flāk,https://esolangs.org/wiki/Brain-Flāk,2024,,turing complete,implemented,,languages; cjk,Brain-Flāk is an esolang invented by User:None1 and derived from Brain-Flak. It uses Chinese characters as commands.
BIITI,https://esolangs.org/wiki/BIITI,2024,,turing complete,implemented,stack-based,languages; low-level,"BIITI (Beauty Is In The Implementation) is an esoteric programming language created by DolphyWind. It is inspired by 8086 assembly and Forth. A typical BIITI program is a list of commands separated by the \n character, that gets executed on the BIITI virtual machine."
StackBBQ,https://esolangs.org/wiki/StackBBQ,2024,,,implemented; total,stack-based,languages; low-level,"StackBBQ is an Esolang designed by User:ZCX islptng. 
BBQ stands for Binary-Based Quine(because you have to write quine to perform loops)
It's a stack-based binary language, heavily inspired by bct and 1.
Yes, Binary. The program consists of 0s and 1s. And the stack is too."
FLOLCODE,https://esolangs.org/wiki/FLOLCODE,2024,,turing complete,unimplemented,,languages,"FLOLCODE (Formal LOLCODE) is a esolang by Mihai Popa. It's a formal version of LOLCODE. After seeing that LOLCODE is weird, I made this."
Peano,https://esolangs.org/wiki/Peano,2024,,,,,languages,"Peano is an esolang invented by User:None1, inspired by Peano arithmetic."
RiLOLCODE,https://esolangs.org/wiki/RiLOLCODE,2024,,turing complete,,,languages; thematic,RiLOLCODE is designed by PSTF. It is LOLCODE but even more formal than FLOLCODE by mihai Popa.
欢声笑语,https://esolangs.org/wiki/欢声笑语,2024,,,,,languages; cjk,"欢声笑语 or LLOLCODE is an esolang invented by User:None1 and User:PrySigneToFry and inspired by RiLOLCODE which is inspired by FLOLCODE which is inspired by LOLCODE, but...in Classical Chinese(This is also inspired by wenyan)."
PythBrSc,https://esolangs.org/wiki/PythBrSc,2024,,turing complete,unimplemented,,languages; high-level,PythBrSc (Python with Brackets and Semicolons) is a esolang by Mihai Popa.
CCLOLCODE,https://esolangs.org/wiki/CCLOLCODE,2024,,turing complete,,,languages; thematic; cjk,CCLOLCODE is designed by PSTF. It is LOLCODE but in……文言文.
SKR,https://esolangs.org/wiki/SKR,2024,functional paradigm,turing complete,implemented,,languages,SKR is an esolang invented by User:Hakerh400 in 2024.
Alivehyperfish,https://esolangs.org/wiki/Alivehyperfish,2024,,turing complete,,cell-based,languages,This is a deadfish extension by User:ZCX islptng.
Brainwhirl,https://esolangs.org/wiki/Brainwhirl,2024,,turing complete; turing tarpits,implemented,cell-based,languages; brainfuck derivatives,"Brainwhirl is a BF derivative invented by User:Ttulka. It can be considered a turning tarpit, as its execution is based on spinning a wheel. In Brainwhirl, each instruction means ""power"" that rotates the wheel by a specific number of steps, relative to its current orientation. Like a standard wheel, it rotates clockwise, meaning that the following instruction is determined by moving backward."
Assemble,https://esolangs.org/wiki/Assemble,2024,,,unimplemented,,languages; low-level,Assemble is an Esolang designed by PSTF to expand the original Assembly language.
Synth,https://esolangs.org/wiki/Synth,2022,,,implemented,stack-based,languages,Synth is an esoteric programming language created by User:Avethenoul as a digital synthesizer. It was largely inspired by Befunge.
Rеlаng,https://esolangs.org/wiki/Rеlаng,2024,,unknown computational class,implemented; no io,,,"Rеlаng is the simplest regular expression based language. Programs consists of two strings, each cycle, both strings replaces the first match using the other string as a regular еxpression with the other string, or remain unchanged if there are no matches. Execution terminates when both strings do not change after one cycle. This may not happen: many expressions tend to grow quadraticаlly. When displaying a program, it is recommended to display it as a single string with the two strings separated by easily recognizable separators such as [][][] or █████."
PyChr,https://esolangs.org/wiki/PyChr,2024,,turing complete,,,languages,"PyChr is an esoteric subset of the Python language discovered in 2024 that uses only 6 symbols in the source code. They are: (, ), +, ==, chr and eval. A symbol is an undivisible unit of code, meaning that you can write == but never = alone. You can't either write for example an c without being part of chr, etc...
It works pretty similarly to PyFuck/PyStr. However, it isn't as interesting as it is very repetitive."
Stakc,https://esolangs.org/wiki/Stakc,,,,unimplemented,,,"Stakc (pronounced ""Stacks"") - is a Stack-based Virtual machine (VM), which is intended as an intermediate representation (IR) between a high-level, non-esoteric language and an esoteric one."
PyFuck (kuangkzh),https://esolangs.org/wiki/PyFuck (kuangkzh),2022,,turing complete,,,languages,"PyFuck is an esolang invented by GitHub user kuangkzh (Zhihuan Kuang) in 2022 (according to the edit time of codegolf stackexchange answer and GitHub repo) that uses only 8 characters: exc('%0), but it can run any Python program.
By heading to the GitHub repository and testing the code, we can see that the Hello, World! program takes 100,663,695 characters or 100MB. It is avaliable here"
Chronos,https://esolangs.org/wiki/Chronos,2024,,,implemented,stack-based,languages; two-dimensional languages,"Chronos is a two dimensional esoteric programming language based off of Befunge, with the ability to time travel."
Mеmоrу,https://esolangs.org/wiki/Mеmоrу,2024,,unknown computational class,implemented,,languages; thematic,"Mеmоrу (or Remember, uniсоdе-free), is created by user:iddi01, inspired by the fact that to-do lists sometimes contain ""Remember x"" entries for very important stuff, and sometimes you need to add more entries to Remember that entry, eventually causing an infinite loop."
Pick,https://esolangs.org/wiki/Pick,2024,,turing complete,,,languages,Pick is an esolang invented by User:None1. It is based on randomly picking stuff.
JIT,https://esolangs.org/wiki/JIT,2024,,unknown computational class,no io; unimplemented,,low-level,"JIT is a OISC made by User:Robotosaurus6502 somewhere in early November 2024, JIT's one instruction is ""Jump If and Toggle"". JIT toggles single bits, The bit it toggles is determined by the first argument, And it jumps to the location determined by the second argument if the result was false, Else it just continues to the next instruction.
You can write code in memory and jump to memory, So this is Self modifying.
This is based off ""Turing tumble"" so it's probably turing complete but I'm not sure."
Variambda,https://esolangs.org/wiki/Variambda,2024,,unknown computational class,unimplemented,,languages,This is another esolang by islptng.
👀,https://esolangs.org/wiki/👀,,,,,,languages,"👀 is an interpreted esoteric programming language made by User:Kloodi, Written in Python.It is based on using emojis similar to calling functions in a normal programming language."
PopFuck,https://esolangs.org/wiki/PopFuck,2024,,,implemented,cell-based,languages; low-level; brainfuck derivatives,"PopFuck is a esolang made by Mihai Popa. It's a smaller and a ""crappier"" version of Brainfuck."
FilesAndFolders!,https://esolangs.org/wiki/FilesAndFolders!,2024,,,,stack-based,languages,"FilesAndFolders! (FAF!) is a esoteric programming language created by LDRK11. FAF! isn't a normal esolang that you just pass a file for the interpreter to read. Instead FAF! as the name suggests, uses folders (and sometimes files). An interpreter in TypeScript is available on GitHub: https://github.com/ldrk11/FilesAndFolders."
Prime Notary,https://esolangs.org/wiki/Prime Notary,,,,,cell-based,languages,Prime Notary is an esolang by user Ϫ. It is based on the principle of prime notation.
CJProg,https://esolangs.org/wiki/CJProg,2024,,,,,languages; cjk; high-level; generated by ai,CJProg is an Esolang invented by PSTF and his AI-friend Wenxinyiyan.
Pararedox,https://esolangs.org/wiki/Pararedox,2024,,,,,languages,Pararedox is an text-based esolang that is focused on Redefining and Redoing
Deadshark,https://esolangs.org/wiki/Deadshark,2024,,,output only; implemented,,languages; deadfish derivatives,"Deadshark  (v1.1) is a language based on Deadfish, created by User:Win7HE."
Estrita,https://esolangs.org/wiki/Estrita,2024,,turing complete,unimplemented,,high-level,"Estrita (Portugese for Strict) is a satirical superset of Lua 5.4, and a direct parody of TypeScript. The language enforces extremely strict typing with no room for error, in direct contrast to Lua's otherwise lenient and flexible structure."
RuleLoader,https://esolangs.org/wiki/RuleLoader,,,,implemented,,languages; meta-languages,"RuleLoader is the algorithm used to simulate .rule files describing different types of CA, also known as rule tables and rule trees. A description of the file format is provided in Golly's built-in help.[1][2]"
EchoLang (None1),https://esolangs.org/wiki/EchoLang (None1),2024,,,implemented; total,,languages; joke languages; brainfuck derivatives; generated by ai,EchoLang is an esolang prompted by User:None1 and invented by Cursor AI:
Splits,https://esolangs.org/wiki/Splits,2024,,,implemented,,languages,Splits is an esoteric programming language invented by Dr Laurie Tratt in 2024.
Wasaya,https://esolangs.org/wiki/Wasaya,2024,,turing complete,,,languages; high-level,Wasaya is a Programming Language designed by PSTF.
